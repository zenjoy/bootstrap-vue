{"version":3,"file":"bootstrap-vue.common.js","sources":["../lib/utils/observe-dom.js","../lib/utils/warn.js","../lib/mixins/dropdown.js","../lib/mixins/link.js","../lib/components/button-toolbar.vue","../lib/components/modal.vue","../lib/components/pagination.vue","../lib/directives/_target.js","../lib/directives/scrollspy.js","../lib/utils/array.js","../lib/utils/object.js","../lib/components/alert.vue","../lib/mixins/clickout.js","../lib/mixins/listen-on-root.js","../lib/mixins/form.js","../lib/mixins/form-checkbox.js","../lib/mixins/form-custom.js","../lib/mixins/form-options.js","../lib/mixins/popover.js","../lib/components/link.vue","../lib/components/breadcrumb.vue","../lib/components/button.vue","../lib/components/button-group.vue","../lib/components/input-group.vue","../lib/components/input-group-addon.vue","../lib/components/input-group-button.vue","../lib/components/card.vue","../lib/components/card-group.vue","../lib/components/carousel.vue","../lib/components/carousel-slide.vue","../lib/components/collapse.vue","../lib/components/dropdown.vue","../lib/components/dropdown-item.vue","../lib/components/dropdown-item-button.vue","../lib/components/dropdown-divider.vue","../lib/components/dropdown-header.vue","../lib/components/dropdown-select.vue","../lib/components/form.vue","../lib/components/form-fieldset.vue","../lib/components/form-checkbox.vue","../lib/components/form-radio.vue","../lib/components/form-input-static.vue","../lib/components/form-input.vue","../lib/components/form-file.vue","../lib/components/form-select.vue","../lib/components/jumbotron.vue","../lib/components/badge.vue","../lib/components/list-group.vue","../lib/components/list-group-item.vue","../lib/components/media.vue","../lib/components/nav.vue","../lib/components/nav-item.vue","../lib/components/nav-item-dropdown.vue","../lib/components/nav-toggle.vue","../lib/components/navbar.vue","../lib/components/nav-text.vue","../lib/components/nav-form.vue","../lib/utils/range.js","../lib/components/popover.vue","../lib/components/progress.vue","../lib/components/table.vue","../lib/components/tabs.vue","../lib/components/tab.vue","../lib/components/tooltip.vue","../lib/directives/toggle.js","../lib/directives/modal.js","../lib/index.js"],"sourcesContent":["\nimport { assign } from '../utils/object';\n/**\n * Observe a DOM element changes, falls back to eventListener mode\n * @param {Element} el The DOM element to observe\n * @param {Function} callback callback to be called on change\n * @param {object} [opts={childList: true, subtree: true}] observe options\n * @see http://stackoverflow.com/questions/3219758\n */\nexport default function observeDOM(el, callback, opts) {\n    const MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\n    const eventListenerSupported = window.addEventListener;\n\n    if (MutationObserver) {\n        // Define a new observer\n        const obs = new MutationObserver(mutations => {\n            if (mutations[0].addedNodes.length > 0 || mutations[0].removedNodes.length > 0) {\n                callback();\n            }\n        });\n\n        // Have the observer observe foo for changes in children\n        obs.observe(el, assign({childList: true, subtree: true}, opts));\n    } else if (eventListenerSupported) {\n        el.addEventListener('DOMNodeInserted', callback, false);\n        el.addEventListener('DOMNodeRemoved', callback, false);\n    }\n}\n","/**\n * Log a warning message to the console with bootstrap-vue formatting sugar.\n * @param {string} message\n */\nfunction warn(message) {\n    console.warn(`[Bootstrap-Vue warn]: ${message}`)\n}\n\nexport default warn\n","import clickOut from './clickout';\nimport listenOnRootMixin from './listen-on-root'\nimport { from as arrayFrom } from '../utils/array'\n\n// Determine if an HTML element is visible - Faster than CSS check\nfunction isVisible(el) {\n    return el && (el.offsetWidth > 0 || el.offsetHeight > 0);\n}\n\n// Return an Array of visible items\nfunction filterVisible(els) {\n    return els ? els.filter(el => isVisible(el)) : [];\n}\n\n// Dropdown item CSS selectors\nconst ITEM_SELECTOR = '.dropdown-item:not(.disabled):not([disabled])';\nconst HEADER_SELECTOR = '.dropdown-header';\nconst ALL_SELECTOR = [ITEM_SELECTOR, HEADER_SELECTOR].join(',');\n\nexport default {\n    mixins: [listenOnRootMixin],\n    props: {\n        id: {\n            type: String\n        },\n        text: {\n            type: String,\n            default: ''\n        },\n        dropup: {\n            type: Boolean,\n            default: false\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        right: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            visible: false\n        };\n    },\n    created() {\n        const listener = el => {\n            if (el !== this) {\n                this.visible = false;\n            }\n        };\n\n        // To keep one dropdown opened on page\n        this.listenOnRoot('shown::dropdown', listener);\n\n        // Hide when clicked on links\n        this.listenOnRoot('clicked::link', listener);\n    },\n    mounted: clickOut.mounted,\n    destroyed: clickOut.destroyed,\n    watch: {\n        visible(state, old) {\n            if (state === old) {\n                return; // Avoid duplicated emits\n            }\n\n            if (state) {\n                this.emitOnRoot('shown::dropdown', this);\n                /*\n                 If this is a touch-enabled device we add extra\n                 empty mouseover listeners to the body's immediate children;\n                 only needed because of broken event delegation on iOS\n                 https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n                 */\n                if (typeof document !== 'undefined' && 'ontouchstart' in document.documentElement) {\n                    const children = arrayFrom(document.body.children);\n                    children.forEach(el => {\n                        el.addEventListener('mouseover', this.noop);\n                    });\n                }\n            } else {\n                this.emitOnRoot('hidden::dropdown', this);\n                /*\n                 If this is a touch-enabled device we remove the extra\n                 empty mouseover listeners we added for iOS support\n                 */\n                if (typeof document !== 'undefined' && 'ontouchstart' in document.documentElement) {\n                    const children = arrayFrom(document.body.children);\n                    children.forEach(el => {\n                        el.removeEventListener('mouseover', this.noop);\n                    });\n                }\n            }\n        }\n    },\n    methods: {\n        ...clickOut.methods,\n        noop() {\n            // Do nothing event handler (used in visible watch)\n        },\n        clickOutListener() {\n            this.visible = false;\n        },\n        click(e) {\n            if (this.disabled) {\n                this.visible = false;\n                return;\n            }\n            if (this.split) {\n                this.$emit('click', e);\n                this.emitOnRoot('shown::dropdown', this);\n            } else {\n                this.toggle();\n            }\n        },\n        toggle() {\n            if (this.disabled) {\n                this.visible = false;\n                return;\n            }\n            this.visible = !this.visible;\n            if (this.visible) {\n                this.$nextTick(function () {\n                    // Clear any items that may have active state left\n                    this.clearItems();\n                    // Focus first visible non-disabled item\n                    const item = this.getFirstItem();\n                    if (item) {\n                        this.focusItem(0, [item]);\n                    }\n                });\n            }\n        },\n        onTab() {\n            if (this.visible) {\n                this.visible = false;\n            }\n        },\n        onEsc(e) {\n            if (this.visible) {\n                this.visible = false;\n                e.preventDefault();\n                e.stopPropagation();\n                this.$nextTick(function () {\n                    // Return focus to original trigger button\n                    let el;\n                    if (this.split && this.$refs.toggle) {\n                        el = this.$refs.toggle.$el || this.$refs.toggle;\n                    } else {\n                        el = this.$refs.button.$el || this.$refs.button;\n                    }\n                    if (el && el.focus) {\n                        el.focus();\n                    }\n                });\n            }\n        },\n        focusNext(e, up) {\n            if (!this.visible) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            this.$nextTick(() => {\n                const items = this.getItems();\n                if (items.length < 1) {\n                    return;\n                }\n                let index = items.indexOf(e.target);\n                if (up && index > 0) {\n                    index--;\n                } else if (!up && index < items.length - 1) {\n                    index++;\n                }\n                if (index < 0) {\n                    index = 0;\n                }\n                this.focusItem(index, items);\n            });\n        },\n        focusHovered(e) {\n            if (!this.visible) {\n                return;\n            }\n            this.$nextTick(() => {\n                const items = this.getItems();\n                if (items.length < 1) {\n                    return;\n                }\n                const index = items.indexOf(e.target);\n                if (index > -1) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    this.focusItem(index, items);\n                }\n            });\n        },\n        focusItem(idx, items) {\n            items.forEach((el, i) => {\n                if (i === idx) {\n                    el.classList.add('active');\n                    el.focus();\n                } else {\n                    el.classList.remove('active');\n                }\n            });\n        },\n        clearItems() {\n            const items = this.getItems();\n            items.forEach(el => {\n                el.classList.remove('active');\n            });\n        },\n        getItems() {\n            // Get all items and headers\n            return filterVisible(arrayFrom(this.$refs.menu.querySelectorAll(ALL_SELECTOR)));\n        },\n        getFirstItem() {\n            // Get the first non-header non-disabled item\n            let item = filterVisible(arrayFrom(this.$refs.menu.querySelectorAll(ITEM_SELECTOR)))[0];\n            if (!item) {\n                // If no items then try a header\n                item = filterVisible(arrayFrom(this.$refs.menu.querySelectorAll(HEADER_SELECTOR)))[0];\n            }\n            return item || null;\n        }\n    }\n};\n","import { warn } from '../utils';\nimport { arrayIncludes } from '../utils/array';\nimport { keys } from '../utils/object';\n// Props compatible with vue-router\n// https://github.com/vuejs/vue-router/blob/dev/src/components/link.js\nexport const props = {\n    active: {\n        type: Boolean,\n        default: false\n    },\n\n    activeClass: {\n        type: String,\n        default: \"active\"\n    },\n\n    append: {\n        type: Boolean,\n        default: false\n    },\n\n    disabled: {\n        type: Boolean,\n        default: false\n    },\n\n    event: {\n        type: [String, Array],\n        default: \"click\"\n    },\n\n    exact: {\n        type: Boolean,\n        default: false\n    },\n\n    exactActiveClass: {\n        type: String,\n        default: \"active\"\n    },\n\n    href: {\n        type: String,\n        default: \"#\"\n    },\n\n    rel: {\n        type: String,\n        default: null\n    },\n\n    replace: {\n        type: Boolean,\n        default: false\n    },\n\n    routerTag: {\n        type: String,\n        default: \"a\"\n    },\n\n    tag: {\n        type: String,\n        default: null\n    },\n\n    target: {\n        type: String,\n        default: \"_self\"\n    },\n\n    to: {\n        type: [String, Object],\n        default: null\n    }\n};\n\nexport const computed = {\n    linkProps() {\n        return keys(props).reduce((memo, prop) => {\n            memo[prop] = this[prop];\n\n            return memo;\n        }, {});\n    },\n\n    isRouterLink() {\n        return Boolean(this.$router && this.to && !this.disabled);\n    },\n\n    _href() {\n        if (this.disabled) {\n            return \"#\";\n        }\n\n        // If href explicitly provided\n        if (this.href) {\n            return this.href;\n        }\n\n        // Fallback to `to` prop\n        if (this.to && typeof this.to === \"string\") {\n            return this.to;\n        }\n    },\n\n    computedRel() {\n        if (this.target === \"_blank\" && this.rel === null) {\n            return \"noopener\";\n        }\n        return this.rel || null;\n    },\n\n    componentTag(){\n        if (this.tag) {\n            warn('<b-link> \"tag\" property is deprecated, please use \"routerTag\" property instead.');\n\n            return this.tag;\n        }\n\n        return this.routerTag;\n    },\n\n    linkClassObject() {\n        return [\n            this.active ? (this.exact ? this.exactActiveClass : this.activeClass) : null,\n            this.disabled ? \"disabled\" : null\n        ];\n    }\n};\n\nexport const methods = {\n    linkClick(e) {\n        if (!this.disabled) {\n            this.$root.$emit(\"clicked::link\", this);\n            this.$emit(\"click\", e);\n        } else {\n            e.stopPropagation();\n        }\n\n        if (!this.isRouterLink && this._href === \"#\") {\n            // stop scroll-to-top behavior\n            e.preventDefault();\n        }\n    }\n};\n\nexport default {\n    props,\n    computed,\n    methods\n};\n\nexport function pickLinkProps(...propsToPick) {\n    return keys(props).reduce((memo, prop) => {\n        if (arrayIncludes(propsToPick, prop)) {\n            memo[prop] = props[prop];\n        }\n\n        return memo;\n    }, {});\n}\n\nexport function omitLinkProps(...propsToOmit) {\n    return keys(props).reduce((memo, prop) => {\n        if (!arrayIncludes(propsToOmit, prop)) {\n            memo[prop] = props[prop];\n        }\n\n        return memo;\n    }, {});\n}\n","<template>\n    <div :class=\"classObject\"\n         role=\"toolbar\"\n         :tabindex=\"keyNav ? '0' : null\"\n         @focusin.self=\"focusFirst\"\n         @keydown.left=\"focusNext($event,true)\"\n         @keydown.up=\"focusNext($event,true)\"\n         @keydown.right=\"focusNext($event,false)\"\n         @keydown.down=\"focusNext($event,false)\"\n         @keydown.shift.left=\"focusFirst($event)\"\n         @keydown.shift.up=\"focusFirst($event)\"\n         @keydown.shift.right=\"focusLast($event)\"\n         @keydown.shift.down=\"focusLast($event)\"\n    >\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    import { from as arrayFrom } from '../utils/array'\n    const ITEM_SELECTOR = [\n        '.btn:not(.disabled):not([disabled])',\n        '.form-control:not(.disabled):not([disabled])',\n        'select:not(.disabled):not([disabled])',\n        'input[type=\"checkbox\"]:not(.disabled)',\n        'input[type=\"radio\"]:not(.disabled)'\n    ].join(',');\n\n    // Determine if an HTML element is visible - Faster than CSS check\n    function isVisible(el) {\n        return el && (el.offsetWidth > 0 || el.offsetHeight > 0);\n    }\n\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'btn-toolbar',\n                    (this.justify && !this.vertical) ? 'justify-content-between' : ''\n                ];\n            }\n        },\n        props: {\n            justify: {\n                type: Boolean,\n                default: false\n            },\n            keyNav: {\n                type: Boolean,\n                default: false\n            }\n        },\n        methods: {\n            setItemFocus(item) {\n                this.$nextTick(() => {\n                    item.focus();\n                });\n            },\n            focusNext(e, prev) {\n                if (!this.keyNav) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                const items = this.getItems();\n                if (items.length < 1) {\n                    return;\n                }\n                let index = items.indexOf(e.target);\n                if (prev && index > 0) {\n                    index--;\n                } else if (!prev && index < items.length - 1) {\n                    index++;\n                }\n                if (index < 0) {\n                    index = 0;\n                }\n                this.setItemFocus(items[index]);\n            },\n            focusFirst(e) {\n                if (!this.keyNav) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                const items = this.getItems();\n                if (items.length > 0) {\n                    this.setItemFocus(items[0]);\n                }\n            },\n            focusLast(e) {\n                if (!this.keyNav) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                const items = this.getItems();\n                if (items.length > 0) {\n                    this.setItemFocus([items.length - 1]);\n                }\n            },\n            getItems() {\n                let items = arrayFrom(this.$el.querySelectorAll(ITEM_SELECTOR));\n                items.forEach(item => {\n                    // Ensure tabfocus is -1 on any new elements\n                    item.tabIndex = -1;\n                });\n                return items.filter(el => isVisible(el));\n            }\n        },\n        mounted() {\n            if (this.keyNav) {\n                // Pre-set the tabindexes if the markup does not include tabindex=\"-1\" on the toolbar items\n                this.getItems();\n            }\n        }\n    };\n</script>\n","<template>\n    <div>\n        <transition-group enter-class=\"hidden\"\n                          enter-to-class=\"\"\n                          enter-active-class=\"\"\n                          @after-enter=\"focusFirst\"\n                          leave-class=\"show\"\n                          leave-active-class=\"\"\n                          leave-to-class=\"hidden\"\n        >\n            <div :class=\"['modal',{fade: !noFade, show: is_visible}]\"\n                 :id=\"id || null\"\n                 role=\"dialog\"\n                 ref=\"modal\"\n                 key=\"modal\"\n                 v-show=\"is_visible\"\n                 @click=\"onClickOut()\"\n                 @keyup.esc=\"onEsc()\"\n            >\n\n                <div :class=\"['modal-dialog','modal-'+size]\">\n                    <div class=\"modal-content\"\n                         tabindex=\"-1\"\n                         role=\"document\"\n                         ref=\"content\"\n                         :aria-labelledby=\"(hideHeader || !id) ? null : (id + '__BV_header_')\"\n                         :aria-describedby=\"id ? (id + '__BV_body_') : null\"\n                         @click.stop\n                    >\n\n                        <header class=\"modal-header\"\n                                ref=\"header\"\n                                :id=\"id ? (id + '__BV_header_') : null\"\n                                v-if=\"!hideHeader\"\n                        >\n                            <slot name=\"modal-header\">\n                                <h5 :is=\"titleTag\" class=\"modal-title\">\n                                    <slot name=\"modal-title\">{{title}}</slot>\n                                </h5>\n                                <button type=\"button\"\n                                        v-if=\"!hideHeaderClose\"\n                                        class=\"close\"\n                                        :aria-label=\"headerCloseLabel\"\n                                        @click=\"hide\"\n                                >\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </slot>\n                        </header>\n\n                        <div class=\"modal-body\" ref=\"body\" :id=\"id ? (id + '__BV_body_') : null\">\n                            <slot></slot>\n                        </div>\n\n                        <footer class=\"modal-footer\" ref=\"footer\" v-if=\"!hideFooter\">\n                            <slot name=\"modal-footer\">\n                                <b-btn v-if=\"!okOnly\"\n                                       variant=\"secondary\"\n                                       :size=\"buttonSize\"\n                                       @click=\"hide(false)\"\n                                ><slot name=\"modal-cancel\">{{ closeTitle }}</slot></b-btn>\n                                <b-btn variant=\"primary\"\n                                       :size=\"buttonSize\"\n                                       :disabled=\"okDisabled\"\n                                       @click=\"hide(true)\"\n                                ><slot name=\"modal-ok\">{{ okTitle }}</slot></b-btn>\n                            </slot>\n                        </footer>\n\n                    </div>\n                </div>\n            </div>\n\n            <div key=\"modal-backdrop\"\n                 :class=\"['modal-backdrop',{fade: !noFade, show: is_visible}]\"\n                 v-if=\"is_visible\"\n            ></div>\n        </transition-group>\n    </div>\n</template>\n\n<style scoped>\n    .hidden {\n        opacity: 0 !important;\n    }\n\n    /* Make modal display as block instead of inline style, and because Vue's v-show deletes inline \"display\" style */\n    .modal {\n        display: block;\n    }\n</style>\n\n<script>\n    import bBtn from './button.vue';\n    import { listenOnRootMixin } from '../mixins';\n    import { from as arrayFrom } from '../utils/array'\n\n    const FOCUS_SELECTOR = [\n        'button:not([disabled])',\n        'input:not([disabled])',\n        'select:not([disabled])',\n        'textarea:not([disabled])',\n        'a:not([disabled]):not(.disabled)',\n        '[tabindex]:not([disabled]):not(.disabled)'\n    ].join(',');\n\n    // Determine if an HTML element is visible - Faster than CSS check\n    function isVisible(el) {\n        return el && (el.offsetWidth > 0 || el.offsetHeight > 0);\n    }\n\n    // Find the first visible element contained in a given root element\n    function findFirstVisible(root, selector) {\n        if (!root || !root.querySelectorAll || !selector) {\n            return null;\n        }\n        let els = arrayFrom(root.querySelectorAll(selector));\n\n        // IE 10 & 11 do not support native array.find()\n        // So we try native find first, then fall back to a loop\n        let el = els.find ? els.find(el => isVisible(el)) : null;\n        for (let i = 0; !el && i < els.length; i++) {\n            if (isVisible(els[i])) {\n                el = els[i];\n            }\n        }\n        return el;\n    }\n\n    export default {\n        mixins: [listenOnRootMixin],\n        components: {bBtn},\n        data() {\n            return {\n                is_visible: false,\n                return_focus: this.returnFocus || null\n            };\n        },\n        model: {\n            prop: 'visible',\n            event: 'change'\n        },\n        computed: {\n            body() {\n                if (typeof document !== 'undefined') {\n                    return document.querySelector('body');\n                }\n            }\n        },\n        watch: {\n            visible(new_val, old_val) {\n                if (new_val === old_val) {\n                    return;\n                }\n\n                if (new_val) {\n                    this.show();\n                } else {\n                    this.hide();\n                }\n            }\n        },\n        props: {\n            id: {\n                type: String,\n                default: null\n            },\n            title: {\n                type: String,\n                default: ''\n            },\n            titleTag: {\n                type: String,\n                default: 'h5'\n            },\n            size: {\n                type: String,\n                default: 'md'\n            },\n            buttonSize: {\n                type: String,\n                default: 'md'\n            },\n            noFade: {\n                type: Boolean,\n                default: false\n            },\n            noCloseOnBackdrop: {\n                type: Boolean,\n                default: false\n            },\n            noCloseOnEsc: {\n                type: Boolean,\n                default: false\n            },\n            noAutoFocus: {\n                type: Boolean,\n                default: false\n            },\n            noEnforceFocus: {\n                type: Boolean,\n                default: false\n            },\n            hideHeader: {\n                type: Boolean,\n                default: false\n            },\n            hideFooter: {\n                type: Boolean,\n                default: false\n            },\n            hideHeaderClose: {\n                type: Boolean,\n                default: false\n            },\n            okOnly: {\n                type: Boolean,\n                default: false\n            },\n            okDisabled: {\n                type: Boolean,\n                default: false\n            },\n            visible: {\n                type: Boolean,\n                default: false\n            },\n            returnFocus: {\n                default: null\n            },\n            headerCloseLabel: {\n                type: String,\n                default: 'Close'\n            },\n            closeTitle: {\n                type: String,\n                default: 'Close'\n            },\n            okTitle: {\n                type: String,\n                default: 'OK'\n            }\n        },\n        methods: {\n            show() {\n                if (this.is_visible) {\n                    return;\n                }\n                this.$emit('show');\n                this.is_visible = true;\n                this.$root.$emit('shown::modal', this.id);\n                this.body.classList.add('modal-open');\n                this.$emit('shown');\n                this.$emit('change', true);\n                if (typeof document !== 'undefined') {\n                    // Guard against infinite focus loop\n                    document.removeEventListener('focusin', this.enforceFocus, false);\n                    // Handle constrained focus\n                    document.addEventListener('focusin', this.enforceFocus, false);\n                }\n            },\n            hide(isOK) {\n                if (!this.is_visible) {\n                    return;\n                }\n\n                // Create event object\n                let canceled = false;\n                const e = {\n                    isOK,\n                    cancel() {\n                        canceled = true;\n                    }\n                };\n\n                // Emit events\n                this.$emit('change', false);\n                this.$emit('hide', e);\n\n                if (isOK === true) {\n                    this.$emit('ok', e);\n                } else if (isOK === false) {\n                    this.$emit('cancel', e);\n                }\n\n                // Hide if not canceled\n                if (!canceled) {\n                    if (typeof document !== 'undefined') {\n                        // Remove focus handler\n                        document.removeEventListener('focusin', this.enforceFocus, false);\n                        // Return focus to original button/trigger element if provided\n                        this.returnFocusTo();\n                    }\n                    this.is_visible = false;\n                    this.$root.$emit('hidden::modal', this.id);\n                    this.$emit('hidden', e);\n                    this.body.classList.remove('modal-open');\n                }\n            },\n            onClickOut() {\n                // If backdrop clicked, hide modal\n                if (this.is_visible && !this.noCloseOnBackdrop) {\n                    this.hide();\n                }\n            },\n            onEsc() {\n                // If ESC pressed, hide modal\n                if (this.is_visible && !this.noCloseOnEsc) {\n                    this.hide();\n                }\n            },\n            focusFirst() {\n                // Don't try and focus if we are SSR\n                if (typeof document === 'undefined') {\n                    return;\n                }\n                this.$nextTick(() => {\n                    // If activeElement is child of content, no need to change focus\n                    if (document.activeElement && this.$refs.content.contains(document.activeElement)) {\n                        return;\n                    }\n\n                    let el;\n                    if (!this.noAutoFocus) {\n                        // Focus the modal's first focusable item, searching body, footer, then header\n                        if (this.$refs.body) {\n                            el = findFirstVisible(this.$refs.body, FOCUS_SELECTOR);\n                        }\n                        if (!el && this.$refs.footer) {\n                            el = findFirstVisible(this.$refs.footer, FOCUS_SELECTOR);\n                        }\n                        if (!el && this.$refs.header) {\n                            el = findFirstVisible(this.$refs.header, FOCUS_SELECTOR);\n                        }\n                    }\n                    if (!el) {\n                        // Focus the modal content wrapper\n                        el = this.$refs.content;\n                    }\n                    if (el && el.focus) {\n                        el.focus();\n                    }\n                });\n            },\n            returnFocusTo() {\n                // Prrefer returnFocus prop over event specified value\n                let el = this.returnFocus || this.return_focus || null;\n\n                if (el) {\n                    if (typeof el === 'string') {\n                        // CSS Selector\n                        el = document.querySelector(el);\n                    }\n                    if (el && el.$el && typeof el.$el.focus === 'function') {\n                        // Component vm reference\n                        el.$el.focus();\n                    } else if (el && typeof el.focus === 'function') {\n                        // Plain element\n                        el.focus();\n                    }\n                }\n            },\n            enforceFocus(e) {\n                // If focus leaves modal, bring it back\n                // Event Listener bound on document\n                if (!this.noEnforceFocus &&\n                    this.is_visible &&\n                    document !== e.target &&\n                    this.$refs.content &&\n                    this.$refs.content !== e.target &&\n                    !this.$refs.content.contains(e.target)) {\n                    this.$refs.content.focus();\n                }\n            },\n            showHandler(id, triggerEl) {\n                if (id === this.id) {\n                    this.return_focus = triggerEl || null;\n                    this.show();\n                }\n            },\n            hideHandler(id) {\n                if (id === this.id) {\n                    this.hide();\n                }\n            }\n        },\n        created() {\n            this.listenOnRoot('show::modal', this.showHandler);\n            this.listenOnRoot('hide::modal', this.hideHandler);\n        },\n        mounted() {\n            if (this.visible === true) {\n                this.show();\n            }\n        },\n        destroyed() {\n            // Make sure event listener is rmoved\n            if (typeof document !== 'undefined') {\n                document.removeEventListener('focusin', this.enforceFocus, false);\n            }\n        }\n    };\n\n</script>\n","<template>\n    <ul :class=\"['pagination',btnSize]\"\n        role=\"group\"\n        :aria-disabled=\"disabled ? 'true' : 'false'\"\n        :aria-label=\"ariaLabel ? ariaLabel : null\"\n        @focusin.self=\"focusCurrent\"\n        @keydown.left.prevent=\"focusPrev\"\n        @keydown.right.prevent=\"focusNext\"\n        @keydown.shift.left.prevent=\"focusFirst\"\n        @keydown.shift.right.prevent=\"focusLast\"\n    >\n\n        <!-- Goto First Page button -->\n        <template v-if=\"!hideGotoEndButtons\">\n            <li v-if=\"isActive(1) || disabled\" class=\"page-item disabled\" aria-hidden=\"true\">\n                <span class=\"page-link\" v-html=\"firstText\"></span>\n            </li>\n            <li v-else class=\"page-item\">\n                <a class=\"page-link\"\n                   :aria-label=\"labelFirstPage\"\n                   :aria-controls=\"ariaControls || null\"\n                   href=\"#\"\n                   tabindex=\"-1\"\n                   @click.prevent=\"setPage($event, 1)\"\n                   @keydown.enter.prevent=\"setPage($event, 1)\"\n                   @keydown.space.prevent=\"setPage($event, 1)\"\n                ><span aria-hidden=\"true\" v-html=\"firstText\"></span></a>\n            </li>\n        </template>\n\n        <!-- Goto Previous page button -->\n        <li v-if=\"isActive(1) || disabled\" class=\"page-item disabled\" aria-hidden=\"true\">\n            <span class=\"page-link\" v-html=\"prevText\"></span>\n        </li>\n        <li v-else class=\"page-item\">\n            <a class=\"page-link\"\n               :aria-label=\"labelPrevPage\"\n               :aria-controls=\"ariaControls || null\"\n               href=\"#\"\n               tabindex=\"-1\"\n               @click.prevent=\"setPage($event, currentPage - 1)\"\n               @keydown.enter.prevent=\"setPage($event, currentPage - 1)\"\n               @keydown.space.prevent=\"setPage($event, currentPage - 1)\"\n            ><span aria-hidden=\"true\" v-html=\"prevText\"></span></a>\n        </li>\n\n        <!-- First Ellipsis Bookend -->\n        <li v-if=\"showFirstDots\" class=\"page-item disabled hidden-xs-down\" role=\"separator\">\n            <span class=\"page-link\" v-html=\"ellipsisText\"></span>\n        </li>\n\n        <!-- Pages links -->\n        <li v-for=\"page in pageList\"\n            :class=\"pageItemClasses(page)\"\n            :key=\"page.number\"\n        >\n            <a :class=\"pageLinkClasses(page)\"\n               :disabled=\"disabled\"\n               :aria-disabled=\"disabled ? 'true' : 'false'\"\n               :aria-label=\"labelPage + ' ' + page.number\"\n               :aria-current=\"isActive(page) ? 'true' : null\"\n               :aria-posinset=\"page.number\"\n               :aria-setsize=\"numberOfPages\"\n               :aria-controls=\"ariaControls || null\"\n               href=\"#\"\n               tabindex=\"-1\"\n               @click.prevent=\"setPage($event, page.number)\"\n               @keydown.enter.prevent=\"setPage($event, page.number)\"\n               @keydown.space.prevent=\"setPage($event, page.number)\"\n            >{{ page.number }}</a>\n        </li>\n\n        <!-- Last Ellipsis Bookend -->\n        <li v-if=\"showLastDots\" class=\"page-item disabled hidden-xs-down\" role=\"separator\">\n            <span class=\"page-link\" v-html=\"ellipsisText\"></span>\n        </li>\n\n        <!-- Goto Next page -->\n        <li v-if=\"isActive(numberOfPages) || disabled\" class=\"page-item disabled\" aria-hidden=\"true\">\n            <span class=\"page-link\" v-html=\"nextText\"></span>\n        </li>\n        <li v-else class=\"page-item\">\n            <a class=\"page-link\"\n               :aria-label=\"labelNextPage\"\n               :aria-controls=\"ariaControls || null\"\n               href=\"#\"\n               tabindex=\"-1\"\n               @click.prevent=\"setPage($event, currentPage + 1)\"\n               @keydown.enter.prevent=\"setPage($event, currentPage + 1)\"\n               @keydown.space.prevent=\"setPage($event, currentPage + 1)\"\n            ><span aria-hidden=\"true\" v-html=\"nextText\"></span></a>\n        </li>\n\n        <!-- Goto Last page -->\n        <template v-if=\"!hideGotoEndButtons\">\n            <li v-if=\"isActive(numberOfPages) || disabled\" class=\"page-item disabled\" aria-hidden=\"true\">\n                <span class=\"page-link\" v-html=\"lastText\"></span>\n            </li>\n            <li v-else class=\"page-item\">\n                <a class=\"page-link\"\n                   :aria-label=\"labelLastPage\"\n                   :aria-controls=\"ariaControls || null\"\n                   href=\"#\"\n                   tabindex=\"-1\"\n                   @click.prevent=\"setPage($event, numberOfPages)\"\n                   @keydown.enter.prevent=\"setPage($event, numberOfPages)\"\n                   @keydown.space.prevent=\"setPage($event, numberOfPages)\"\n                ><span aria-hidden=\"true\" v-html=\"lastText\"></span></a>\n            </li>\n        </template>\n    </ul>\n</template>\n\n<script>\nimport { from as arrayFrom } from '../utils/array'\nimport range from '../utils/range'\n// Determine if an HTML element is visible - Faster than CSS check\nfunction isVisible(el) {\n    return el && (el.offsetWidth > 0 || el.offsetHeight > 0);\n}\n\n// Make an array of N to N+X\nfunction makePageArray(startNum, numPages) {\n    return range(numPages).map(function(value, index){\n        return { number: index + startNum, className: null };\n    });\n}\n\n// Threshold of limit size when we start/stop showing ellipsis\nconst ELLIPSIS_THRESHOLD = 3;\n\nexport default {\n    data() {\n        return {\n            showFirstDots: false,\n            showLastDots: false,\n            currentPage: this.value\n        };\n    },\n    computed: {\n        numberOfPages() {\n            const result = Math.ceil(this.totalRows / this.perPage);\n            return (result < 1) ? 1 : result;\n        },\n        btnSize() {\n            return this.size ? `pagination-${this.size}` : '';\n        },\n        pageList() {\n            // Sanity checks\n            if (this.currentPage > this.numberOfPages) {\n              this.currentPage = this.numberOfPages;\n            } else if (this.currentPage < 1) {\n              this.currentPage = 1;\n            }\n\n            // - Hide first ellipsis marker\n            this.showFirstDots = false;\n            // - Hide last ellipsis marker\n            this.showLastDots = false;\n\n            let numLinks = this.limit;\n            let startNum = 1;\n\n            if (this.numberOfPages <= this.limit) {\n                // Special Case: Less pages available than the limit of displayed pages\n                numLinks = this.numberOfPages;\n            } else if (this.currentPage < (this.limit - 1) && this.limit > ELLIPSIS_THRESHOLD) {\n                // We are near the beginning of the page list\n                if (!this.hideEllipsis) {\n                    numLinks = this.limit - 1;\n                    this.showLastDots = true;\n                }\n            } else if ((this.numberOfPages - this.currentPage + 2) < this.limit && this.limit > ELLIPSIS_THRESHOLD) {\n                // We are near the end of the list\n                if (!this.hideEllipsis) {\n                    this.showFirstDots = true;\n                    numLinks = this.limit - 1;\n                }\n                startNum = this.numberOfPages - numLinks + 1;\n            } else {\n                // We are somewhere in the middle of the page list\n                if (this.limit > ELLIPSIS_THRESHOLD && !this.hideEllipsis) {\n                    this.showFirstDots = true;\n                    this.showLastDots = true;\n                    numLinks = this.limit - 2;\n                }\n                startNum = this.currentPage - Math.floor(numLinks / 2);\n            }\n\n            // Sanity checks\n            if (startNum < 1) {\n                startNum = 1;\n            } else if (startNum > (this.numberOfPages - numLinks)) {\n                startNum = this.numberOfPages - numLinks + 1;\n            }\n\n            // Generate list of page numbers\n            const pages = makePageArray(startNum, numLinks);\n\n            // We limit to a total of 3 page buttons on small screens\n            // Ellipsis will also be hidden on small screens\n            if (pages.length > 3) {\n                const idx = this.currentPage - startNum;\n                if (idx === 0) {\n                    // Keep leftmost 3 buttons visible\n                    for (let i = 3; i < pages.length; i++) {\n                        pages[i].className = 'hidden-xs-down';\n                    }\n                } else if (idx === pages.length - 1) {\n                    // Keep rightmost 3 buttons visible\n                    for (let i = 0; i < pages.length - 3; i++) {\n                        pages[i].className = 'hidden-xs-down';\n                    }\n                } else {\n                    // hide left button(s)\n                    for (let i = 0; i < idx - 1; i++) {\n                        pages[i].className = 'hidden-xs-down';\n                    }\n                    // hide right button(s)\n                    for (let i = pages.length - 1; i > idx + 1; i--) {\n                        pages[i].className = 'hidden-xs-down';\n                    }\n                }\n            }\n\n            return pages;\n        }\n    },\n    methods: {\n        isActive(page) {\n            return page === this.currentPage;\n        },\n        pageItemClasses(page) {\n            const active = this.isActive(page.number);\n            return [\n                'page-item',\n                this.disabled ? 'disabled' : '',\n                active ? 'active' : '',\n                page.className\n            ];\n        },\n        pageLinkClasses(page) {\n            const active = this.isActive(page.number);\n            return [\n                'page-link',\n                this.disabled ? 'disabled' : '',\n                active ? 'active' : ''\n            ];\n        },\n        setPage(e, num) {\n            if (this.disabled) {\n                e.preventDefault();\n                e.stopPropagation();\n                return;\n            }\n            if (num > this.numberOfPages) {\n                this.currentPage = this.numberOfPages;\n            } else if (num < 1) {\n                this.currentpage = 1;\n            } else {\n                this.currentPage = num;\n            }\n            this.$nextTick(() => {\n                // Keep the current button focused if possible\n                if (isVisible(e.target) && e.target.focus) {\n                    e.target.focus();\n                } else {\n                    this.focusCurrent();\n                }\n            });\n            this.$emit('change', this.currentPage);\n        },\n        getButtons() {\n            const buttons = arrayFrom(this.$el.querySelectorAll('a.page-link'));\n            // Return only buttons that are visible\n            return buttons.filter(btn => isVisible(btn));\n        },\n        setBtnFocus(btn) {\n            this.$nextTick(() => {\n                btn.focus();\n            });\n        },\n        focusFirst() {\n            const btn = this.getButtons().find(el => !el.disabled);\n            if (btn && btn.focus && btn !== document.activeElement) {\n                this.setBtnFocus(btn);\n            }\n        },\n        focusLast() {\n            const btn = this.getButtons().reverse().find(el => !el.disabled);\n            if (btn && btn.focus && btn !== document.activeElement) {\n                this.setBtnFocus(btn);\n            }\n        },\n        focusCurrent() {\n            const btn = this.getButtons().find(el => parseInt(el.getAttribute('aria-posinset'), 10) === this.currentPage);\n            if (btn && btn.focus) {\n                this.setBtnFocus(btn);\n            } else {\n                // Fallback if current page is not in button list\n                this.focusFirst();\n            }\n        },\n        focusPrev() {\n            const buttons = this.getButtons();\n            const idx = buttons.indexOf(document.activeElement);\n            if (idx > 0 && !buttons[idx - 1].disabled && buttons[idx - 1].focus) {\n                this.setBtnFocus(buttons[idx - 1]);\n            }\n        },\n        focusNext() {\n            const buttons = this.getButtons();\n            const idx = buttons.indexOf(document.activeElement);\n            const cnt = buttons.length - 1;\n            if (idx < cnt && !buttons[idx + 1].disabled && buttons[idx + 1].focus) {\n                this.setBtnFocus(buttons[idx + 1]);\n            }\n        }\n    },\n    watch: {\n        currentPage(newPage, oldPage) {\n            if (newPage !== oldPage) {\n                this.$emit('input', newPage);\n            }\n        },\n        value(newValue, oldValue) {\n            if (newValue !== oldValue) {\n                this.currentPage = newValue;\n            }\n        }\n    },\n    props: {\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        value: {\n            type: Number,\n            default: 1\n        },\n        limit: {\n            type: Number,\n            default: 5\n        },\n        perPage: {\n            type: Number,\n            default: 20\n        },\n        totalRows: {\n            type: Number,\n            default: 20\n        },\n        size: {\n            type: String,\n            default: 'md'\n        },\n        hideGotoEndButtons: {\n            type: Boolean,\n            default: false\n        },\n        ariaLabel: {\n            type: String,\n            default: 'Pagination'\n        },\n        labelFirstPage: {\n            type: String,\n            default: 'Goto first page'\n        },\n        firstText: {\n            type: String,\n            default: '&laquo;'\n        },\n        labelPrevPage: {\n            type: String,\n            default: 'Goto previous page'\n        },\n        prevText: {\n            type: String,\n            default: '&lsaquo;'\n        },\n        labelNextPage: {\n            type: String,\n            default: 'Goto next page'\n        },\n        nextText: {\n            type: String,\n            default: '&rsaquo;'\n        },\n        labelLastPage: {\n            type: String,\n            default: 'Goto last page'\n        },\n        lastText: {\n            type: String,\n            default: '&raquo;'\n        },\n        labelPage: {\n            type: String,\n            default: 'Goto page'\n        },\n        hideEllipsis: {\n            type: Boolean,\n            default: false\n        },\n        ellipsisText: {\n            type: String,\n            default: '&hellip;'\n        },\n        ariaControls: {\n            type: String,\n            default: null\n        }\n    }\n};\n</script>\n\n<style scoped>\n    .page-item {\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n    }\n    .page-item.disabled {\n        cursor: not-allowed;\n        opacity: .65;\n    }\n</style>\n","import { keys } from '../utils/object';\nconst all_listen_types = {hover: true, click: true, focus: true};\n\nexport default function targets (vnode, binding, listen_types, fn) {\n\n    const targets = keys(binding.modifiers || {})\n        .filter(t => !all_listen_types[t]);\n\n    if (binding.value) {\n        targets.push(binding.value);\n    }\n\n    const listener = () => {\n        fn({targets, vnode});\n    };\n\n    keys(all_listen_types).forEach(type => {\n        if (listen_types[type] || binding.modifiers[type]) {\n            vnode.elm.addEventListener(type, listener);\n        }\n    });\n\n    // Return the list of targets\n    return targets;\n}\n","import { isArray, from as arrayFrom } from '../utils/array';\nimport { assign, keys } from '../utils/object';\nconst inBrowser = typeof window !== 'undefined';\nconst isServer = !inBrowser;\n\n/*\n * Polyfill for Element.closest() for IE :(\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill\n */\n\nif (inBrowser && window.Element && !Element.prototype.closest) {\n    Element.prototype.closest = function (s) {\n        const matches = (this.document || this.ownerDocument).querySelectorAll(s);\n        let el = this;\n        let i;\n        do {\n            i = matches.length;\n            // eslint-disable-next-line no-empty\n            while (--i >= 0 && matches.item(i) !== el) {\n            }\n        } while ((i < 0) && (el = el.parentElement));\n        return el;\n    };\n}\n\n/*\n * Constants / Defaults\n */\n\nconst NAME = 'v-b-scrollspy';\nconst EVENT = 'scrollspy::activate';\nconst BVSS = '__BV_ScrollSpy__';\n\nconst Default = {\n    element: 'body',\n    offset: 10,\n    method: 'auto',\n    throttle: 100\n};\n\nconst DefaultType = {\n    element: '(string|element)',\n    offset: 'number',\n    method: 'string',\n    throttle: 'number'\n};\n\nconst ClassName = {\n    DROPDOWN_ITEM: 'dropdown-item',\n    DROPDOWN_MENU: 'dropdown-menu',\n    DROPDOWN_TOGGLE: 'dropdown-toggle',\n    NAV_LINK: 'nav-link',\n    LIST_ITEM: 'list-group-item',\n    ACTIVE: 'active'\n};\n\nconst Selector = {\n    ACTIVE: '.active',\n    NAV_LIST_GROUP: '.nav, .list-group',\n    NAV: '.nav',\n    LIST_GROUP: '.list-group',\n    NAV_LINKS: '.nav-link',\n    LIST_ITEMS: '.list-group-item',\n    DROPDOWN: '.dropdown',\n    DROPDOWN_ITEMS: '.dropdown-item',\n    DROPDOWN_TOGGLE: '.dropdown-toggle'\n};\n\nconst OffsetMethod = {\n    OFFSET: 'offset',\n    POSITION: 'position'\n};\n\n/*\n * DOM Utility Methods\n */\n\nfunction isElement(obj) {\n    return obj.nodeType;\n}\n\n// Wrapper for Element.closest to emulate jQuery's closest (sorta)\nfunction closest(element, selector) {\n    const el = element.closest(selector);\n    return el === element ? null : el;\n}\n\n// Query Selector All wrapper\nfunction $QSA(selector, element) {\n    if (!element) {\n        element = document;\n    }\n    if (!isElement(element)) {\n        return [];\n    }\n    return arrayFrom(element.querySelectorAll(selector));\n}\n\n// Query Selector wrapper\nfunction $QS(selector, element) {\n    if (!element) {\n        element = document;\n    }\n    if (!isElement(element)) {\n        return null;\n    }\n    return element.querySelector(selector) || null;\n}\n\n/*\n * Utility Methods\n */\n\n// Get Vue VM from element\nfunction getVm(el) {\n    return el ? el.__vue__ : null;\n}\n\n// Better var type detection\nfunction toType(obj) {\n    return ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n}\n\n// Check config properties for expected types\nfunction typeCheckConfig(componentName, config, configTypes) {\n    for (const property in configTypes) {\n        if (Object.prototype.hasOwnProperty.call(configTypes, property)) {\n            const expectedTypes = configTypes[property];\n            const value = config[property];\n            const valueType = value && isElement(value) ? 'element' : toType(value);\n\n            if (!new RegExp(expectedTypes).test(valueType)) {\n                console.error(\n                    componentName + ': Option \"' + property + '\" provided type \"' +\n                    valueType + '\" but expected type \"' + expectedTypes + '\"'\n                );\n            }\n        }\n    }\n}\n\n/*\n * ScrollSpy Class\n */\n\nfunction ScrollSpy(el, binding) {\n    // The element that contains the nav-links et al\n    this._$el = el;\n    // The selectors to find the nav-links\n    this._selector = [\n        Selector.NAV_LINKS,\n        Selector.LIST_ITEMS,\n        Selector.DROPDOWN_ITEMS\n    ].join(',');\n    // Start off with default configurtion\n    this._config = assign({}, Default);\n    // Target HREF IDs and their offsets\n    this._offsets = [];\n    this._targets = [];\n    // The currently active target (as an HREF id)\n    this._activeTarget = null;\n    // Curent scroll height (for detecting document height changes)\n    this._scrollHeight = 0;\n    // Reference to the $root VM so we can spew events\n    this._$root = null;\n    // Reference to our throttled resize timeout\n    this._resizeTimeout = null;\n\n    // Process bindings/config\n    this.updateConfig(binding);\n}\n\n/*\n * ScrollSpy Public methods\n */\n\n// Update config\nScrollSpy.prototype.updateConfig = function (binding) {\n    // If Argument, assume element ID\n    if (binding.arg) {\n        // Element ID specified as arg. We must pre-pend #\n        this._config.element = '#' + binding.arg;\n    }\n\n    // Process modifiers\n    keys(binding.modifiers).forEach(val => {\n        if (/^\\d+$/.test(val)) {\n            // Offest value\n            this._config.offset = parseInt(val, 10);\n        } else if (/^(auto|position|offset)$/.test(val)) {\n            // Offset method\n            this._config.method = val;\n        }\n    });\n\n    // Process value\n    if (typeof binding.value === 'string') {\n        // Value is  a CSS ID or selector\n        this._config.element = binding.value;\n    } else if (typeof binding.value === 'number') {\n        // Value is offset\n        this._config.offset = Math.round(binding.value);\n    } else if (typeof binding.value === 'object') {\n        // Value is config object\n        keys(binding.value).filter(k => Boolean(DefaultType[k])).forEach(k => {\n            this._config[k] = binding.value[k];\n        });\n    }\n\n    // Check the config and log error to console. Unknown options are ignored\n    typeCheckConfig(NAME, this._config, DefaultType);\n\n    // Get Vue instance from element\n    const vm = getVm(this._$el);\n    if (vm && vm.$root) {\n        this._$root = vm.$root;\n    }\n\n    // Return ourself for easy chaining\n    return this;\n};\n\n// Turn on event listener\nScrollSpy.prototype.listen = function () {\n    const scroller = this._getScroller();\n    if (scroller) {\n        if (scroller.tagName !== 'BODY') {\n            scroller.addEventListener('scroll', this, false);\n        }\n        window.addEventListener('scroll', this, false);\n        window.addEventListener('orientationchange', this, false);\n        window.addEventListener('resize', this, false);\n    }\n\n    // Return ourself for easy chaining\n    return this;\n};\n\n// Turn off event listener\nScrollSpy.prototype.unListen = function () {\n    const scroller = this._getScroller();\n    if (scroller) {\n        if (scroller.tagName !== 'BODY') {\n            scroller.removeEventListener('scroll', this, false);\n        }\n        window.removeEventListener('scroll', this, false);\n        window.removeEventListener('orientationchange', this, false);\n        window.removeEventListener('resize', this, false);\n    }\n\n    // Return ourself for easy chaining\n    return this;\n};\n\n// Refresh the positions of the target IDs\nScrollSpy.prototype.refresh = function () {\n    const scroller = this._getScroller();\n    if (!scroller) {\n        return this;\n    }\n\n    const autoMethod = scroller.tagName === 'BODY' ? OffsetMethod.OFFSET : OffsetMethod.POSITION;\n    const offsetMethod = this._config.method === 'auto' ? autoMethod : this._config.method;\n    const offsetBase = offsetMethod === OffsetMethod.OFFSET ? 0 : this._getScrollTop();\n\n    this._offsets = [];\n    this._targets = [];\n    this._scrollHeight = this._getScrollHeight();\n\n    // Find all nav link/dropdown/list-item links in our element\n    $QSA(this._selector, this._$el).map(el => {\n        const href = el.getAttribute('href');\n        if (href && href.charAt(0) === '#' && href !== '#' && href.indexOf('#/') === -1) {\n            const target = $QS(href, scroller);\n            if (!target) {\n                return null;\n            }\n            const bcr = target.getBoundingClientRect();\n            if (bcr.width || bcr.height) {\n                return {\n                    offset: (offsetMethod === OffsetMethod.OFFSET ? bcr.top : target.offsetTop) + offsetBase,\n                    href\n                };\n            }\n        }\n        return null;\n    }).filter(\n        item => item\n    ).sort(\n        (a, b) => a.offset - b.offset\n    ).forEach(item => {\n        this._offsets.push(item.offset);\n        this._targets.push(item.href);\n    });\n\n    // Return ourself for easy chaining\n    return this;\n};\n\n// Handle the active target selection\nScrollSpy.prototype.process = function () {\n    if (!this._getScroller) {\n        return this;\n    }\n    const scrollTop = this._getScrollTop() + this._config.offset;\n    const scrollHeight = this._getScrollHeight();\n    const maxScroll = this._config.offset + scrollHeight - this._getOffsetHeight();\n\n    if (this._scrollHeight !== scrollHeight) {\n        this.refresh();\n    }\n\n    if (scrollTop >= maxScroll) {\n        const target = this._targets[this._targets.length - 1];\n        if (this._activeTarget !== target) {\n            this._activate(target);\n        }\n        return this;\n    }\n\n    if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {\n        this._activeTarget = null;\n        this._clear();\n        return this;\n    }\n\n    for (let i = this._offsets.length; i--;) {\n        const isActiveTarget =\n            this._activeTarget !== this._targets[i] &&\n            scrollTop >= this._offsets[i] &&\n            (this._offsets[i + 1] === undefined ||\n            scrollTop < this._offsets[i + 1]);\n\n        if (isActiveTarget) {\n            this._activate(this._targets[i]);\n        }\n    }\n\n    // Return ourself for easy chaining\n    return this;\n};\n\n// Fake a resize event to schedule a refresh/process\nScrollSpy.prototype.scheduleRefresh = function () {\n    this.handleEvent({type:'resize'});\n    return this;\n};\n\n// Dispose  of our stuff\nScrollSpy.prototype.dispose = function () {\n    // Ensure we are not listening to events\n    this.unListen();\n\n    // Garbage collection\n    clearTimeout(this._resizeTimeout);\n    this._resizeTimeout = null;\n    this._$el = null;\n    this._config = null;\n    this._selector = null;\n    this._offsets = null;\n    this._targets = null;\n    this._activeTarget = null;\n    this._scrollHeight = null;\n    this._$root = null;\n};\n\n/*\n * ScrollSpy event handler\n */\n\nScrollSpy.prototype.handleEvent = function (e) {\n    const self = this;\n\n    function resizeThrottle() {\n        clearTimeout(self._resizeTimeout);\n        self._resizeTimeout = setTimeout(() => {\n            self.refresh().process();\n        }, self._config.throttle || Default.throttle);\n    }\n\n    if (e.type === 'scroll') {\n        this.process();\n    } else if (e.type === 'orientationchange' || e.type === 'resize') {\n        resizeThrottle();\n    }\n};\n\n/*\n * ScrollSpy private methods\n */\n\n// Get the srolling element\nScrollSpy.prototype._getScroller = function () {\n    if (isServer) {\n        return null;\n    }\n    const scroller = this._config.element;\n    if (!scroller) {\n        return null;\n    }\n    if (scroller && isElement(scroller)) {\n        return scroller;\n    } else if (typeof scroller === 'string') {\n        if (scroller === 'body') {\n            return document.body;\n        }\n        // Otherwise assume CSS selector\n        return $QS(scroller);\n    }\n    return null;\n};\n\n// Return the scroller top position\nScrollSpy.prototype._getScrollTop = function () {\n    const scroller = this._getScroller();\n    if (!scroller) {\n        return 0;\n    }\n    return scroller.tagName === 'BODY' ? window.pageYOffset : scroller.scrollTop;\n};\n\n// Return the scroller height\nScrollSpy.prototype._getScrollHeight = function () {\n    const scroller = this._getScroller();\n    if (!scroller) {\n        return 0;\n    }\n    return scroller.tagName === 'BODY' ?\n        Math.max(document.body.scrollHeight, document.documentElement.scrollHeight) :\n        scroller.scrollHeight;\n};\n\n// Return the scroller offset top position\nScrollSpy.prototype._getOffsetHeight = function () {\n    const scroller = this._getScroller();\n    if (!scroller) {\n        return 0;\n    }\n    return scroller.tagName === 'BODY' ? window.innerHeight : scroller.getBoundingClientRect().height;\n};\n\n// Activate the scrolled in target nav-link\nScrollSpy.prototype._activate = function (target) {\n    this._activeTarget = target;\n    this._clear();\n\n    let queries = this._selector.split(',');\n    queries = queries.map(selector => {\n        return selector + '[href=\"' + target + '\"]';\n    });\n\n    const links = $QSA(queries.join(','), this._$el);\n\n    links.forEach(link => {\n        if (link.classList.contains(ClassName.DROPDOWN_ITEM)) {\n            // This is a dropdown item, so find the .dropdown-toggle and set it's state\n            const dropdown = closest(link, Selector.DROPDOWN);\n            if (dropdown) {\n                const toggle = $QS(Selector.DROPDOWN_TOGGLE, dropdown);\n                if (toggle) {\n                    this._setActiveState(toggle, true);\n                }\n            }\n            // Also set this link's state\n            this._setActiveState(link, true);\n        } else {\n            // Set triggered link as active\n            this._setActiveState(link, true);\n            // Set triggered links parents as active\n            // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\n            // Handle parent .nav's and .list-group's\n            this._setParentsSiblingActiveState(link, Selector.NAV_LIST_GROUP, [ClassName.NAV_LINK, ClassName.LIST_ITEM], true);\n        }\n    });\n\n    // Signal event to root, passing ID of target\n    if (links && links.length > 0 && this._$root && this._$root.$emit) {\n        this._$root.$emit(EVENT, target);\n    }\n};\n\n// Clear the 'active' targets in our nav component\nScrollSpy.prototype._clear = function () {\n    $QSA(this._selector, this._$el).filter(el => {\n        if (el.classList.contains(ClassName.ACTIVE)) {\n            const href = el.getAttribute('href');\n            if (href.charAt(0) !== '#' || href.indexOf('#/') === 0) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }).forEach(el => {\n        this._setActiveState(el, false);\n    });\n};\n\n// Set the active state. if el has a vue insatnce then try setting the active prop,\n// Else fallback to adding the active class\nScrollSpy.prototype._setActiveState = function (el, state) {\n    if (el) {\n        if (el.classList.contains(ClassName.NAV_LINK) && !el.classList.contains(ClassName.DROPDOWN_TOGGLE)) {\n            // Special case where VM with 'active' prop is on parent element\n            el = el.parentElement;\n        }\n        const vm = getVm(el);\n        if (vm && Object.prototype.hasOwnProperty.call(vm.$props, 'active')) {\n            // This is a component that has an `active` prop\n            vm.$props.active = state;\n        } else {\n            // Fallback to setting class attribute since item doesn't have an 'active' prop\n            el.classList[state ? 'add' : 'remove'](ClassName.ACTIVE);\n        }\n    }\n};\n\n// Find all the matching parents given a CSS selector, then find previous sibling that matches the supplied classes\n// And then set the active state on each immediate previous sibling of the parent(s)\nScrollSpy.prototype._setParentsSiblingActiveState = function (element, selector, classes, state) {\n    if (!classes) {\n        return;\n    }\n    if (!isArray(classes)) {\n        classes = [classes];\n    }\n    let el = element;\n    while (el) {\n        el = closest(el, selector);\n        if (el && el.previousElementSibling) {\n            for (let i = 0; i < classes.length - 1; i++) {\n                if (el.previousElementSibling.classList.contains(classes[i])) {\n                    this._setActiveState(el, state);\n                }\n            }\n        }\n    }\n};\n\n/*\n * Export our directive\n */\n\nexport default {\n    bind(el, binding) {\n        if (isServer || el[BVSS]) {\n            return;\n        }\n        el[BVSS] = new ScrollSpy(el, binding);\n    },\n    inserted(el, binding) {\n        if (isServer) {\n            return;\n        }\n        if (!el[BVSS]) {\n            el[BVSS] = new ScrollSpy(el, binding);\n            el[BVSS].listen();\n        } else {\n            el[BVSS].updateConfig(binding).listen();\n        }\n        el[BVSS].refresh().process().scheduleRefresh();\n    },\n    update(el, binding) {\n        if (isServer) {\n            return;\n        }\n        if (!el[BVSS]) {\n            el[BVSS] = new ScrollSpy(el, binding);\n            el[BVSS].listen();\n        } else {\n            el[BVSS].updateConfig(binding);\n        }\n        el[BVSS].refresh().process().scheduleRefresh();\n    },\n    componentUpdated(el, binding) {\n        if (isServer) {\n            return;\n        }\n        if (!el[BVSS]) {\n            el[BVSS] = new ScrollSpy(el, binding);\n            el[BVSS].listen();\n        } else {\n            el[BVSS].updateConfig(binding);\n        }\n        el[BVSS].refresh().process().scheduleRefresh();\n    },\n    unbind(el) {\n        if (isServer || !el[BVSS]) {\n            return;\n        }\n        // Remove scroll event listener on scrollElId\n        el[BVSS].unListen().dispose();\n        el[BVSS] = null;\n    }\n};\n","// Production steps of ECMA-262, Edition 6, 22.1.2.1\n// es6-ified by @alexsasharegan\nif (!Array.from) {\n    Array.from = (function() {\n        const toStr = Object.prototype.toString\n        const isCallable = fn => typeof fn === \"function\" || toStr.call(fn) === \"[object Function]\"\n        const toInteger = value => {\n            const number = Number(value)\n            if (isNaN(number)) {\n                return 0\n            }\n            if (number === 0 || !isFinite(number)) {\n                return number\n            }\n            return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number))\n        }\n        const maxSafeInteger = Math.pow(2, 53) - 1\n        const toLength = value => Math.min(Math.max(toInteger(value), 0), maxSafeInteger)\n\n        // The length property of the from method is 1.\n        return function from(arrayLike /*, mapFn, thisArg */) {\n            // 1. Let C be the this value.\n            const C = this\n\n            // 2. Let items be ToObject(arrayLike).\n            const items = Object(arrayLike)\n\n            // 3. ReturnIfAbrupt(items).\n            if (arrayLike == null) {\n                throw new TypeError(\"Array.from requires an array-like object - not null or undefined\")\n            }\n\n            // 4. If mapfn is undefined, then let mapping be false.\n            const mapFn = arguments.length > 1 ? arguments[1] : void undefined\n            let T\n\n            if (typeof mapFn !== \"undefined\") {\n                // 5. else\n                // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n                if (!isCallable(mapFn)) {\n                    throw new TypeError(\"Array.from: when provided, the second argument must be a function\")\n                }\n\n                // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\n                if (arguments.length > 2) {\n                    T = arguments[2]\n                }\n            }\n\n            // 10. Let lenValue be Get(items, \"length\").\n            // 11. Let len be ToLength(lenValue).\n            const len = toLength(items.length)\n\n            // 13. If IsConstructor(C) is true, then\n            // 13. a. Let A be the result of calling the [[Construct]] internal method\n            // of C with an argument list containing the single item len.\n            // 14. a. Else, Let A be ArrayCreate(len).\n            let A = isCallable(C) ? Object(new C(len)) : new Array(len)\n\n            // 16. Let k be 0.\n            let k = 0\n            // 17. Repeat, while k < len… (also steps a - h)\n            let kValue\n            while (k < len) {\n                kValue = items[k]\n                if (mapFn) {\n                    A[k] = typeof T === \"undefined\" ? mapFn(kValue, k) : mapFn.call(T, kValue, k)\n                } else {\n                    A[k] = kValue\n                }\n                k += 1\n            }\n            // 18. Let putStatus be Put(A, \"length\", len, true).\n            A.length = len\n            // 20. Return A.\n            return A\n        }\n    })()\n}\n\nif (!Array.isArray) {\n    Array.isArray = arg => Object.prototype.toString.call(arg) === \"[object Array]\"\n}\n\n// Static\nexport const from = Array.from\nexport const isArray = Array.isArray\n\n// Instance\nexport const arrayIncludes = (array, value) => array.indexOf(value) !== -1\n","/**\n * Aliasing Object[method] allows the minifier to shorten methods to a single character variable,\n * as well as giving BV a chance to inject polyfills.\n * As long as we avoid\n * - import * as Object from \"utils/object\"\n * all unused exports should be removed by tree-shaking.\n */\n\n// @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nif (typeof Object.assign != \"function\") {\n    Object.assign = function(target, varArgs) {\n        // .length of function is 2\n        \"use strict\"\n        if (target == null) {\n            // TypeError if undefined or null\n            throw new TypeError(\"Cannot convert undefined or null to object\")\n        }\n\n        let to = Object(target)\n\n        for (let index = 1; index < arguments.length; index++) {\n            const nextSource = arguments[index]\n\n            if (nextSource != null) {\n                // Skip over if undefined or null\n                for (const nextKey in nextSource) {\n                    // Avoid bugs when hasOwnProperty is shadowed\n                    if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                        to[nextKey] = nextSource[nextKey]\n                    }\n                }\n            }\n        }\n        return to\n    }\n}\n\nexport const assign = Object.assign\nexport const getOwnPropertyNames = Object.getOwnPropertyNames\nexport const keys = Object.keys\nexport const defineProperties = Object.defineProperties\nexport const defineProperty = Object.defineProperty\nexport const freeze = Object.freeze\nexport const getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor\nexport const getOwnPropertySymbols = Object.getOwnPropertySymbols\nexport const getPrototypeOf = Object.getPrototypeOf\nexport const create = Object.create\nexport const isFrozen = Object.isFrozen\nexport const is = Object.is\n","<template>\n    <div v-if=\"localShow\"\n         :class=\"classObject\"\n         role=\"alert\"\n         aria-live=\"polite\"\n         aria-atomic=\"true\"\n    >\n        <button type=\"button\"\n                class=\"close\"\n                data-dismiss=\"alert\"\n                aria-label=\"dismissLabel\"\n                v-if=\"dismissible\"\n                @click.stop.prevent=\"dismiss\"\n        >\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    import {warn} from '../utils';\n\n    export default {\n        data() {\n            return {\n                countDownTimerId: null,\n                dismissed: false\n            };\n        },\n        created() {\n            if (this.state) {\n                warn('<b-alert> \"state\" property is deprecated, please use \"variant\" property instead.');\n            }\n        },\n        computed: {\n            classObject() {\n                return ['alert', this.alertVariant, this.dismissible ? 'alert-dismissible' : ''];\n            },\n            alertVariant() {\n                const variant = this.state || this.variant || 'info';\n                return `alert-${variant}`;\n            },\n            localShow() {\n                return !this.dismissed && (this.countDownTimerId || this.show);\n            }\n        },\n        props: {\n            variant: {\n                type: String,\n                default: 'info'\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            dismissible: {\n                type: Boolean,\n                default: false\n            },\n            dismissLabel: {\n                type: String,\n                default: 'Close'\n            },\n            show: {\n                type: [Boolean, Number],\n                default: false\n            }\n        },\n        watch: {\n            show() {\n                this.showChanged();\n            }\n        },\n        mounted() {\n            this.showChanged();\n        },\n        methods: {\n            dismiss() {\n                this.dismissed = true;\n                this.$emit('dismissed');\n                this.clearCounter();\n            },\n            clearCounter() {\n                if (this.countDownTimerId) {\n                    clearInterval(this.countDownTimerId);\n                }\n            },\n            showChanged() {\n                // Reset dismiss status\n                this.dismissed = false;\n\n                // No timer for boolean values\n                if (this.show === true || this.show === false || this.show === null || this.show === 0) {\n                    return;\n                }\n\n                let dismissCountDown = this.show;\n                this.$emit('dismiss-count-down', dismissCountDown);\n\n                // Start counter\n                this.clearCounter();\n                this.countDownTimerId = setInterval(() => {\n                    if (dismissCountDown < 2) {\n                        return this.dismiss();\n                    }\n                    dismissCountDown--;\n                    this.$emit('dismiss-count-down', dismissCountDown);\n                }, 1000);\n            }\n        }\n    };\n</script>\n","export default {\n    mounted() {\n        if (typeof document !== 'undefined') {\n            document.documentElement.addEventListener('click', this._clickOutListener);\n        }\n    },\n    destroyed() {\n        if (typeof document !== 'undefined') {\n            document.removeEventListener('click', this._clickOutListener);\n        }\n    },\n    methods: {\n        _clickOutListener(e) {\n            if (!this.$el.contains(e.target)) {\n                if (this.clickOutListener) {\n                    this.clickOutListener();\n                }\n            }\n        }\n    }\n};\n","import { isArray } from \"../utils/array\"\n/**\n * Issue #569: collapse::toggle::state triggered too many times\n * @link https://github.com/bootstrap-vue/bootstrap-vue/issues/569\n */\n\nconst BVRL = '__BV_root_listeners__';\n\nexport default {\n    methods: {\n        /**\n         * Safely register event listeners on the root Vue node.\n         * While Vue automatically removes listeners for individual components,\n         * when a component registers a listener on root and is destroyed,\n         * this orphans a callback because the node is gone,\n         * but the root does not clear the callback.\n         *\n         * This adds a non-reactive prop to a vm on the fly\n         * in order to avoid object observation and its performance costs\n         * to something that needs no reactivity.\n         * It should be highly unlikely there are any naming collisions.\n         * @param {string} event\n         * @param {function} callback\n         * @chainable\n         */\n        listenOnRoot(event, callback) {\n            if (!this[BVRL] || !isArray(this[BVRL])) {\n                this[BVRL] = [];\n            }\n            this[BVRL].push({ event, callback });\n            this.$root.$on(event, callback);\n            return this;\n        },\n\n        /**\n         * Convenience method for calling vm.$emit on vm.$root.\n         * @param {string} event\n         * @param {*} args\n         * @chainable\n         */\n        emitOnRoot(event, ...args) {\n            this.$root.$emit(event, ...args);\n            return this;\n        }\n    },\n\n    destroyed() {\n        if (this[BVRL] && isArray(this[BVRL])) {\n            while (this[BVRL].length > 0) {\n                // shift to process in order\n                const { event, callback } = this[BVRL].shift();\n                this.$root.$off(event, callback);\n            }\n        }\n    }\n}\n","export default {\n    props: {\n        name: {\n            type: String\n        },\n        id: {\n            type: String\n        },\n        disabled: {\n            type: Boolean\n        },\n        required: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n\n","export default {\n    computed: {\n        checkboxClass() {\n            return {\n                'custom-control': this.custom,\n                'form-check-inline': this.inline\n            };\n        }\n    }\n};\n\n","export default {\n    computed: {\n        custom() {\n            return !this.plain;\n        }\n    },\n    props: {\n        plain: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n","import { isArray } from '../utils/array';\nimport { keys } from '../utils/object';\n\nexport default {\n    computed: {\n        formOptions() {\n            let options = this.options || {};\n\n            if (isArray(options)) {\n                // Normalize flat arrays to object Array\n                options = options.map(option => {\n                    if (typeof option === 'object') {\n                        return {\n                            value: option[this.valueField],\n                            text: option[this.textField],\n                            disabled: option.disabled || false\n                        };\n                    }\n\n                    return {text: String(option), value: option || {}};\n                });\n            } else {\n                // Normalize Objects keys to Array\n                options = keys(options).map(value => {\n                    let option = options[value] || {};\n\n                    // Resolve text\n                    if (typeof option !== 'object') {\n                        option = {text: String(option)};\n                    }\n\n                    // Resolve value (uses key as value if not provided)\n                    option.value = option[this.valueField] || value;\n\n                    // Resolve text field (uses key as value if not provided)\n                    option.text = option[this.textField] || value;\n\n                    return option;\n                });\n            }\n\n            return options;\n        },\n        selectedValue() {\n            const formOptions = this.formOptions;\n            for (let i = 0; i < formOptions.length; i++) {\n                if (formOptions[i].value === this.localValue) {\n                    if (this.returnObject) {\n                        return formOptions[i];\n                    }\n                    return formOptions[i].value;\n                }\n            }\n        }\n    },\n    props: {\n        valueField: {\n            type: [String],\n            default: 'value'\n        },\n        textField: {\n            type: [String],\n            default: 'text'\n        }\n    },\n    watch: {\n        localValue(value, old_value) {\n            if (value === old_value) {\n                return;\n            }\n            this.$emit('input', this.selectedValue);\n        },\n        value(value, old_value) {\n            if (value === old_value) {\n                return;\n            }\n            this.localValue = value;\n        }\n    }\n};\n","import Tether from 'tether';\nimport listenOnRootMixin from './listen-on-root'\nimport { isArray, arrayIncludes } from '../utils/array';\nimport { keys } from '../utils/object';\n\n// Controls which events are mapped for each named trigger, and the expected popover behavior for each.\nconst TRIGGER_LISTENERS = {\n    click: {click: 'toggle'},\n    hover: {mouseenter: 'show', mouseleave: 'hide'},\n    focus: {focus: 'show', blur: 'hide'}\n};\nconst PLACEMENT_PARAMS = {\n    top: 'bottom center',\n    bottom: 'top center',\n    left: 'middle right',\n    right: 'middle left'\n};\nconst TETHER_CLASS_PREFIX = 'bs-tether';\nconst TETHER_CLASSES = {\n    element: false,\n    enabled: false\n};\nconst TRANSITION_DURATION = 150;\n\nexport default {\n    mixins: [listenOnRootMixin],\n    props: {\n        constraints: {\n            type: Array,\n            default() {\n                return [];\n            }\n        },\n        debounce: {\n            type: [Number],\n            default: 300,\n            validator(value) {\n                return value >= 0;\n            }\n        },\n        delay: {\n            type: [Number, Object],\n            default: 0,\n            validator(value) {\n                if (typeof value === 'number') {\n                    return value >= 0;\n                } else if (value !== null && typeof value === 'object') {\n                    return typeof value.show === 'number' &&\n                        typeof value.hide === 'number' &&\n                        value.show >= 0 &&\n                        value.hide >= 0;\n                }\n                return false;\n            }\n        },\n        offset: {\n            type: String,\n            default: '0 0',\n            validator(value) {\n                // Regex test for a pair of units, either 0 exactly, px, or percentage\n                return /^((0\\s?)|([+-]?[0-9]+(px|%)\\s?)){2}$/.test(value);\n            }\n        },\n        placement: {\n            type: String,\n            default: 'top',\n            validator: value => arrayIncludes(keys(PLACEMENT_PARAMS), value)\n        },\n        popoverStyle: {\n            type: Object,\n            default: null\n        },\n        show: {\n            type: Boolean,\n            default: null\n        },\n        targetOffset: {\n            type: String,\n            default: '0 0',\n            // Regex test for a pair of units, either 0 exactly, px, or percentage\n            validator: value => /^((0\\s?)|([+-]?[0-9]+(px|%)\\s?)){2}$/.test(value)\n        },\n        triggers: {\n            type: [Boolean, String, Array],\n            default: () => ['click', 'focus'],\n            validator(value) {\n                // Allow falsy value to disable all event triggers (equivalent to 'manual') in Bootstrap 4\n                if (value === false || value === '') {\n                    return true;\n                } else if (typeof value === 'string') {\n                    return keys(TRIGGER_LISTENERS).indexOf(value) !== -1;\n                } else if (isArray(value)) {\n                    const triggerKeys = keys(TRIGGER_LISTENERS);\n                    value.forEach(item => {\n                        if (arrayIncludes(triggerKeys, item)) {\n                            return false;\n                        }\n                    });\n                    return true;\n                }\n                return false;\n            }\n        }\n    },\n    data() {\n        return {\n            triggerState: this.show,\n            classState: this.show,\n            lastEvent: null\n        };\n    },\n    computed: {\n        /**\n         * Arrange event trigger hooks as array for all input types.\n         *\n         * @return Array\n         */\n        normalizedTriggers() {\n            if (this.triggers === false) {\n                return [];\n            } else if (typeof this.triggers === 'string') {\n                return [this.triggers];\n            }\n            return this.triggers;\n        },\n        /**\n         * Class property to be used for Popover rendering\n         *\n         * @return String\n         */\n        popoverAlignment() {\n            return !this.placement || this.placement === `default` ? `popover-top` : `popover-${this.placement}`;\n        },\n        /**\n         * Determine if the Popover should be shown.\n         *\n         * @return Boolean\n         */\n        showState() {\n            return this.show !== false && (this.triggerState || this.show);\n        }\n    },\n    watch: {\n        /**\n         * Refresh Tether display properties\n         */\n        constraints() {\n            this.setOptions();\n        },\n        /**\n         * Refresh Popover event triggers\n         * @param {Array} newTriggers\n         * @param {Array} oldTriggers\n         */\n        normalizedTriggers(newTriggers, oldTriggers) {\n            this.updateListeners(newTriggers, oldTriggers);\n        },\n        /**\n         * Refresh Tether display properties\n         */\n        offset() {\n            this.setOptions();\n        },\n        /**\n         * Refresh Tether display properties\n         */\n        placement() {\n            this.setOptions();\n        },\n        /**\n         * Affect 'show' state in response to status change\n         * @param  {Boolean} val\n         */\n        showState(val) {\n            const delay = this.getDelay(val);\n            clearTimeout(this.$data._timeout);\n            if (delay) {\n                this.$data._timeout = setTimeout(() => this.togglePopover(val), delay);\n            } else {\n                this.togglePopover(val);\n            }\n        }\n    },\n    methods: {\n        /**\n         * Add all event hooks for the given trigger\n         * @param {String} trigger\n         */\n        addListener(trigger) {\n            // eslint-disable-next-line guard-for-in\n            for (const item in TRIGGER_LISTENERS[trigger]) {\n                this.$data._trigger.addEventListener(item, e => this.eventHandler(e));\n            }\n        },\n        /**\n         * Tidy removal of Tether object from the DOM\n         */\n        destroyTether() {\n            if (this.$data._tether && !this.showState) {\n                this.$data._tether.destroy();\n                this.$data._tether = null;\n                const regx = new RegExp('(^|[^-]\\\\b)(' + TETHER_CLASS_PREFIX + '\\\\S*)', 'g');\n                this.$data._trigger.className = this.$data._trigger.className.replace(regx, '');\n            }\n        },\n        /**\n         * Handle multiple event triggers\n         * @param  {Object} e\n         */\n        eventHandler(e) {\n            // If this event is right after a previous successful event, ignore it (debounce)\n            if (this.normalizedTriggers.length > 1 && this.debounce > 0 && this.lastEvent !== null && e.timeStamp <= this.lastEvent + this.debounce) {\n                return;\n            }\n            // Look up the expected popover action for the event\n            // eslint-disable-next-line guard-for-in\n            for (const trigger in TRIGGER_LISTENERS) {\n                for (const event in TRIGGER_LISTENERS[trigger]) {\n                    if (event === e.type) {\n                        const action = TRIGGER_LISTENERS[trigger][event];\n                        // If the expected event action is the opposite of the current state, allow it\n                        if (action === 'toggle' || (this.triggerState && action === 'hide') || (!this.triggerState && action === 'show')) {\n                            this.triggerState = !this.triggerState;\n                            this.lastEvent = e.timeStamp;\n                        }\n                        return;\n                    }\n                }\n            }\n        },\n        /**\n         * Get the currently applicable popover delay\n         *\n         * @returns Number\n         */\n        getDelay(state) {\n            if (typeof this.delay === 'object') {\n                return state ? this.delay.show : this.delay.hide;\n            }\n            return this.delay;\n        },\n        /**\n         * Tether construct params for each show event.\n         *\n         * @return Object\n         */\n        getTetherOptions() {\n            return {\n                attachment: PLACEMENT_PARAMS[this.placement],\n                element: this.$data._popover,\n                target: this.$data._trigger,\n                classes: TETHER_CLASSES,\n                classPrefix: TETHER_CLASS_PREFIX,\n                offset: this.offset,\n                constraints: this.constraints,\n                targetOffset: this.targetOffset\n            };\n        },\n        /**\n         * Hide popover and fire event\n         */\n        hidePopover() {\n            this.classState = false;\n            clearTimeout(this.$data._timeout);\n            this.$data._timeout = setTimeout(() => {\n                this.$data._popover.style.display = 'none';\n                this.destroyTether();\n            }, TRANSITION_DURATION);\n        },\n        /**\n         * Refresh the Popover position in order to respond to changes\n         */\n        refreshPosition() {\n            if (this.$data._tether) {\n                this.$nextTick(() => {\n                    this.$data._tether.position();\n                });\n            }\n        },\n        /**\n         * Remove all event hooks for the given trigger\n         * @param {String} trigger\n         */\n        removeListener(trigger) {\n            // eslint-disable-next-line guard-for-in\n            for (const item in TRIGGER_LISTENERS[trigger]) {\n                this.$data._trigger.removeEventListener(item, e => this.eventHandler(e));\n            }\n        },\n        /**\n         * Update tether options\n         */\n        setOptions() {\n            if (this.$data._tether) {\n                this.$data._tether.setOptions(this.getTetherOptions());\n            }\n        },\n        /**\n         * Display popover and fire event\n         */\n        showPopover() {\n            clearTimeout(this.$data._timeout);\n            if (!this.$data._tether) {\n                this.$data._tether = new Tether(this.getTetherOptions());\n            }\n            this.$data._popover.style.display = 'block';\n            // Make sure the popup is rendered in the correct location\n            this.refreshPosition();\n            this.$nextTick(() => {\n                this.classState = true;\n            });\n        },\n        /**\n         * Handle Popover show or hide instruction\n         */\n        togglePopover(newShowState) {\n            this.$emit('showChange', newShowState);\n            if (newShowState) {\n                this.showPopover();\n                this.emitOnRoot('shown::popover');\n            } else {\n                this.hidePopover();\n                this.emitOnRoot('hidden::popover');\n            }\n        },\n        /**\n         * Study the 'triggers' component property and apply all selected triggers\n         * @param {Array} triggers\n         * @param {Array} appliedTriggers\n         */\n        updateListeners(triggers, appliedTriggers = []) {\n            const newTriggers = [];\n            const removeTriggers = [];\n            // Look for new events not yet mapped (all of them on first load)\n            triggers.forEach(item => {\n                if (appliedTriggers.indexOf(item) === -1) {\n                    newTriggers.push(item);\n                }\n            });\n            // Disable any removed event triggers\n            appliedTriggers.forEach(item => {\n                if (triggers.indexOf(item) === -1) {\n                    removeTriggers.push(item);\n                }\n            });\n            // Apply trigger mapping changes\n            newTriggers.forEach(item => this.addListener(item));\n            removeTriggers.forEach(item => this.removeListener(item));\n        }\n    },\n    created() {\n        this.listenOnRoot('hide::popover', () => {\n            this.triggerState = false;\n        });\n    },\n    mounted() {\n        // Configure tether\n        this.$data._trigger = this.$refs.trigger.children[0] || this.$refs.trigger;\n        this.$data._popover = this.$refs.popover;\n        this.$data._popover.style.display = 'none';\n        this.$data._tether = new Tether(this.getTetherOptions());\n        this.$data._timeout = 0;\n        // Add listeners for specified triggers and complementary click event\n        this.updateListeners(this.normalizedTriggers);\n        // Display popover if prop is set on load\n        if (this.showState) {\n            this.showPopover();\n        }\n    },\n    updated() {\n        this.refreshPosition();\n    },\n    beforeDestroy() {\n        this.normalizedTriggers.forEach(item => this.removeListener(item));\n        clearTimeout(this.$data._timeout);\n        this.destroyTether();\n    },\n    destroyed() {\n        // Tether is moving the popover element outside of Vue's control and leaking dom nodes\n        if (this.$data._popover.parentElement === document.body) {\n            document.body.removeChild(this.$data._popover);\n        }\n    }\n};\n","<template>\n    <!-- When VueRouter is available -->\n    <a v-if=\"isRouterLink\"\n       is=\"router-link\"\n       :active-class=\"activeClass\"\n       :exact-active-class=\"exactActiveClass\"\n       :disabled=\"disabled\"\n       :aria-disabled=\"disabled ? 'true' : 'false'\"\n       :to=\"to\"\n       :exact=\"exact\"\n       :append=\"append\"\n       :replace=\"replace\"\n       :event=\"event\"\n       :tag=\"componentTag\"\n       :class=\"linkClassObject\"\n       @click.native=\"linkClick\">\n        <slot></slot>\n    </a>\n\n    <!-- Fallback mode -->\n    <a v-else\n       :disabled=\"disabled\"\n       :aria-disabled=\"disabled ? 'true' : 'false'\"\n       :href=\"_href\"\n       :target=\"target || null\"\n       :rel=\"computedRel\"\n       :class=\"linkClassObject\"\n       @click=\"linkClick\">\n        <slot></slot>\n    </a>\n</template>\n\n<script>\nimport { linkMixin } from '../mixins';\n\nexport default {\n    mixins: [linkMixin]\n};\n</script>\n","<template>\n    <ol class=\"breadcrumb\">\n        <li v-for=\"normalizedItem in normalizedItems\"\n            :class=\"['breadcrumb-item', normalizedItem.active ? 'active' : null]\"\n            @click=\"onClick(normalizedItem._originalItem)\"\n            role=\"presentation\">\n            <span v-if=\"normalizedItem.active\"\n                  :aria-current=\"ariaCurrent\"\n                  v-html=\"normalizedItem.text\"></span>\n            <b-link v-else\n                    v-bind=\"normalizedItem._linkProps\"\n                    v-html=\"normalizedItem.text\"></b-link>\n        </li>\n        <slot></slot>\n    </ol>\n</template>\n\n<script>\nimport bLink from './link.vue';\nimport { props as linkProps } from '../mixins/link';\nimport { arrayIncludes } from '../utils/array';\nimport { assign, keys } from '../utils/object';\n\nconst bLinkPropKeys = keys(linkProps);\n\nexport default {\n    components: { bLink },\n    computed: {\n        normalizedItems() {\n            let userDefinedActive = false;\n            const originalItemsLength = this.items.length;\n\n            return this.items.map((item, index) => {\n                let normalizedItem = { _originalItem: item };\n                // if no active state is defined,\n                // default to the last item in the array as active\n                const isLast = index === originalItemsLength - 1;\n\n                // nothing defined except the text\n                if (typeof item === 'string') {\n                    assign(normalizedItem, { text: item, link: '#', active: isLast });\n                } else {\n                    assign(normalizedItem, item);\n                }\n\n                // don't default the active state if given a boolean value,\n                // or if a user defined value has already been given\n                if (normalizedItem.active !== true && normalizedItem.active !== false && !userDefinedActive) {\n                    normalizedItem.active = isLast;\n                } else if (normalizedItem.active) {\n                    // here we know we've been given an active value,\n                    // so we won't set a default value\n                    userDefinedActive = true;\n                }\n\n                if (normalizedItem.link) {\n                    // default the link value to bLink's href prop\n                    normalizedItem.href = normalizedItem.link;\n                }\n\n                // stuff all the bLink props into a single place\n                // so we can bind to the component\n                // for dynamic prop proxying\n                normalizedItem._linkProps = keys(normalizedItem).reduce((memo, itemProp) => {\n                    if (arrayIncludes(bLinkPropKeys, itemProp)) {\n                        memo[itemProp] = normalizedItem[itemProp];\n                    }\n\n                    return memo;\n                }, {});\n\n                return normalizedItem;\n            });\n        }\n    },\n    props: {\n        items: {\n            type: Array,\n            default: () => [],\n            required: true\n        },\n        ariaCurrent: {\n            type: String,\n            default: 'location'\n        }\n    },\n    methods: {\n        onClick(item) {\n            this.$emit('click', item);\n        }\n    }\n};\n</script>\n","<template>\n    <button v-bind=\"conditionalLinkProps\"\n            :is=\"componentType\"\n            :class=\"classList\"\n            :type=\"btnType\"\n            :disabled=\"disabled\"\n            @click=\"onClick\">\n        <slot></slot>\n    </button>\n</template>\n\n<script>\nimport bLink from './link.vue';\nimport { omitLinkProps, props as originalLinkProps, computed } from '../mixins/link';\nimport { assign } from '../utils/object';\n\n// Grab a fresh object of link props (omitLinkProps does this)\n// less the 'href' and 'to' props\n// that we will reconstruct without any defaults\n// so our computed 'componentType' functions properly\nconst linkProps = assign(omitLinkProps('href', 'to'), {\n    href: { type: originalLinkProps.href.type },\n    to: { type: originalLinkProps.to.type }\n});\n\nexport default {\n    components: { bLink },\n    computed: {\n        linkProps: computed.linkProps,\n        classList() {\n            return [\n                'btn',\n                this.btnVariant,\n                this.btnSize,\n                this.btnBlock,\n                this.btnDisabled\n            ];\n        },\n        componentType() {\n            return (this.href || this.to) ? 'b-link' : 'button';\n        },\n        btnBlock() {\n            return this.block ? `btn-block` : '';\n        },\n        btnVariant() {\n            return this.variant ? `btn-${this.variant}` : `btn-secondary`;\n        },\n        btnSize() {\n            return this.size ? `btn-${this.size}` : '';\n        },\n        btnDisabled() {\n            return this.disabled ? 'disabled' : '';\n        },\n        btnType() {\n            return (this.href || this.to) ? null : this.type;\n        },\n        conditionalLinkProps() {\n            return this.componentType === 'button' ? {} : this.linkProps;\n        }\n    },\n    // merge our prepared link props with button props\n    props: assign(linkProps, {\n        block: {\n            type: Boolean,\n            default: false\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        size: {\n            type: String,\n            default: null\n        },\n        variant: {\n            type: String,\n            default: null\n        },\n        type: {\n            type: String,\n            default: 'button'\n        }\n    }),\n    methods: {\n        onClick(e) {\n            if (this.disabled) {\n                e.stopPropagation();\n                e.preventDefault();\n            } else {\n                this.$emit('click', e);\n            }\n        }\n    }\n};\n</script>\n","<template>\n    <div :class=\"classObject\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'btn-group',\n                    this.vertical ? 'btn-group-vertical' : '',\n                    this.size ? ('btn-group-' + this.size) : ''\n                ];\n            }\n        },\n        props: {\n            vertical: {\n                type: Boolean,\n                default: false\n            },\n            size: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n    <div :class=\"classObject\" role=\"group\">\n        <slot name=\"left\">\n            <div v-if=\"left\" class=\"input-group-addon\" v-html=\"left\"></div>\n        </slot>\n\n        <slot></slot>\n\n        <slot name=\"right\">\n            <div v-if=\"right\" class=\"input-group-addon\" v-html=\"right\"></div>\n        </slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'input-group',\n                    this.size ? ('input-group-' + this.size) : '',\n                    this.state ? ('has-' + this.state) : ''\n                ];\n            }\n        },\n        props: {\n            size: {\n                type: String,\n                default: null\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            left: {\n                type: String,\n                default: null\n            },\n            right: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"input-group-addon\" :id=\"id || null\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {\n            id: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"input-group-btn\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {}\n    };\n</script>\n","<template>\n    <component :is=\"tag\" :class=\"['card',cardVariant,cardAlign,cardInverse]\">\n        <!-- Card Image Slot-->\n        <slot name=\"img\" ref=\"img\">\n            <img v-if=\"img\" :src=\"img\" :alt=\"imgAlt\" class=\"card-img\">\n        </slot>\n\n        <!-- Card Header-->\n        <component v-if=\"header || $slots['header']\"\n                   :is=\"headerTag\"\n                   :class=\"['card-header', headerVariant?('bg-'+headerVariant):'', headerClass]\"\n        >\n            <slot name=\"header\">\n                <div v-html=\"header\"></div>\n            </slot>\n        </component>\n\n        <!--Show custom block when no-block prop is set-->\n        <template v-if=\"noBlock\">\n            <slot></slot>\n        </template>\n\n        <!-- Card Standard Blocks-->\n        <div :class=\"blockClass\" v-else>\n            <h4 v-if=\"title\" :is=\"titleTag\" class=\"card-title\" v-html=\"title\"></h4>\n            <h6 v-if=\"subTitle\" :is=\"subTitleTag\" class=\"card-subtitle mb-2 text-muted\" v-html=\"subTitle\"></h6>\n            <slot></slot>\n        </div>\n\n        <!-- Card Footer-->\n        <component v-if=\"footer || $slots['footer']\"\n                   :is=\"footerTag\"\n                   :class=\"['card-footer', footerVariant?('bg-'+footerVariant):'', footerClass]\"\n        >\n            <slot name=\"footer\">\n                <div v-html=\"footer\"></div>\n            </slot>\n        </component>\n    </component>\n</template>\n\n<script>\n    export default {\n        computed: {\n            blockClass() {\n                return [\n                    'card-block',\n                    this.overlay ? 'card-img-overlay' : null\n                ];\n            },\n            cardVariant() {\n                return this.variant ? `card-${this.variant}` : null;\n            },\n            cardInverse() {\n                if (this.overlay || this.inverse) {\n                    return 'card-inverse';\n                }\n                // Auto inverse colored cards\n                if (this.inverse === null && this.variant && this.variant.length > 0 &&\n                    this.variant.indexOf('outline') === -1) {\n                    return 'card-inverse';\n                }\n            },\n            cardAlign() {\n                return this.align ? `text-${this.align}` : null;\n            }\n        },\n        props: {\n            align: {\n                type: String,\n                default: null\n            },\n            inverse: {\n                type: Boolean,\n                // It should remain null for auto inverse\n                default: null\n            },\n            variant: {\n                type: String,\n                default: null\n            },\n            tag: {\n                type: String,\n                default: 'div'\n            },\n\n            // Header\n            header: {\n                type: String,\n                default: null\n            },\n            headerVariant: {\n                type: String,\n                default: null\n            },\n            headerClass: {\n                type: [String, Array],\n                default: ''\n            },\n            headerTag: {\n                type: String,\n                default: 'div'\n            },\n\n            // Footer\n            footer: {\n                type: String,\n                default: null\n            },\n            footerVariant: {\n                type: String,\n                default: null\n            },\n            footerClass: {\n                type: [String, Array],\n                default: ''\n            },\n            footerTag: {\n                type: String,\n                default: 'div'\n            },\n\n            // Main block\n            title: {\n                type: String,\n                default: null\n            },\n            titleTag: {\n                type: String,\n                default: 'h4'\n            },\n            subTitle: {\n                type: String,\n                default: null\n            },\n            subTitleTag: {\n                type: String,\n                default: 'h6'\n            },\n            noBlock: {\n                type: Boolean,\n                default: false\n            },\n\n            // Image\n            img: {\n                type: String,\n                default: null\n            },\n            imgAlt: {\n                type: String,\n                default: null\n            },\n            overlay: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"tag\" :class=\"['card-' + type]\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    export default {\n        computed: {\n            type() {\n                if (this.deck) {\n                    return 'deck';\n                }\n\n                if (this.columns) {\n                    return 'columns';\n                }\n\n                return 'group';\n            }\n        },\n        props: {\n            tag: {\n                type: String,\n                default: 'div'\n            },\n            deck: {\n                type: Boolean,\n                default: false\n            },\n            columns: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"carousel slide\"\n         role=\"region\"\n         :id=\"id || null\"\n         :style=\"{background,height}\"\n         :aria-busy=\"isSliding ? 'true' : 'false'\"\n         @mouseenter=\"pause\"\n         @mouseleave=\"start\"\n         @focusin=\"pause\"\n         @focusout=\"restart($event)\"\n         @keydown.left.stop.prevent=\"prev\"\n         @keydown.right.stop.prevent=\"next\"\n    >\n\n        <!-- Wrapper for slides -->\n        <div class=\"carousel-inner\"\n             role=\"list\"\n             :id=\"id ? (id + '__BV_inner_') : null\"\n        >\n            <slot></slot>\n        </div>\n\n        <!-- Controls -->\n        <template v-if=\"controls\">\n            <a class=\"carousel-control-prev\"\n               href=\"#\"\n               role=\"button\"\n               :aria-controls=\"id ? (id + '__BV_inner_') : null\"\n               @click.stop.prevent=\"prev\"\n               @keydown.enter.stop.prevent=\"prev\"\n               @keydown.space.stop.prevent=\"prev\"\n            >\n                <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                <span class=\"sr-only\">{{labelPrev}}</span>\n            </a>\n            <a class=\"carousel-control-next\"\n               href=\"#\"\n               role=\"button\"\n               :aria-controls=\"id ? (id + '__BV_inner_') : null\"\n               @click.stop.prevent=\"next\"\n               @keydown.enter.stop.prevent=\"next\"\n               @keydown.space.stop.prevent=\"next\"\n            >\n                <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                <span class=\"sr-only\">{{labelNext}}</span>\n            </a>\n        </template>\n\n        <!-- Indicators -->\n        <ol class=\"carousel-indicators\"\n            role=\"group\"\n            v-show=\"indicators\"\n            :id=\"id ? (id + '__BV_indicators_') : null\"\n            :aria-hidden=\"indicators ? 'false' : 'true'\"\n            :aria-label=\"(indicators && labelIndicators) ? labelIndicators : null\"\n            :aria-owns=\"(indicators && id) ? (id + '__BV_inner_') : null\"\n        >\n            <li v-for=\"n in slides.length\"\n                role=\"button\"\n                :id=\"id ? (id + '__BV_indicator_' + n + '_') : null\"\n                :tabindex=\"indicators ? '0' : '-1'\"\n                :class=\"{active:n-1 === index}\"\n                :aria-current=\"n-1 === index ? 'true' : 'false'\"\n                :aria-posinset=\"n\"\n                :aria-setsize=\"slides.length\"\n                :aria-label=\"labelGotoSlide + ' ' + n\"\n                :aria-describedby=\"slides[n-1].id || null\"\n                :aria-controls=\"id ? (id + '__BV_inner_') : null\"\n                @click=\"index=n-1\"\n                @keydown.enter.stop.prevent=\"index=n-1\"\n                @keydown.space.stop.prevent=\"index=n-1\"\n            ></li>\n        </ol>\n\n    </div>\n</template>\n\n<script>\n    import { from as arrayFrom } from '../utils/array'\n\n    const DIRECTION = {\n        next: {\n            current: 'carousel-item-left',\n            next: 'carousel-item-right',\n            overlay: 'carousel-item-next'\n        },\n        prev: {\n            current: 'carousel-item-right',\n            next: 'carousel-item-left',\n            overlay: 'carousel-item-prev'\n        }\n    };\n\n    export default {\n        data() {\n            return {\n                index: 0,\n                isSliding: false,\n                slides: []\n            };\n        },\n        props: {\n            id: {\n                type: String\n            },\n            labelPrev: {\n                type: String,\n                default: 'Previous Slide'\n            },\n            labelNext: {\n                type: String,\n                default: 'Next Slide'\n            },\n            labelGotoSlide: {\n                type: String,\n                default: 'Goto Slide'\n            },\n            labelIndicators: {\n                type: String,\n                default: 'Select a slide to display'\n            },\n            interval: {\n                type: Number,\n                default: 5000\n            },\n            indicators: {\n                type: Boolean,\n                default: false\n            },\n            controls: {\n                type: Boolean,\n                default: false\n            },\n            height: {\n                type: String\n            },\n            background: {\n                type: String\n            }\n        },\n        methods: {\n            // Previous slide\n            prev() {\n                if (this.index <= 0) {\n                    this.index = this.slides.length - 1;\n                } else {\n                    this.index--;\n                }\n            },\n\n            // Next slide\n            next() {\n                if (typeof document !== 'undefined' && document.visibilityState && document.hidden) {\n                    // Don't animate when page is not visible\n                    return;\n                }\n                if (this.index >= this.slides.length - 1) {\n                    this.index = 0;\n                } else {\n                    this.index++;\n                }\n            },\n\n            // Pause auto rotation\n            pause() {\n                if (this.interval === 0 || typeof this.interval === 'undefined') {\n                    return;\n                }\n                clearInterval(this._intervalId);\n                this._intervalId = null;\n                // Make current slide focusable for screen readers\n                this.slides[this.index].tabIndex = 0;\n            },\n\n            // Start auto rotate slides\n            start() {\n                if (this.interval === 0 || typeof this.interval === 'undefined') {\n                    return;\n                }\n                this.slides.forEach(slide => {\n                    slide.tabIndex = -1;\n                });\n                this._intervalId = setInterval(() => {\n                    this.next();\n                }, this.interval);\n            },\n\n            // Re-Start auto rotate slides when focus leaves the carousel\n            restart(e) {\n                if (!e.relatedTarget || !this.$el.contains(e.relatedTarget)) {\n                    this.start();\n                }\n            }\n\n        },\n        mounted() {\n            // Get all slides\n            this.slides = arrayFrom(this.$el.querySelectorAll('.carousel-item'));\n\n            // Set first slide as active\n            this.slides[0].classList.add('active');\n            const self = this;\n            this.slides.forEach((slide, idx) => {\n                const n = idx + 1;\n                slide.setAttribute('aria-current', idx === 0 ? 'true' : 'false');\n                slide.setAttribute('aria-posinset', String(n));\n                slide.setAttribute('aria-setsize', String(self.slides.length));\n                slide.tabIndex = -1;\n                if (self.id) {\n                    slide.setAttribute('aria-controlledby', self.id + '__BV_indicator_' + n + '_');\n                }\n            });\n\n            // Auto rotate slides\n            this._intervalId = null;\n            this.start();\n        },\n        watch: {\n            index(val, oldVal) {\n                if (val === oldVal) {\n                    return;\n                }\n\n                if (this.isSliding) {\n                    this.index = oldVal;\n                    return;\n                }\n\n                // Determine sliding direction\n                let direction = (val > oldVal) ? DIRECTION.next : DIRECTION.prev;\n\n                // Rotates\n                if (oldVal === 0 && val === this.slides.length - 1) {\n                    direction = DIRECTION.prev;\n                } else if (oldVal === this.slides.length - 1 && val === 0) {\n                    direction = DIRECTION.next;\n                }\n\n                // Determine current and next slides\n                const currentSlide = this.slides[oldVal];\n                const nextSlide = this.slides[val];\n\n                if (!currentSlide || !nextSlide) {\n                    return;\n                }\n\n                // Start animating\n                this.isSliding = true;\n\n                nextSlide.classList.add(direction.next, direction.overlay);\n                currentSlide.classList.add(direction.current);\n\n                this._carouselAnimation = setTimeout(() => {\n                    this.$emit('slide', val);\n\n                    currentSlide.classList.remove('active');\n                    currentSlide.setAttribute('aria-current', 'false');\n                    currentSlide.setAttribute('aria-hidden', 'true');\n                    currentSlide.tabIndex = -1;\n                    currentSlide.classList.remove(direction.current);\n\n                    nextSlide.classList.add('active');\n                    nextSlide.setAttribute('aria-current', 'true');\n                    nextSlide.setAttribute('aria-hidden', 'false');\n                    nextSlide.tabIndex = -1;\n                    nextSlide.classList.remove(direction.next, direction.overlay);\n\n                    if (!this._intervalId) {\n                        // Focus the current slide for screen readers if not in play mode\n                        currentSlide.tabIndex = 0;\n                        this.$nextTick(() => {\n                            currentSlide.focus();\n                        });\n                    }\n\n                    this.isSliding = false;\n                }, 500);\n            }\n        },\n        destroyed() {\n            clearTimeout(this._carouselAnimation);\n            clearInterval(this._intervalId);\n        }\n    };\n\n</script>\n","<template>\n    <div class=\"carousel-item\"\n         role=\"listitem\"\n         :id=\"id || null\"\n         :style=\"{background,height}\"\n    >\n        <img class=\"d-block img-fluid\" v-if=\"img\" :src=\"img\" :alt=\"imgAlt\">\n        <div :is=\"contentTag\" :class=\"contentClasses\">\n            <h3 v-if=\"caption\" :is=\"captionTag\" v-html=\"caption\"></h3>\n            <p v-if=\"text\" :is=\"textTag\" v-html=\"text\"></p>\n            <slot></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {\n            id: {\n                type: String\n            },\n            img: {\n                type: String\n            },\n            imgAlt: {\n                type: String\n            },\n            contentVisibleUp: {\n                type: String\n            },\n            contentTag: {\n                type: String,\n                default: \"div\"\n            },\n            caption: {\n                type: String\n            },\n            captionTag: {\n                type: String,\n                default: \"h3\"\n            },\n            text: {\n                type: String\n            },\n            textTag: {\n                type: String,\n                default: \"p\"\n            },\n            background: {\n                type: String\n            },\n            height: {\n                type: String\n            }\n        },\n        computed: {\n            contentClasses() {\n                const classes = {\n                    'carousel-caption': Boolean(this.caption)\n                };\n                if (this.contentVisibleUp) {\n                    classes['d-none'] = true;\n                    classes[`d-${this.contentVisibleUp}-block`] = true;\n                }\n                return classes;\n            }\n        }\n    };\n</script>\n","<template>\n    <transition\n            @enter=\"enter\"\n            @after-enter=\"clearHeight\"\n            @leave=\"leave\"\n            @after-leave=\"clearHeight\"\n            name=\"collapse\"\n    >\n        <div :id=\"id || null\" :class=\"classObject\" v-show=\"show\">\n            <slot></slot>\n        </div>\n    </transition>\n</template>\n\n<style scoped>\n    .collapse-enter-active, .collapse-leave-active {\n        transition: all .35s ease;\n        overflow: hidden;\n    }\n</style>\n\n<script>\n    import { listenOnRootMixin } from '../mixins';\n\n    export default {\n        mixins: [listenOnRootMixin],\n        data() {\n            return {\n                show: this.visible\n            };\n        },\n        computed: {\n            classObject() {\n                return {\n                    'navbar-collapse': this.isNav,\n                    show: this.show\n                };\n            }\n        },\n        model: {\n            prop: 'visible',\n            event: 'input'\n        },\n        watch: {\n            visible(newVal) {\n                if (newVal !== this.show) {\n                    this.show = newVal;\n                    this.emitState();\n                }\n            },\n        },\n        props: {\n            isNav: {\n                type: Boolean,\n                default: false\n            },\n            id: {\n                type: String,\n                required: true\n            },\n            accordion: {\n                type: String,\n                default: null\n            },\n            visible: {\n                type: Boolean,\n                default: false\n            }\n        },\n        methods: {\n            toggle() {\n                this.show = !this.show;\n                this.emitState();\n            },\n            enter(el) {\n                el.style.height = 'auto';\n                const realHeight = getComputedStyle(el).height;\n                el.style.height = '0px';\n\n                /* eslint-disable no-unused-expressions */\n                el.offsetHeight; // Force repaint\n\n                el.style.height = realHeight;\n            },\n            leave(el) {\n                el.style.height = 'auto';\n                const realHeight = getComputedStyle(el).height;\n                el.style.height = realHeight;\n\n                /* eslint-disable no-unused-expressions */\n                el.offsetHeight; // Force repaint\n\n                el.style.height = '0px';\n            },\n            clearHeight(el) {\n                el.style.height = null;\n            },\n            emitState() {\n                this.$emit('input', this.show);\n                this.$root.$emit('collapse::toggle::state', this.id, this.show);\n                if (this.accordion && this.show) {\n                    // Tell the other collapses in this accordion to close\n                    this.$root.$emit('accordion::toggle', this.id, this.accordion);\n                }\n            },\n            handleToggleEvt(target) {\n                if (target !== this.id) {\n                    return;\n                }\n                this.toggle();\n            },\n            handleAccordionEvt(openedId, accordion) {\n                if (!this.accordion || accordion !== this.accordion) {\n                    return;\n                }\n                if (openedId === this.id) {\n                    if (!this.show) {\n                        this.toggle();\n                    }\n                } else {\n                    if (this.show) {\n                        this.toggle();\n                    }\n                }\n            }\n        },\n        created() {\n            this.listenOnRoot('collapse::toggle', this.handleToggleEvt);\n            this.listenOnRoot('accordion::toggle', this.handleAccordionEvt);\n        },\n        mounted() {\n            this.emitState();\n        }\n    };\n\n</script>\n","<template>\n    <div :id=\"id || null\" :class=\"['dropdown', 'btn-group', {dropup, show: visible}]\">\n\n        <b-button :class=\"{'dropdown-toggle': !split}\"\n                  ref=\"button\"\n                  :id=\"id ? (id + '__BV_button_') : null\"\n                  :aria-haspopup=\"split ? null : 'true'\"\n                  :aria-expanded=\"split ? null : (visible ? 'true' : 'false')\"\n                  :variant=\"variant\"\n                  :size=\"size\"\n                  :disabled=\"disabled\"\n                  @click.stop.prevent=\"click\"\n        >\n            <slot name=\"button-content\"><slot name=\"text\">{{text}}</slot></slot>\n        </b-button>\n\n        <b-button :class=\"['dropdown-toggle','dropdown-toggle-split']\"\n                  v-if=\"split\"\n                  ref=\"toggle\"\n                  :id=\"id ? (id + '__BV_toggle_') : null\"\n                  :aria-haspopup=\"split ? 'true' : null\"\n                  :aria-expanded=\"split ? (visible ? 'true' : 'false') : null\"\n                  :variant=\"variant\"\n                  :size=\"size\"\n                  :disabled=\"disabled\"\n                  @click.stop.prevent=\"toggle\"\n        >\n            <span class=\"sr-only\">{{toggleText}}</span>\n        </b-button>\n\n        <div :class=\"['dropdown-menu',{'dropdown-menu-right': right}]\"\n             ref=\"menu\"\n             role=\"menu\"\n             :aria-labelledby=\"id ? (id + (split ? '__BV_toggle_' : '__BV_button_')) : null\"\n             @keyup.esc=\"onEsc\"\n             @keydown.tab=\"onTab\"\n             @keydown.up=\"focusNext($event,true)\"\n             @keydown.down=\"focusNext($event,false)\"\n             @mouseover=\"focusHovered($event)\"\n        >\n            <slot></slot>\n        </div>\n\n    </div>\n</template>\n\n<script>\n    import { dropdownMixin } from '../mixins';\n    import bButton from './button.vue';\n\n    export default {\n        mixins: [dropdownMixin],\n        components: {bButton},\n        props: {\n            split: {\n                type: Boolean,\n                default: false\n            },\n            toggleText: {\n                type: String,\n                default: 'Toggle Dropdown'\n            },\n            size: {\n                type: String,\n                default: null\n            },\n            variant: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n    <b-link class=\"dropdown-item\"\n            role=\"menuitem\"\n            v-bind=\"linkProps\"\n            @click=\"$emit('click', $event)\">\n        <slot></slot>\n    </b-link>\n</template>\n\n<script>\nimport { props, computed } from '../mixins/link';\nimport bLink from './link.vue';\n\nexport default {\n    components: { bLink },\n    props,\n    computed: {\n        linkProps: computed.linkProps\n    }\n};\n</script>\n","<template>\n    <button class=\"dropdown-item\"\n            type=\"button\"\n            role=\"menuitem\"\n            :disabled=\"disabled\"\n            @click=\"onClick\">\n        <slot></slot>\n    </button>\n</template>\n\n<script>\nexport default {\n    props: {\n        disabled: {\n            type: Boolean,\n            default: false\n        }\n    },\n    methods: {\n        onClick(e) {\n            this.$root.$emit(\"clicked::link\", this);\n            this.$emit(\"click\", e);\n        },\n    }\n};\n</script>\n","<template>\n    <div role=\"separator\" class=\"dropdown-divider\"></div>\n</template>\n\n<script>\n    export default {\n        props: {}\n    };\n</script>\n","<template>\n    <component :is=\"tag\" tabindex=\"-1\" class=\"dropdown-header\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    export default {\n        props: {\n            tag: {\n                type: String,\n                default: 'h6'\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"dropdown-select\" :class=\"{open: show, dropdown: !dropup, dropup: dropup}\">\n        <button\n                :id=\"id\"\n                :class=\"['btn','dropdown',dropdownToggle,btnVariant,btnSize]\"\n                role=\"button\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"show\"\n                @click.prevent=\"toggle($event)\"\n                :disabled=\"disabled\">\n            <span class=\"checked-items\" v-html=\"displayItem\"></span>\n        </button>\n        <ul class=\"dropdown-menu\" :class=\"{'dropdown-menu-right' : position == 'right'}\" aria-labelledby=\"dLabel\">\n            <li v-for=\"item in list\">\n                <button class=\"dropdown-item\" :click.stop.prevent=\"select(item)\">{{item.text}}</button>\n            </li>\n        </ul>\n    </div>\n</template>\n\n\n<script>\n    export default {\n        data() {\n            return {\n                show: false,\n                selected: false\n            };\n        },\n        computed: {\n            btnVariant() {\n                return !this.variant || this.variant === `default` ? `btn-secondary` : `btn-${this.variant}`;\n            },\n            btnSize() {\n                return !this.size || this.size === `default` ? `` : `btn-${this.size}`;\n            },\n            dropdownToggle() {\n                return this.caret ? 'dropdown-toggle' : '';\n            },\n            displayItem() {\n                // If zero show default message\n                if ((this.returnObject && this.model && !this.model.text) || (!this.returnObject && this.model && this.model.length === 0) || this.forceDefault) {\n                    return this.defaultText;\n                }\n\n                // Show selected item\n                if (this.returnObject && this.model && this.model.text) {\n                    return this.model.text;\n                }\n\n                // Show text that coresponds to the model value\n                if (!this.returnObject && this.model) {\n                    let result = this.model || '';\n                    this.list.forEach(function (item) {\n                        if (item.value === this.model) {\n                            result = item.text;\n                        }\n                    });\n                    return result;\n                }\n\n                return '';\n            }\n        },\n        props: {\n            id: {\n                type: String\n            },\n            model: {\n                required: false\n            },\n            list: {\n                type: Array,\n                default: [],\n                required: true\n            },\n            caret: {\n                type: Boolean,\n                default: true\n            },\n            position: {\n                type: String,\n                default: 'left'\n            },\n            size: {\n                type: String,\n                default: ''\n            },\n            variant: {\n                type: String,\n                default: 'default'\n            },\n            defaultText: {\n                type: String,\n                default: 'Plase select one'\n            },\n            forceDefault: {\n                type: Boolean,\n                default: false\n            },\n            returnObject: {\n                type: Boolean,\n                default: false\n            },\n            dropup: {\n                type: Boolean,\n                default: false\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            }\n        },\n        methods: {\n            toggle(e) {\n                // Hide an alert\n                this.show = !this.show;\n                // Dispatch an event from the current vm that propagates all the way up to its $root\n                if (this.show) {\n                    this.$root.$emit('shown:dropdown', this.id);\n                    e.stopPropagation();\n                } else {\n                    this.$root.$emit('hidden::dropdown', this.id);\n                }\n            },\n            select(item) {\n                // We need to set empty model to make model watchers react to it\n                if (this.returnObject) {\n                    this.model = item;\n                } else {\n                    this.model = item.value;\n                }\n                this.show = false;\n                // Dispatch an event from the current vm that propagates all the way up to its $root\n                this.$root.$emit('selected::dropdown', this.id, this.model);\n            }\n        },\n        created() {\n            const hub = this.$root;\n            hub.$on('hide::dropdown', function () {\n                this.show = false;\n            });\n        }\n    };\n</script>\n","<template>\n    <form :class=\"classObject\" @submit=\"$emit('submit',$event)\">\n        <slot></slot>\n    </form>\n</template>\n\n<script>\nexport default {\n    computed: {\n        classObject() {\n            return [\n                this.inline ? 'form-inline' : ''\n            ];\n        }\n    },\n    props: {\n        inline: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n\n</script>\n","<template>\n    <div :class=\"['form-group','row',inputState]\"\n         :id=\"id || null\"\n         role=\"group\"\n         :aria-describedby=\"describedBy\"\n    >\n        <label v-if=\"label || $slots['label']\"\n               :for=\"target\"\n               :id=\"labelId\"\n               :class=\"[labelSrOnly ? 'sr-only' : 'col-form-label',labelLayout,labelAlignClass]\"\n        >\n            <slot name=\"label\"><span v-html=\"label\"></span></slot>\n        </label>\n        <div :class=\"inputLayout\" ref=\"content\">\n            <slot></slot>\n            <div v-if=\"feedback || $slots['feedback']\"\n                 class=\"form-text form-control-feedback\"\n                 :id=\"feedbackId\"\n                 role=\"alert\"\n                 aria-live=\"assertive\"\n                 aria-atomic=\"true\"\n            >\n                <slot name=\"feedback\"><span v-html=\"feedback\"></span></slot>\n            </div>\n            <small v-if=\"description || $slots['description']\"\n                   class=\"form-text text-muted\"\n                   :id=\"descriptionId\"\n            >\n                <slot name=\"description\"><span v-html=\"description\"></span></slot>\n            </small>\n        </div>\n    </div>\n</template>\n\n<script>\n    import {warn} from '../utils';\n\n    const INPUT_SELECTOR = [\n        '[role=\"radiogroup\"]',\n        'input',\n        'select',\n        'textarea',\n        '.form-control',\n        '.form-control-static',\n        '.dropdown',\n        '.dropup'\n    ].join(',');\n\n    export default {\n        data() {\n            return {\n                target: null\n            };\n        },\n        computed: {\n            labelId() {\n                return (this.id && this.label) ? (this.id + '__BV_label_') : null;\n            },\n            descriptionId() {\n                return (this.id && this.description) ? (this.id + '__BV_description_') : null;\n            },\n            feedbackId() {\n                return (this.id && this.feedback) ? (this.id + '__BV_feedback_') : null;\n            },\n            describedBy() {\n                if (this.id && (this.label || this.feedback || this.description)) {\n                    return [\n                        this.labelId,\n                        this.descriptionId,\n                        this.feedbackId\n                    ].filter(i => i).join(' ');\n                }\n                return null;\n            },\n            inputState() {\n                return this.state ? `has-${this.state}` : '';\n            },\n            computedLabelCols() {\n                if (this.labelSize) {\n                    warn('b-form-fieldset: prop label-size has been deprecated. Use label-cols instead');\n                    return this.labelSize;\n                }\n                return this.labelCols;\n            },\n            labelLayout() {\n                if (this.labelSrOnly) {\n                    return null;\n                }\n                return this.horizontal ? ('col-sm-' + this.computedLabelCols) : 'col-12';\n            },\n            labelAlignClass() {\n                if (this.labelSrOnly) {\n                    return null;\n                }\n                return this.labelTextAlign ? `text-${this.labelTextAlign}` : null;\n            },\n            inputLayout() {\n                return this.horizontal ? ('col-sm-' + (12 - this.computedLabelCols)) : 'col-12';\n            }\n        },\n        methods: {\n            updateTarget() {\n                if (this.labelFor) {\n                    // User supplied for target\n                    return this.labelFor;\n                }\n                // Else find first input with ID\n                const content = this.$refs.content;\n                if (!content) {\n                    return null;\n                }\n                const input = content.querySelector(this.inputSelector);\n                this.target = (input && input.id) ? input.id : null;\n            }\n        },\n        mounted() {\n            this.updateTarget();\n        },\n        updated() {\n            this.updateTarget();\n        },\n        props: {\n            id: {\n                type: String,\n                default: null\n            },\n            labelFor: {\n                type: String,\n                default() {\n                    if (this && this.for) {\n                        // Deprecate prop for\n                        warn(\"b-form-fieldet: prop 'for' has been deprecated. Use 'label-for' instead\");\n                        return this.for;\n                    }\n                    return null;\n                }\n            },\n            for: {\n                type: String,\n                default: null\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            horizontal: {\n                type: Boolean,\n                default: false\n            },\n            labelCols: {\n                type: Number,\n                default: 3,\n                validator(value) {\n                    if (value >= 1 && value <= 11) {\n                        return true;\n                    }\n                    warn('b-form-fieldset: label-cols must be a value between 1 and 11');\n                    return false;\n                }\n            },\n            labelSize: {\n                type: Number\n            },\n            labelTextAlign: {\n                type: String,\n                default: null\n            },\n            label: {\n                type: String,\n                default: null\n            },\n            labelSrOnly: {\n                type: Boolean,\n                default: false\n            },\n            description: {\n                type: String,\n                default: null\n            },\n            feedback: {\n                type: String,\n                default: null\n            },\n            inputSelector: {\n                type: String,\n                default: INPUT_SELECTOR\n            }\n        }\n    };\n</script>\n","<template>\n    <label :class=\"[inputClass,checkboxClass]\">\n        <input type=\"checkbox\"\n               :id=\"id || null\"\n               :name=\"name\"\n               :value=\"value\"\n               :disabled=\"disabled\"\n               :required=\"required\"\n               autocomplete=\"off\"\n               :aria-required=\"required ? 'true' : null\"\n               :class=\"[custom?'custom-control-input':null]\"\n               :checked=\"isChecked\"\n               @change=\"handleChange\">\n        <span class=\"custom-control-indicator\"\n              aria-hidden=\"true\"\n              v-if=\"custom\"></span>\n        <span :class=\"custom ? 'custom-control-description' : null\">\n            <slot></slot>\n        </span>\n    </label>\n</template>\n\n<script>\nimport { formMixin, formCustomMixin, formCheckBoxMixin } from '../mixins';\nimport { arrayIncludes, isArray } from '../utils/array';\n\nexport default {\n    mixins: [formMixin, formCustomMixin, formCheckBoxMixin],\n    model: {\n        prop: 'checked',\n        event: 'change'\n    },\n    props: {\n        value: {\n            default: true\n        },\n        uncheckedValue: {\n            default: false\n        },\n        checked: {\n            default: true\n        },\n        size: {\n            type: String,\n            default: null\n        }\n    },\n    computed: {\n        inputClass() {\n            return [\n                this.size ? `form-control-${this.size}` : null,\n                this.custom ? 'custom-checkbox' : null\n            ];\n        },\n        isChecked() {\n            if (isArray(this.checked)) {\n                return arrayIncludes(this.checked, this.value);\n            } else {\n                return this.checked === this.value;\n            }\n        }\n    },\n    methods: {\n        handleChange({ target: { checked } }) {\n            if (isArray(this.checked)) {\n                if (this.isChecked) {\n                    this.$emit('change', this.checked.filter(x => x !== this.value));\n                } else {\n                    this.$emit('change', [...this.checked, this.value]);\n                }\n            } else {\n                this.$emit('change', checked ? this.value : this.uncheckedValue)\n            }\n        }\n    }\n};\n\n</script>\n","<template>\n    <div :id=\"id || null\"\n         :class=\"inputClass\"\n         role=\"radiogroup\"\n         :aria-required=\"required ? 'true' : null\"\n         :aria-invalid=\"ariaInvalid\"\n    >\n        <label :class=\"[checkboxClass, custom?'custom-radio':null]\"\n               v-for=\"(option, idx) in formOptions\"\n        >\n            <input :id=\"id ? (id + '__BV_radio_' + idx) : null\"\n                   :class=\"custom?'custom-control-input':null\"\n                   ref=\"inputs\"\n                   type=\"radio\"\n                   autocomplete=\"off\"\n                   v-model=\"localValue\"\n                   :value=\"option.value\"\n                   :name=\"name\"\n                   :required=\"name && required\"\n                   :disabled=\"option.disabled || disabled\"\n                   @change=\"$emit('change', returnObject ? option : option.value)\"\n            >\n            <span v-if=\"custom\" class=\"custom-control-indicator\" aria-hidden=\"true\"></span>\n            <span :class=\"custom?'custom-control-description':null\" v-html=\"option.text\"></span>\n        </label>\n    </div>\n</template>\n\n<script>\n    import { formOptionsMixin, formMixin, formCustomMixin, formCheckBoxMixin } from '../mixins';\n\n    export default {\n        mixins: [formMixin, formCustomMixin, formCheckBoxMixin, formOptionsMixin],\n        data() {\n            return {\n                localValue: this.value\n            };\n        },\n        computed: {\n            inputClass() {\n                return [\n                    this.size ? `form-control-${this.size}` : null,\n                    this.state ? `has-${this.state}` : '',\n                    this.stacked ? 'custom-controls-stacked' : ''\n                 ];\n            },\n            ariaInvalid() {\n                if (this.invalid === true || this.invalid === 'true') {\n                    return 'true';\n                }\n                return null;\n            }\n        },\n        props: {\n            value: {},\n            options: {\n                type: [Array, Object],\n                default: null,\n                required: true\n            },\n            size: {\n                type: String,\n                default: null\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            invalid: {\n                type: [Boolean, String],\n                default: false\n            },\n            stacked: {\n                type: Boolean,\n                default: false\n            },\n            returnObject: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n\n</script>\n","<template>\n    <p :id=\"id || null\"\n       :class=\"inputClass\"\n       v-html=\"staticValue\"\n    >\n        <slot></slot>\n    </p>\n</template>\n\n<script>\n    export default {\n        computed: {\n            staticValue() {\n                return this.formatter ? this.formatter(this.value) : this.value;\n            },\n            inputClass() {\n                return [\n                    'form-control-static',\n                    this.size ? `form-control-${this.size}` : null,\n                    this.state ? `form-control-${this.state}` : null\n                ];\n            }\n        },\n        props: {\n            id: {\n                type: String,\n                default: null\n            },\n            value: {\n                default: null\n            },\n            formatter: {\n                type: Function\n            },\n            size: {\n                type: String,\n                default: null\n            },\n            state: {\n                type: String,\n                default: null\n            }\n        }\n    };\n\n</script>\n","<template>\n    <input v-if=\"!static\"\n           ref=\"input\"\n           :type=\"textarea ? null : type\"\n           :value=\"value\"\n           :name=\"name\"\n           :id=\"id || null\"\n           :disabled=\"disabled\"\n           :required=\"required\"\n           :aria-required=\"required ? 'true' : null\"\n           :aria-invalid=\"ariaInvalid\"\n           :readonly=\"readonly\"\n           :is=\"textarea ? 'textarea' : 'input'\"\n           :class=\"inputClass\"\n           :rows=\"textarea ? (rows || rowsCount) : null\"\n           :placeholder=\"placeholder\"\n           @input=\"onInput($event.target.value)\"\n           @change=\"onChange($event.target.value)\"\n           @keyup=\"onKeyUp($event)\"\n           @focus=\"$emit('focus')\"\n           @blur=\"$emit('blur')\"\n    />\n    <b-form-input-static v-else\n                         :id=\"id || null\"\n                         :value=\"value\"\n                         :size=\"size\"\n                         :state=\"state\"\n                         :formatter=\"formatter\"\n    ></b-form-input-static>\n</template>\n\n<script>\n    import { formMixin } from '../mixins';\n    import bFormInputStatic from './form-input-static.vue';\n\n    export default {\n        mixins: [formMixin],\n        components: {bFormInputStatic},\n        computed: {\n            rowsCount() {\n                return (this.value || '').toString().split('\\n').length;\n            },\n            inputClass() {\n                return [\n                    'form-control',\n                    this.size ? `form-control-${this.size}` : null,\n                    this.state ? `form-control-${this.state}` : null\n                ];\n            },\n            ariaInvalid() {\n                if (this.invalid === false) {\n                    return null;\n                }\n                if (this.invalid === true) {\n                    return 'true';\n                }\n                return this.invalid;\n            }\n        },\n        methods: {\n            format(value) {\n                if (this.formatter) {\n                    const formattedValue = this.formatter(value);\n                    if (formattedValue !== value) {\n                        value = formattedValue;\n                        this.$refs.input.value = formattedValue;\n                    }\n                }\n                return value;\n            },\n            onInput(value) {\n                if (!this.lazyFormatter) {\n                    value = this.format(value);\n                }\n                this.$emit('input', value);\n            },\n            onChange(value) {\n                value = this.format(value);\n                this.$emit('input', value);\n                this.$emit('change', value);\n            },\n            onKeyUp(e) {\n                this.$emit('keyup', e);\n            },\n            focus() {\n                this.$refs.input.focus();\n            }\n        },\n        props: {\n            value: {\n                default: null\n            },\n            type: {\n                type: String,\n                default: 'text'\n            },\n            size: {\n                type: String,\n                default: null\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            invalid: {\n                type: [Boolean, String],\n                default: false\n            },\n            readonly: {\n                type: Boolean,\n                default: false\n            },\n            static: {\n                type: Boolean,\n                default: false\n            },\n            placeholder: {\n                type: String,\n                default: null\n            },\n            rows: {\n                type: Number,\n                default: null\n            },\n            textarea: {\n                type: Boolean,\n                default: false\n            },\n            formatter: {\n                type: Function\n            },\n            lazyFormatter: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n\n</script>\n","<template>\n    <div :class=\"custom?'custom-file':null\"\n         :id=\"id ? (id + '__BV_file_outer_') : null\"\n         @dragover.stop.prevent=\"dragover\"\n    >\n\n        <!-- Drop Here Target -->\n        <span class=\"drop-here\"\n              v-if=\"dragging && custom\"\n              @dragover.stop.prevent=\"dragover\"\n              @drop.stop.prevent=\"drop\"\n              @dragleave.stop.prevent=\"dragging=false\"\n              :data-drop=\"dropLabel\"\n        ></span>\n\n        <!-- Real Form input -->\n        <input type=\"file\"\n               ref=\"input\"\n               :class=\"custom ? 'custom-file-input' : ''\"\n               :name=\"name\"\n               :id=\"id || null\"\n               :disabled=\"disabled\"\n               :required=\"required\"\n               :aria-required=\"required ? 'true' : null\"\n               :accept=\"accept || null\"\n               :multiple=\"multiple\"\n               :webkitdirectory=\"directory\"\n               :aria-describedby=\"(custom && id) ? (id + '__BV_file_control_') : null\"\n               @change=\"onFileChange\"\n        >\n\n        <!-- Overlay Labels -->\n        <span :class=\"['custom-file-control',dragging?'dragging':null]\"\n              :id=\"id ? (id + '__BV_file_control_') : null\"\n              :data-choose=\"computedChooseLabel\"\n              :data-selected=\"selectedLabel\"\n              v-if=\"custom\"\n        ></span>\n\n    </div>\n</template>\n\n<style scoped>\n    .custom-file-control {\n        overflow: hidden;\n    }\n\n    .custom-file-control {\n        overflow: hidden;\n    }\n\n    .custom-file-control.dragging {\n        overflow: hidden;\n        filter: blur(3px);\n    }\n\n    .custom-file-control::after {\n        content: attr(data-selected);\n    }\n\n    .custom-file-control::before {\n        content: attr(data-choose);\n    }\n\n    .custom-file .drop-here {\n        position: absolute;\n        left: 0;\n        right: 0;\n        top: 0;\n        bottom: 0;\n        background-color: rgba(0, 0, 0, .5);\n        border-radius: 3px;\n        z-index: 99999;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    .custom-file .drop-here::before {\n        color: white;\n        content: attr(data-drop);\n    }\n\n</style>\n\n<script>\n    import { formCustomMixin, formMixin } from '../mixins';\n    import { from as arrayFrom } from '../utils/array';\n\n    export default {\n        mixins: [formMixin, formCustomMixin],\n        data() {\n            return {\n                selectedFile: null,\n                dragging: false\n            };\n        },\n        computed: {\n            selectedLabel() {\n                if (!this.selectedFile || this.selectedFile.length === 0) {\n                    return this.placeholder || 'No file chosen';\n                }\n\n                if (this.multiple) {\n                    if (this.selectedFile.length === 1) {\n                        return this.selectedFile[0].name;\n                    }\n\n                    return this.selectedFormat\n                        .replace(':names', this.selectedFile.map(file => file.name).join(','))\n                        .replace(':count', this.selectedFile.length);\n                }\n\n                return this.selectedFile.name;\n            },\n            computedChooseLabel() {\n                return this.chooseLabel || (this.multiple ? 'Choose Files' : 'Choose File');\n            }\n        },\n        watch: {\n            selectedFile(newVal, oldVal) {\n                if (newVal === oldVal) {\n                    return;\n                }\n\n                if (!newVal && this.multiple) {\n                    this.$emit('input', []);\n                } else {\n                    this.$emit('input', newVal);\n                }\n            }\n        },\n        methods: {\n            reset() {\n                try {\n                    // Wrapped in try in case IE < 11 craps out\n                    this.$refs.input.value = '';\n                } catch (e) {\n                }\n\n                // IE < 11 doesn't support setting input.value to '' or null\n                // So we use this little extra hack to reset the value, just in case\n                // This also appears to work on modern browsers as well.\n                this.$refs.input.type = '';\n                this.$refs.input.type = 'file';\n\n                this.selectedFile = this.multiple ? [] : null;\n            },\n            onFileChange(e) {\n                // Always emit original event\n                this.$emit('change', e);\n\n                // Check if special `items` prop is available on event (drop mode)\n                // Can be disabled by setting no-traverse\n                const items = e.dataTransfer && e.dataTransfer.items;\n                if (items && !this.noTraverse) {\n                    const queue = [];\n                    for (let i = 0; i < items.length; i++) {\n                        const item = items[i].webkitGetAsEntry();\n                        if (item) {\n                            queue.push(this.traverseFileTree(item));\n                        }\n                    }\n                    Promise.all(queue).then(filesArr => {\n                        this.setFiles(arrayFrom(filesArr));\n                    });\n                    return;\n                }\n\n                // Normal handling\n                this.setFiles(e.target.files || e.dataTransfer.files);\n            },\n            setFiles(files) {\n                if (!files) {\n                    this.selectedFile = null;\n                    return;\n                }\n\n                if (!this.multiple) {\n                    this.selectedFile = files[0];\n                    return;\n                }\n\n                // Convert files to array\n                const filesArray = [];\n                for (let i = 0; i < files.length; i++) {\n                    if (files[i].type.match(this.accept)) {\n                        filesArray.push(files[i]);\n                    }\n                }\n\n                this.selectedFile = filesArray;\n            },\n            dragover(e) {\n                if (this.noDrop || !this.custom) {\n                    return;\n                }\n\n                this.dragging = true;\n                e.dataTransfer.dropEffect = 'copy';\n            },\n            drop(e) {\n                if (this.noDrop) {\n                    return;\n                }\n\n                this.dragging = false;\n                if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n                    this.onFileChange(e);\n                }\n            },\n            traverseFileTree(item, path) {\n                // Based on http://stackoverflow.com/questions/3590058\n                return new Promise(resolve => {\n                    path = path || '';\n                    if (item.isFile) {\n                        // Get file\n                        item.file(file => {\n                            file.$path = path; // Inject $path to file obj\n                            resolve(file);\n                        });\n                    } else if (item.isDirectory) {\n                        // Get folder contents\n                        item.createReader().readEntries(entries => {\n                            const queue = [];\n                            for (let i = 0; i < entries.length; i++) {\n                                queue.push(this.traverseFileTree(entries[i], path + item.name + '/'));\n                            }\n                            Promise.all(queue).then(filesArr => {\n                                resolve(arrayFrom(filesArr));\n                            });\n                        });\n                    }\n                });\n            }\n        },\n        props: {\n            accept: {\n                type: String,\n                default: ''\n            },\n            placeholder: {\n                type: String,\n                default: null\n            },\n            chooseLabel: {\n                type: String,\n                default: null\n            },\n            multiple: {\n                type: Boolean,\n                default: false\n            },\n            directory: {\n                type: Boolean,\n                default: false\n            },\n            noTraverse: {\n                type: Boolean,\n                default: false\n            },\n            selectedFormat: {\n                type: String,\n                default: ':count Files'\n            },\n            noDrop: {\n                type: Boolean,\n                default: false\n            },\n            dropLabel: {\n                type: String,\n                default: 'Drop files here'\n            }\n        }\n    };\n</script>\n","<template>\n    <select :class=\"inputClass\"\n            :name=\"name\"\n            :id=\"id || null\"\n            v-model=\"localValue\"\n            :disabled=\"disabled\"\n            :required=\"required\"\n            :aria-required=\"required ? 'true' : null\"\n            :aria-invalid=\"ariaInvalid\"\n            ref=\"input\"\n    >\n        <option v-for=\"option in formOptions\"\n                :value=\"option.value\"\n                v-html=\"option.text\"\n                :disabled=\"option.disabled\"\n        ></option>\n    </select>\n</template>\n\n<script>\n    import { formMixin, formOptionsMixin, formCustomMixin } from '../mixins';\n\n    export default {\n        mixins: [formMixin, formCustomMixin, formOptionsMixin],\n        data() {\n            return {\n                localValue: this.value\n            };\n        },\n        computed: {\n            inputClass() {\n                return [\n                    'form-control',\n                    this.size ? `form-control-${this.size}` : null,\n                    this.custom ? 'custom-select' : null\n                ];\n            },\n            ariaInvalid() {\n                if (this.invalid === true || this.invalid === 'true') {\n                    return 'true';\n                }\n                return null;\n            }\n        },\n        props: {\n            value: {},\n            invalid: {\n                type: [Boolean, String],\n                default: false\n            },\n            size: {\n                type: String,\n                default: null\n            },\n            options: {\n                type: [Array, Object],\n                required: true\n            },\n            returnObject: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n\n</script>\n","<template>\n    <div :class=\"['jumbotron',fluid?'jumbotron-fluid':null]\">\n        <div :class=\"containerFluid ? 'container-fluid' : 'container'\">\n            <h1 :is=\"headerTag\" v-if=\"header\" class=\"display-3\" v-html=\"header\"></h1>\n            <p v-if=\"lead\" class=\"lead\" v-html=\"lead\"></p>\n            <slot></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {},\n        props: {\n            fluid: {\n                type: Boolean,\n                default: false\n            },\n            containerFluid: {\n                type: Boolean,\n                default: false\n            },\n            header: {\n                type: String,\n                default: null\n            },\n            headerTag: {\n                type: String,\n                default: 'h1'\n            },\n            lead: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n<span :class=\"['badge',badgeVariant,badgePill]\">\n\t<slot></slot>\n</span>\n</template>\n\n<script>\n    export default {\n        computed: {\n            badgeVariant() {\n                return !this.variant || this.variant === `default` ? `badge-default` : `badge-${this.variant}`;\n            },\n            badgePill() {\n                return this.pill ? 'badge-pill' : '';\n            }\n        },\n        props: {\n            variant: {\n                type: String,\n                default: 'default'\n            },\n            pill: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"tag\" :class=\"['list-group',flush?'list-group-flush':null]\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    export default {\n        props: {\n            tag: {\n                type: String,\n                default: 'div'\n            },\n            flush: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"myTag\"\n               :class=\"classObject\"\n               ref=\"item\"\n               v-bind=\"conditionalLinkProps\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\nimport bLink from './link.vue';\nimport { props as originalLinkProps, computed, omitLinkProps } from '../mixins/link';\nimport { arrayIncludes } from '../utils/array';\nimport { assign } from '../utils/object';\n// copy link props, but exclude defaults for 'href', 'to', & 'tag'\n// to ensure proper component tag computation\nconst linkProps = assign(omitLinkProps('href', 'to'), {\n    href: { type: originalLinkProps.href.type },\n    to: { type: originalLinkProps.to.type },\n    tag: { type: originalLinkProps.tag.type }\n});\n\nconst actionTags = ['a', 'router-link', 'button', 'b-link'];\n\nexport default {\n    components: { bLink },\n\n    computed: {\n        linkProps: computed.linkProps,\n\n        classObject() {\n            return [\n                'list-group-item',\n                this.listState,\n                this.active ? 'active' : null,\n                this.disabled ? 'disabled' : null,\n                this.isAction ? 'list-group-item-action' : null\n            ];\n        },\n\n        isAction() {\n            if (this.action === false) {\n                return false;\n            }\n\n            // this previously could return a string,\n            // coercing to a boolean for more consistent expected value\n            return !!(this.action || this.to || this.href || arrayIncludes(actionTags, this.tag));\n        },\n\n        listState() {\n            return this.variant ? `list-group-item-${this.variant}` : null;\n        },\n\n        myTag() {\n            if (this.tag) {\n                return this.tag;\n            }\n\n            return (this.to || this.href) ? 'b-link' : 'div';\n        },\n\n        conditionalLinkProps() {\n            return this.myTag !== 'b-link' ? {} : this.linkProps;\n        }\n    },\n\n    // merge the link props with list-group-item props\n    props: assign(linkProps, {\n        action: {\n            type: Boolean,\n            default: null\n        },\n\n        variant: {\n            type: String,\n            default: null\n        },\n    })\n};\n</script>\n","<template>\n    <div class=\"media\">\n        <div :class=\"['d-flex','mr-3',verticalAlignClass]\"  v-if=\"!rightAlign\">\n            <slot name=\"aside\"></slot>\n        </div>\n        <div class=\"media-body\">\n            <slot></slot>\n        </div>\n        <div :class=\"['d-flex','ml-3',verticalAlignClass]\" v-if=\"rightAlign\">\n            <slot name=\"aside\"></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            verticalAlignClass() {\n                return `align-self-${this.verticalAlign}`;\n            }\n        },\n        props: {\n            rightAlign: {\n                type: Boolean,\n                default: false\n            },\n            verticalAlign: {\n                type: String,\n                default: 'top'\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"type\" :class=\"classObject\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n\nexport default {\n    computed: {\n        classObject() {\n            return {\n                nav: true,\n                'navbar-nav': this.isNavBar,\n                'nav-tabs': this.tabs,\n                'nav-pills': this.pills,\n                'flex-column': this.vertical,\n                'nav-fill': this.fill,\n                'nav-justified': this.justified\n            };\n        }\n    },\n    props: {\n        type: {\n            type: String,\n            default: 'ul'\n        },\n        fill: {\n            type: Boolean,\n            default: false\n        },\n        justified: {\n            type: Boolean,\n            default: false\n        },\n        tabs: {\n            type: Boolean,\n            default: false\n        },\n        pills: {\n            type: Boolean,\n            default: false\n        },\n        vertical: {\n            type: Boolean,\n            default: false\n        },\n        isNavBar: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n\n</script>\n","<template>\n    <li class=\"nav-item\">\n        <b-link class=\"nav-link\"\n                v-bind=\"linkProps\"\n                @click=\"$emit('click', $event)\">\n            <slot></slot>\n        </b-link>\n    </li>\n</template>\n\n<script>\nimport { props as linkProps, computed } from '../mixins/link';\nimport bLink from './link.vue';\n\nexport default {\n    components: { bLink },\n    props: linkProps,\n    computed: {\n        linkProps: computed.linkProps\n    }\n};\n</script>\n","<template>\n    <li :id=\"id || null\" :class=\"['nav-item','dropdown', {dropup, show: visible}]\">\n\n        <a :class=\"['nav-link', dropdownToggle, {disabled}]\"\n           href=\"#\"\n           ref=\"button\"\n           :id=\"id ? (id + '__BV_button_') : null\"\n           aria-haspopup=\"true\"\n           :aria-expanded=\"visible ? 'true' : 'false'\"\n           :disabled=\"disabled\"\n           @click.stop.prevent=\"toggle($event)\"\n           @keydown.enter.stop.prevent=\"toggle($event)\"\n           @keydown.space.stop.prevent=\"toggle($event)\"\n        >\n            <slot name=\"button-content\"><slot name=\"text\"><span v-html=\"text\"></span></slot></slot>\n        </a>\n\n        <div :class=\"['dropdown-menu',{'dropdown-menu-right': right}]\"\n             role=\"menu\"\n             ref=\"menu\"\n             :aria-labelledby=\"id ? (id + '__BV_button_') : null\"\n             @keyup.esc=\"onEsc\"\n             @keydown.tab=\"onTab\"\n             @keydown.up=\"focusNext($event,true)\"\n             @keydown.down=\"focusNext($event,false)\"\n             @mouseover=\"focusHovered($event)\"\n        >\n            <slot></slot>\n        </div>\n\n    </li>\n</template>\n\n<script>\n    import { dropdownMixin } from '../mixins';\n\n    export default {\n        mixins: [dropdownMixin],\n        computed: {\n            dropdownToggle() {\n                return this.noCaret ? '' : 'dropdown-toggle';\n            }\n        },\n        props: {\n            noCaret: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <button :class=\"classObject\"\n            type=\"button\"\n            :aria-label=\"label\"\n            :aria-controls=\"target.id ? target.id : target\"\n            :aria-expanded=\"toggleState ? 'true' : 'false'\"\n            @click=\"onclick\"\n    >\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n</template>\n\n<script>\nimport { listenOnRootMixin } from '../mixins';\n\nexport default {\n    mixins: [listenOnRootMixin],\n    computed: {\n        classObject() {\n            return [\n                'navbar-toggler',\n                'navbar-toggler-' + this.position\n            ];\n        }\n    },\n    data() {\n        return {\n            toggleState: false\n        };\n    },\n    props: {\n        label: {\n            type: String,\n            default: 'Toggle navigation'\n        },\n        position: {\n            type: String,\n            default: 'right'\n        },\n        target: {\n            required: true\n        }\n    },\n    methods: {\n        onclick() {\n            const target = this.target;\n            if (target.toggle) {\n                target.toggle();\n            }\n            this.$root.$emit('collapse::toggle', this.target);\n        },\n        handleStateEvt(target, state) {\n            if (target === this.target || target === this.target.id) {\n                this.toggleState = state;\n            }\n        }\n    },\n    created() {\n        this.listenOnRoot('collapse::toggle::state', this.handleStateEvt);\n    }\n};\n</script>\n","<template>\n    <nav :class=\"classObject\">\n        <slot></slot>\n    </nav>\n</template>\n\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'navbar',\n                    this.type ? `navbar-${this.type}` : null,\n                    this.variant ? `bg-${this.variant}` : null,\n                    this.fixed ? `fixed-${this.fixed}` : null,\n                    this.sticky ? 'sticky-top' : null,\n                    this.toggleable ? this.toggleableClass : null\n                ];\n            },\n            toggleableClass() {\n                let className = 'navbar-toggleable';\n\n                if (this.toggleBreakpoint) {\n                    className += `-${this.toggleBreakpoint}`;\n                }\n\n                return className;\n            }\n        },\n        props: {\n            type: {\n                type: String,\n                default: 'light'\n            },\n            variant: {\n                type: String\n            },\n            toggleable: {\n                type: Boolean,\n                default: false\n            },\n            toggleBreakpoint: {\n                type: String,\n                default: null\n            },\n            fixed: {\n                type: String\n            },\n            sticky: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <span class=\"navbar-text\">\n        <slot></slot>\n    </span>\n</template>\n\n<script>\n    export default {\n        props: {}\n    };\n</script>\n","<template>\n    <b-form :id=\"id || null\" inline>\n        <slot></slot>\n    </b-form>\n</template>\n\n<script>\n    import bForm from './form.vue';\n    \n    export default {\n        components: [bForm],\n        props: {\n            id: {\n                type: String,\n            }\n        }\n    };\n</script>\n","/**\n * @param {number} length\n * @return {Array}\n */\nexport default length => Array.apply(null, { length })\n","<template>\n    <div>\n        <span ref=\"trigger\"><slot></slot></span>\n        <div :class=\"['popover', 'fade', classState ? 'show' : '', popoverAlignment]\"\n             :style=\"popoverStyle\"\n             tabindex=\"-1\"\n             ref=\"popover\"\n             @focus=\"$emit('focus')\"\n             @blur=\"$emit('blur')\"\n        >\n            <div class=\"popover-arrow\"></div>\n            <h3 :is=\"titletag\" class=\"popover-title\" v-if=\"title\" v-html=\"title\"></h3>\n            <div class=\"popover-content\">\n                <div class=\"popover-content-wrapper\">\n                    <slot name=\"content\"><span v-html=\"content\"></span></slot>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import { popoverMixin } from '../mixins';\n\n    export default {\n        mixins: [popoverMixin],\n        props: {\n            title: {\n                type: String,\n                default: ''\n            },\n            titleTag: {\n                type: String,\n                default: 'h3'\n            },\n            content: {\n                type: String,\n                default: ''\n            },\n            popoverStyle: {\n                type: Object,\n                default: null\n            }\n        }\n    };\n\n</script>\n","<template>\n    <div class=\"progress\">\n        <transition>\n            <div role=\"progressbar\"\n                 :class=\"classObject\"\n                 :aria-valuenow=\"value\"\n                 :aria-valuemin=\"0\"\n                 :aria-valuemax=\"max\"\n                 :style=\"styleObject\"\n            >\n                <slot>\n                    <template v-if=\"showProgress\">{{progress}}%</template>\n                    <template v-else-if=\"showValue\">{{value}}</template>\n                </slot>\n            </div>\n        </transition>\n    </div>\n</template>\n\n<style>\n    .progress-bar {\n        transition: all .5s;\n    }\n</style>\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'progress-bar',\n                    this.progressVariant,\n                    (this.striped || this.animated) ? 'progress-bar-striped' : '',\n                    this.animated ? 'progress-bar-animated' : ''\n                ];\n            },\n            styleObject() {\n                return {\n                    width: this.progress + '%'\n                };\n            },\n            progressVariant() {\n                return this.variant ? `bg-${this.variant}` : null;\n            },\n            progress() {\n                const p = Math.pow(10, this.precision);\n                return Math.round((100 * p * this.value) / this.max) / p;\n            }\n        },\n        props: {\n            striped: {\n                type: Boolean,\n                default: false\n            },\n            animated: {\n                type: Boolean,\n                default: false\n            },\n            precision: {\n                type: Number,\n                default: 0\n            },\n            value: {\n                type: Number,\n                default: 0\n            },\n            max: {\n                type: Number,\n                default: 100\n            },\n            variant: {\n                type: String,\n                default: null\n            },\n            showProgress: {\n                type: Boolean,\n                default: false\n            },\n            showValue: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <table :id=\"id || null\"\n           :aria-busy=\"busy ? 'true' : 'false'\"\n           :class=\"tableClass\"\n    >\n        <thead :class=\"headClass\">\n            <tr>\n                <th v-for=\"(field,key) in fields\"\n                    @click.stop.prevent=\"headClicked($event,field,key)\"\n                    @keydown.enter.stop.prevent=\"headClicked($event,field,key)\"\n                    @keydown.space.stop.prevent=\"headClicked($event,field,key)\"\n                    :key=\"key\"\n                    :class=\"fieldClass(field,key)\"\n                    :style=\"field.thStyle || {}\"\n                    :aria-label=\"field.sortable ? ((sortDesc && sortBy === key) ? labelSortAsc : labelSortDesc) : null\"\n                    :aria-sort=\"(field.sortable && sortBy === key) ? (sortDesc ? 'descending' : 'ascending') : null\"\n                    :tabindex=\"field.sortable?'0':null\"\n                >\n                  <slot :name=\"'HEAD_'+key\" :label=\"field.label\" :column=\"key\" :field=\"field\">\n                    <div v-html=\"field.label\"></div>\n                  </slot>\n                </th>\n            </tr>\n        </thead>\n        <tfoot v-if=\"footClone\" :class=\"footClass\">\n            <tr>\n                <th v-for=\"(field,key) in fields\"\n                    @click.stop.prevent=\"headClicked($event,field,key)\"\n                    @keydown.enter.stop.prevent=\"headClicked($event,field,key)\"\n                    @keydown.space.stop.prevent=\"headClicked($event,field,key)\"\n                    :key=\"key\"\n                    :class=\"fieldClass(field,key)\"\n                    :style=\"field.thStyle || {}\"\n                    :aria-label=\"field.sortable ? ((sortDesc && sortBy === key) ? labelSortAsc : labelSortDesc) : null\"\n                    :aria-sort=\"(field.sortable && sortBy === key) ? (sortDesc ? 'descending' : 'ascending') : null\"\n                    :tabindex=\"field.sortable?'0':null\"\n                >\n                  <slot v-if=\"$scopedSlots['FOOT_'+key]\" :name=\"'FOOT_'+key\" :label=\"field.label\" :column=\"key\" :field=\"field\">\n                    <div v-html=\"field.label\"></div>\n                  </slot>\n                  <slot v-else :name=\"'HEAD_'+key\" :label=\"field.label\" :column=\"key\" :field=\"field\">\n                    <div v-html=\"field.label\"></div>\n                  </slot>\n                </th>\n            </tr>\n        </tfoot>\n        <tbody>\n            <tr v-for=\"(item,index) in _items\"\n                :key=\"index\"\n                :class=\"rowClass(item)\"\n                @click=\"rowClicked($event,item,index)\"\n                @hover=\"rowHovered($event,item,index)\"\n            >\n                <td v-for=\"(field,key) in fields\" :key=\"key\" :class=\"tdClass(field, item, key)\">\n                    <slot :name=\"key\" :value=\"item[key]\" :item=\"item\" :index=\"index\">{{item[key]}}</slot>\n                </td>\n            </tr>\n            <tr v-if=\"showEmpty && (!_items  || _items.length === 0)\">\n                <td :colspan=\"keys(fields).length\">\n                    <div v-if=\"filter\" role=\"alert\" aria-live=\"polite\">\n                        <slot name=\"emptyfiltered\">\n                            <div class=\"text-center my-2\" v-html=\"emptyFilteredText\"></div>\n                        </slot>\n                    </div>\n                    <div v-else role=\"alert\" aria-live=\"polite\">\n                        <slot name=\"empty\">\n                            <div class=\"text-center my-2\" v-html=\"emptyText\"></div>\n                        </slot>\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</template>\n\n<script>\n    import { warn } from '../utils';\n    import { keys } from '../utils/object.js';\n    import { listenOnRootMixin } from '../mixins'\n\n    const toString = v => {\n        if (!v) {\n            return '';\n        }\n        if (v instanceof Object) {\n            return keys(v).map(k => toString(v[k])).join(' ');\n        }\n        return String(v);\n    };\n\n    const recToString = (obj) => {\n        if (!(obj instanceof Object)) {\n            return '';\n        }\n\n        return toString(keys(obj).reduce((o, k) => {\n            // Ignore fields 'state' and ones that start with _\n            if (!(/^_/.test(k) || k === 'state')) {\n                o[k] = obj[k];\n            }\n            return o;\n        }, {}));\n    };\n\n    const defaultSortCompare = (a, b, sortBy) => {\n        if (typeof a[sortBy] === 'number' && typeof b[sortBy] === 'number') {\n            if (a[sortBy] < b[sortBy]) {\n                return -1;\n            } else if (a[sortBy] > b[sortBy]) {\n                return 1;\n            }\n            return 0;\n        } else {\n            return toString(a[sortBy]).localeCompare(toString(b[sortBy]), undefined, {\n                numeric: true\n            });\n        }\n    };\n\n    export default {\n        mixins: [listenOnRootMixin],\n        data() {\n            return {\n                sortBy: null,\n                sortDesc: true,\n                localItems: []\n            };\n        },\n        props: {\n            id: {\n                type: String,\n                default: ''\n            },\n            items: {\n                type: [Array, Function],\n                default() {\n                    if (this && this.itemsProvider) {\n                        // Deprecate itemsProvider\n                        warn(\"b-table: prop 'items-provider' has been deprecated. Pass a function to 'items' instead\");\n                        return this.itemsProvider;\n                    }\n                    return [];\n                }\n            },\n            fields: {\n                type: Object,\n                default: {}\n            },\n            striped: {\n                type: Boolean,\n                default: false\n            },\n            bordered: {\n                type: Boolean,\n                default: false\n            },\n            inverse: {\n                type: Boolean,\n                default: false\n            },\n            hover: {\n                type: Boolean,\n                default: false\n            },\n            small: {\n                type: Boolean,\n                default: false\n            },\n            responsive: {\n                type: Boolean,\n                default: false\n            },\n            headVariant: {\n                type: String,\n                default: ''\n            },\n            footVariant: {\n                type: String,\n                default: ''\n            },\n            perPage: {\n                type: Number,\n                default: null\n            },\n            currentPage: {\n                type: Number,\n                default: 1\n            },\n            filter: {\n                type: [String, RegExp, Function],\n                default: null\n            },\n            sortCompare: {\n                type: Function,\n                default: null\n            },\n            itemsProvider: {\n                // Deprecated in favour of items\n                type: Function,\n                default: null\n            },\n            noProviderPaging: {\n                type: Boolean,\n                default: false\n            },\n            noProviderSorting: {\n                type: Boolean,\n                default: false\n            },\n            noProviderFiltering: {\n                type: Boolean,\n                default: false\n            },\n            busy: {\n                type: Boolean,\n                default: false\n            },\n            value: {\n                type: Array,\n                default: () => []\n            },\n            footClone: {\n                type: Boolean,\n                default: false\n            },\n            labelSortAsc: {\n                type: String,\n                default: 'Click to sort Ascending'\n            },\n            labelSortDesc: {\n                type: String,\n                default: 'Click to sort Descending'\n            },\n            showEmpty: {\n                type: Boolean,\n                default: false\n            },\n            emptyText: {\n                type: String,\n                default: 'There are no records to show'\n            },\n            emptyFilteredText: {\n                type: String,\n                default: 'There are no records matching your request'\n            }\n        },\n        watch: {\n            items(newVal, oldVal) {\n                if (oldVal !== newVal) {\n                    this._providerUpdate();\n                }\n            },\n            sortDesc(newVal, oldVal) {\n                if (oldVal !== newVal && !this.noProviderSorting) {\n                    this._providerUpdate();\n                }\n            },\n            sortBy(newVal, oldVal) {\n                if (oldVal !== newVal && !this.noProviderSorting) {\n                    this._providerUpdate();\n                }\n            },\n            perPage(newVal, oldVal) {\n                if (oldVal !== newVal && !this.noProviderPaging) {\n                    this._providerUpdate();\n                }\n            },\n            currentPage(newVal, oldVal) {\n                if (oldVal !== newVal && !this.noProviderPaging) {\n                    this._providerUpdate();\n                }\n            },\n            filter(newVal, oldVal) {\n                if (oldVal !== newVal && !this.noProviderFiltering) {\n                    this._providerUpdate();\n                }\n            }\n        },\n        mounted() {\n            if (this.hasProvider) {\n                this._providerUpdate();\n            }\n            this.listenOnRoot('table::refresh', (id) => {\n                if (id === this.id) {\n                    this._providerUpdate();\n                }\n            });\n        },\n        computed: {\n            tableClass() {\n                return [\n                    'table',\n                    'b-table',\n                    this.striped ? 'table-striped' : '',\n                    this.hover ? 'table-hover' : '',\n                    this.inverse ? 'table-inverse' : '',\n                    this.bordered ? 'table-bordered' : '',\n                    this.responsive ? 'table-responsive' : '',\n                    this.small ? 'table-sm' : ''\n                ];\n            },\n            headClass() {\n                return this.headVariant ? 'thead-' + this.headVariant : '';\n            },\n            footClass() {\n                const variant = this.footVariant || this.headVariant || null;\n                return variant ? 'thead-' + variant : '';\n            },\n            hasProvider() {\n                return this.items instanceof Function;\n            },\n            providerFiltering() {\n                return Boolean(this.hasProvider && !this.noProviderFiltering);\n            },\n            providerSorting() {\n                return Boolean(this.hasProvider && !this.noProviderSorting);\n            },\n            providerPaging() {\n                return Boolean(this.hasProvider && !this.noProviderPaging);\n            },\n            context() {\n                return {\n                    perPage: this.perPage,\n                    currentPage: this.currentPage,\n                    filter: this.filter,\n                    sortBy: this.sortBy,\n                    sortDesc: this.sortDesc\n                };\n            },\n            _items() {\n                // Grab some props/data to ensure reactivity\n                const perPage = this.perPage;\n                const currentPage = this.currentPage;\n                const filter = this.filter;\n                const sortBy = this.sortBy;\n                const sortDesc = this.sortDesc;\n                const sortCompare = this.sortCompare || defaultSortCompare;\n\n                let items = this.hasProvider ? this.localItems : this.items;\n\n                if (!items) {\n                    this.$nextTick(this._providerUpdate);\n                    return [];\n                }\n\n                // Shallow copy of items, so we don't mutate the original array order/size\n                items = items.slice();\n\n                // Apply local filter\n                if (filter && !this.providerFiltering) {\n                    // Number of items before filtering\n                    const numOriginalItems = items.length;\n\n                    if (filter instanceof Function) {\n                        items = items.filter(filter);\n                    } else {\n                        let regex;\n                        if (filter instanceof RegExp) {\n                            regex = filter;\n                        } else {\n                            regex = new RegExp('.*' + filter + '.*', 'ig');\n                        }\n                        items = items.filter(item => {\n                            const test = regex.test(recToString(item));\n                            regex.lastIndex = 0;\n                            return test;\n                        });\n                    }\n\n                    if (numOriginalItems !== items.length) {\n                        // Emit a filtered notification event, as number of items has changed\n                        this.$emit('filtered', items);\n                    }\n                }\n\n                // Apply local Sort\n                if (this.sortBy && !this.providerSorting) {\n                    items = items.sort((a, b) => {\n                        const r = sortCompare(a, b, this.sortBy);\n                        return this.sortDesc ? r : r * -1;\n                    });\n                }\n\n                // Apply local pagination\n                if (perPage && !this.providerPaging) {\n                    // Grab the current page of data (which may be past filtered items)\n                    items = items.slice((currentPage - 1) * perPage, currentPage * perPage);\n                }\n\n                // Update the value model with the filtered/sorted/paginated data set\n                this.$emit('input', items);\n\n                return items;\n            }\n        },\n        methods: {\n            keys,\n            fieldClass(field, key) {\n                return [\n                    field.sortable ? 'sorting' : '',\n                    (field.sortable && this.sortBy === key) ? 'sorting_' + (this.sortDesc ? 'desc' : 'asc') : '',\n                    field.variant ? ('table-' + field.variant) : '',\n                    field.class ? field.class : '',\n                    field.thClass ? field.thClass : ''\n                ];\n            },\n            tdClass(field, item, key) {\n                let cellVariant = '';\n                if (item._cellVariants && item._cellVariants[key]) {\n                    cellVariant = (this.inverse ? 'bg-' : 'table-') + item._cellVariants[key];\n                }\n                return [\n                    (field.variant && !cellVariant) ? ((this.inverse ? 'bg-' : 'table-') + field.variant) : '',\n                    cellVariant,\n                    field.class ? field.class : '',\n                    field.tdClass ? field.tdClass : ''\n                ];\n            },\n            rowClass(item) {\n                // Prefer item._rowVariant over deprecated item.state\n                const variant = item._rowVariant || item.state || null;\n                return [\n                    variant ? ((this.inverse ? 'bg-' : 'table-') + variant) : ''\n                ];\n            },\n            rowClicked(e, item, index) {\n                if (this.busy) {\n                    // If table is busy (via provider) then don't propagate\n                    e.preventDefault();\n                    e.stopPropagation();\n                    return;\n                }\n                this.$emit('row-clicked', item, index);\n            },\n            rowHovered(e, item, index) {\n                if (this.busy) {\n                    // If table is busy (via provider) then don't propagate\n                    e.preventDefault();\n                    e.stopPropagation();\n                    return;\n                }\n                this.$emit('row-hovered', item, index);\n            },\n            headClicked(e, field, key) {\n                if (this.busy) {\n                    // If table is busy (via provider) then don't propagate\n                    e.preventDefault();\n                    e.stopPropagation();\n                    return;\n                }\n                let sortChanged = false;\n                if (!field.sortable) {\n                    if (this.sortBy) {\n                        this.sortBy = null;\n                        sortChanged = true;\n                    }\n                } else {\n                    if (key === this.sortBy) {\n                        // Change sorting direction on column\n                        this.sortDesc = !this.sortDesc;\n                    } else {\n                        // Start sorting this column descending\n                        this.sortBy = key;\n                        this.sortDesc = true;\n                    }\n                    sortChanged = true;\n                }\n                this.$emit('head-clicked', key, field);\n                if (sortChanged) {\n                    // Sorting parameters changed\n                    this.$emit('sort-changed', this.context);\n                }\n            },\n            refresh() {\n                // Expose refresh method\n                if (this.hasProvider) {\n                    this._providerUpdate();\n                }\n            },\n            _providerSetLocal(items) {\n                this.localItems = (items && items.length > 0) ? items.slice() : [];\n                this.$emit('refreshed');\n                this.emitOnRoot('table::refreshed', this.id);\n            },\n            _providerUpdate() {\n                // Refresh the provider items\n                if (this.busy || !this.hasProvider) {\n                    // Don't refresh remote data if we are 'busy' or if no provider\n                    return;\n                }\n\n                // Call provider function with context and optional callback\n                const data = this.items(this.context, this._providerSetLocal);\n\n                if (!data) {\n                    // Provider is using callback\n                    return;\n                }\n\n                if (data.then && typeof data.then === 'function') {\n                    // Provider returned Promise\n                    data.then((items) => {\n                        this._providerSetLocal(items);\n                    });\n                } else {\n                    // Provider returned Array data\n                    this._providerSetLocal(data);\n                }\n            }\n        }\n    };\n</script>\n\n<style>\n    /* Based on https://cdn.datatables.net/1.10.13/css/dataTables.bootstrap4.css */\n\n    table.b-table > thead > tr > .sorting,\n    table.b-table > tfoot > tr > .sorting {\n        padding-right: 30px;\n        cursor: pointer;\n        position: relative;\n    }\n\n    table.b-table thead > tr > .sorting:before,\n    table.b-table thead > tr > .sorting:after,\n    table.b-table tfoot > tr > .sorting:before,\n    table.b-table tfoot > tr > .sorting:after {\n        position: absolute;\n        bottom: 0.9em;\n        display: block;\n        opacity: 0.3;\n    }\n\n    table.b-table.table-sm > thead > tr > .sorting:before,\n    table.b-table.table-sm > thead > tr > .sorting:after,\n    table.b-table.table-sm > tfoot > tr > .sorting:before,\n    table.b-table.table-sm > tfoot > tr > .sorting:after {\n        bottom: 0.45em;\n    }\n\n    table.b-table > thead > tr > .sorting:before,\n    table.b-table > tfoot > tr > .sorting:before {\n        right: 1em;\n        content: \"\\2191\";\n    }\n\n    table.b-table > thead > tr > .sorting:after,\n    table.b-table > tfoot > tr > .sorting:after {\n        right: 0.5em;\n        content: \"\\2193\";\n    }\n\n    table.b-table > thead > tr > .sorting_asc:before,\n    table.b-table > thead > tr > .sorting_desc:after,\n    table.b-table > tfoot > tr > .sorting_asc:before,\n    table.b-table > tfoot > tr > .sorting_desc:after {\n        opacity: 1;\n    }\n\n    /* Busy table styling */\n\n    table.b-table[aria-busy=\"false\"] {\n        opacity: 1;\n    }\n\n    table.b-table[aria-busy=\"true\"] {\n        opacity: .6;\n    }\n</style>\n","<template>\n    <component :is=\"tag\" :id=\"id || null\" class=\"tabs\">\n        <div v-if=\"bottom\" :class=\"['tab-content',{'card-block': card}]\" ref=\"tabsContainer\">\n            <slot></slot>\n            <slot name=\"empty\" v-if=\"!tabs || !tabs.length\"></slot>\n        </div>\n\n        <div :class=\"{'card-header': card}\">\n            <ul :class=\"['nav','nav-' + navStyle, card ? 'card-header-'+navStyle : null]\"\n                role=\"tablist\"\n                tabindex=\"0\"\n                :aria-setsize=\"tabs.length\"\n                :aria-posinset=\"currentTab + 1\"\n                @keydown.left=\"previousTab\"\n                @keydown.up=\"previousTab\"\n                @keydown.right=\"nextTab\"\n                @keydown.down=\"nextTab\"\n                @keydown.shift.left=\"setTab(-1,false,1)\"\n                @keydown.shift.up=\"setTab(-1,false,1)\"\n                @keydown.shift.right=\"setTab(tabs.length,false,-1)\"\n                @keydown.shift.down=\"setTab(tabs.length,false,-1)\"\n            >\n                <li class=\"nav-item\" v-for=\"(tab, index) in tabs\" role=\"presentation\">\n                    <a :class=\"['nav-link',{small: small, active: tab.localActive, disabled: tab.disabled}]\"\n                       :href=\"tab.href\"\n                       role=\"tab\"\n                       :aria-selected=\"tab.localActive ? 'true' : 'false'\"\n                       :aria-controls=\"tab.id || null\"\n                       :id=\"tab.controlledBy || null\"\n                       @click.prevent.stop=\"setTab(index)\"\n                       @keydown.space.prevent.stop=\"setTab(index)\"\n                       @keydown.enter.prevent.stop=\"setTab(index)\"\n                       tabindex=\"-1\"\n                       v-if=\"!tab.headHtml\"\n                       v-html=\"tab.title\"\n                    ></a>\n                    <div :class=\"['tab-head',{small: small, active: tab.localActive, disabled: tab.disabled}]\"\n                         role=\"heading\"\n                         tabindex=\"-1\"\n                         v-else\n                         v-html=\"tab.headHtml\"></div>\n                </li>\n                <slot name=\"tabs\"></slot>\n            </ul>\n        </div>\n\n        <div v-if=\"!bottom\" :class=\"['tab-content',{'card-block': card}]\" ref=\"tabsContainer\">\n            <slot></slot>\n            <slot name=\"empty\" v-if=\"!tabs || !tabs.length\"></slot>\n        </div>\n    </component>\n</template>\n\n<script>\n    import {observeDom} from '../utils';\n\n    export default {\n        data() {\n            return {\n                currentTab: this.value,\n                tabs: []\n            };\n        },\n        props: {\n            id: {\n                type: String,\n                default: ''\n            },\n            tag: {\n                type: String,\n                default: 'div'\n            },\n            noFade: {\n                type: Boolean,\n                default: false\n            },\n            card: {\n                type: Boolean,\n                default: false\n            },\n            small: {\n                type: Boolean,\n                default: false\n            },\n            value: {\n                type: Number,\n                default: null\n            },\n            pills: {\n                type: Boolean,\n                default: false\n            },\n            lazy: {\n                type: Boolean,\n                default: false\n            },\n            bottom: {\n                type: Boolean,\n                default: false\n            }\n        },\n        watch: {\n            currentTab(val, old) {\n                if (val === old) {\n                    return;\n                }\n\n                this.$root.$emit('changed::tab', this, val, this.tabs[val]);\n                this.$emit('input', val);\n                this.tabs[val].$emit('click');\n            },\n            value(val, old) {\n                if (val === old) {\n                    return;\n                }\n\n                this.setTab(val);\n            },\n            fade(val, old) {\n                if (val === old) {\n                    return;\n                }\n\n                this.tabs.forEach(item => {\n                    this.$set(item, 'fade', val);\n                });\n            }\n        },\n        computed: {\n            fade() {\n                return !this.noFade;\n            },\n            navStyle() {\n                return this.pills ? 'pills' : 'tabs';\n            }\n        },\n        methods: {\n            /**\n             * Util: Return the sign of a number (as -1, 0, or 1)\n             */\n            sign(x) {\n                return (x === 0) ? 0 : (x > 0 ? 1 : -1);\n            },\n\n            /**\n             * Move to next tab\n             */\n            nextTab() {\n                this.setTab(this.currentTab, false, 1);\n            },\n\n            /**\n             * Move to previous tab\n             */\n            previousTab() {\n                this.setTab(this.currentTab, false, -1);\n            },\n\n            /**\n             * Set active tab on the tabs collection and the child 'tab' component\n             */\n            setTab(index, force, offset) {\n                offset = offset || 0;\n\n                // Prevent setting same tab!\n                if (!force && (index + offset) === this.currentTab) {\n                    return;\n                }\n\n                const tab = this.tabs[index + offset];\n\n                // Don't go beyond indexes!\n                if (!tab) {\n                    return;\n                }\n\n                // Ignore or Skip disabled\n                if (tab.disabled) {\n                    if (offset) {\n                        // Skip to next non disabled tab in offset direction (recursive)\n                        this.setTab(index, force, offset + this.sign(offset));\n                    }\n                    return;\n                }\n\n                // Activate current tab, and deactivte any old tabs\n                this.tabs.forEach( t => {\n                    if (t === tab) {\n                        // Set new tab as active\n                        this.$set(t, 'localActive', true);\n                    } else {\n                        // Ensure non current tabs are not active\n                        this.$set(tab, 'localActive', false);\n                    }\n                });\n\n                // Update currentTab\n                this.currentTab = index + offset;\n            },\n\n            /**\n             * Dynamically update tabs\n             */\n            updateTabs() {\n                // Probe tabs\n                if (this.$slots.default) {\n                    this.tabs = this.$slots.default.filter(tab => tab.componentInstance || false)\n                        .map(tab => tab.componentInstance);\n                } else {\n                    this.tabs = [];\n                }\n\n                this.tabs.forEach(tab => {\n                    this.$set(tab, 'fade', this.fade);\n                    this.$set(tab, 'lazy', this.lazy);\n                });\n\n                // Get initial active tab\n                let tabIndex = this.currentTab;\n\n                if (tabIndex === null || tabIndex === undefined) {\n                    // Make null for easier testing further on\n                    tabIndex = null;\n                }\n\n                if (tabIndex === null) {\n                    // Find last active non-dsabled tab in current tabs\n                    this.tabs.forEach((tab, index) => {\n                        if (tab.active && !tab.disabled) {\n                            tabIndex = index;\n                        }\n                    });\n                }\n\n                if (tabIndex === null) {\n                    // Find first non-disabled tab in current tabs\n                    this.tabs.forEach((tab, index) => {\n                        if (!tab.disabled && tabIndex === null) {\n                            tabIndex = index;\n                        }\n                    });\n                }\n\n                // Workaround to fix problem when currentTab is removed\n                let offset = 0;\n                if (tabIndex >= this.tabs.length) {\n                    offset = -1;\n                }\n\n                this.setTab(tabIndex || 0, true, offset);\n            }\n        },\n        mounted() {\n            this.updateTabs();\n\n            // Observe Child changes so we can notify tabs change\n            observeDom(this.$refs.tabsContainer, this.updateTabs.bind(this), {subtree: false});\n        }\n    };\n\n</script>\n","<template>\n    <transition @enter=\"enter\" @before-leave=\"beforeLeave\" mode=\"out-in\">\n        <component :is=\"tag\"\n                   :id=\"id || null\"\n                   role=\"tabpanel\"\n                   :class=\"['tab-pane', {show, fade, disabled, active: localActive}]\"\n                   :aria-hidden=\"localActive ? 'false' : 'true'\"\n                   :aria-expanded=\"localActive ? 'true' : 'false'\"\n                   :aria-lablelledby=\"controlledBy || null\"\n                   v-if=\"localActive || !lazy\"\n                   v-show=\"localActive || lazy\"\n                   ref=\"panel\"\n        >\n             <slot></slot>\n        </component>\n    </transition>\n</template>\n\n<script>\n    export default {\n        methods: {\n            enter() {\n                this.show = true;\n            },\n            beforeLeave() {\n                this.show = false;\n            }\n        },\n        data() {\n            return {\n                fade: false,\n                localActive: this.active,\n                lazy: true,\n                show: false\n            };\n        },\n        computed: {\n            controlledBy() {\n                return this.buttonId || (this.id ? (this.id + '__BV_tab_button__') : null);\n            }\n        },\n        props: {\n            id: {\n                type: String,\n                default: ''\n            },\n            tag: {\n                type: String,\n                default: 'div'\n            },\n            buttonId: {\n                type: String,\n                default: ''\n            },\n            title: {\n                type: String,\n                default: ''\n            },\n            headHtml: {\n                type: String,\n                default: null\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            },\n            active: {\n                type: Boolean,\n                default: false\n            },\n            href: {\n                type: String,\n                default: '#'\n            }\n        }\n    };\n\n</script>\n","<template>\n    <div class=\"d-inline-block\">\n        <span class=\"d-inline-block\" ref=\"trigger\"><slot></slot></span>\n        <div :class=\"['tooltip','tooltip-' + this.placement]\"\n             :style=\"{opacity:showState?1:0}\"\n             tabindex=\"-1\"\n             ref=\"popover\"\n             @focus=\"$emit('focus')\"\n             @blur=\"$emit('blur')\"\n        >\n            <div class=\"tooltip-inner\">\n                <slot name=\"content\"><span v-html=\"content\"></span></slot>\n            </div>\n        </div>\n    </div>\n</template>\n\n<style>\n    .tooltip {\n        display: block;\n        transition: all 0.3s;\n    }\n</style>\n\n<script>\n    import { popoverMixin } from '../mixins';\n\n    export default {\n        mixins: [popoverMixin],\n        props: {\n            content: {\n                type: String,\n                default: ''\n            },\n            triggers: {\n                type: [Boolean, String, Array],\n                default: 'hover'\n            }\n        }\n    };\n</script>\n","const inBrowser = typeof window !== 'undefined';\n\nimport target from './_target';\nconst listen_types = {click: true};\n\n// Property key for handler\nconst BVT = '__BV_toggle__';\n\n// Event nmmes\nconst EVENT_TOGGLE = 'collapse::toggle';\nconst EVENT_STATE = 'collapse::toggle::state';\n\nexport default {\n\n    bind(el, binding, vnode) {\n\n        const targets = target(vnode, binding, listen_types, ({targets, vnode}) => {\n            targets.forEach(target => {\n                vnode.context.$root.$emit(EVENT_TOGGLE, target);\n            });\n        });\n\n        if (inBrowser && vnode.context && targets.length > 0) {\n            // Add aria attributes to element\n            el.setAttribute('aria-controls', targets.join(' '));\n            el.setAttribute('aria-expanded', 'false');\n\n            // Toggle state hadnler, stored on element\n            el[BVT] = function toggleDirectiveHandler(id, state) {\n                if (targets.indexOf(id) !== -1) {\n                    el.setAttribute('aria-expanded', state ? 'true' : 'false');\n                }\n            };\n\n            // Listen for toggle state changes\n            vnode.context.$root.$on(EVENT_STATE, el[BVT]);\n        }\n    },\n    unbind(el, binding, vnode) {\n        if (el[BVT]) {\n            // Remove our $root listener\n            vnode.context.$root.$off(EVENT_STATE, el[BVT]);\n            el[BVT] = null;\n        }\n    }\n};\n","import target from './_target';\n\nconst listen_types = {click: true};\n\nexport default {\n// eslint-disable-next-line no-shadow-restricted-names\n    bind(undefined, binding, vnode) {\n        target(vnode, binding, listen_types, ({targets, vnode}) => {\n            targets.forEach(target => {\n                vnode.context.$root.$emit('show::modal', target, vnode.elm);\n            });\n        });\n    }\n};\n","import * as components from './components';\nimport * as directives from './directives';\n\n/* eslint-disable no-var, no-undef, guard-for-in, object-shorthand */\n\nconst VuePlugin = {\n    install: function (Vue) {\n        if (Vue._bootstrap_vue_installed) {\n            return;\n        }\n\n        Vue._bootstrap_vue_installed = true;\n\n        // Register components\n        for (var component in components) {\n            Vue.component(component, components[component]);\n        }\n\n        // Register directives\n        for (var directive in directives) {\n            Vue.directive(directive, directives[directive]);\n        }\n    }\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(VuePlugin);\n}\n\nexport default VuePlugin;\n"],"names":["observeDOM","el","callback","opts","const","MutationObserver","window","WebKitMutationObserver","eventListenerSupported","addEventListener","mutations","addedNodes","length","removedNodes","observe","assign","childList","subtree","warn","message","console","isVisible","offsetWidth","offsetHeight","filterVisible","els","filter","omitLinkProps","keys","props","reduce","memo","prop","arrayIncludes","propsToOmit","findFirstVisible","root","selector","querySelectorAll","let","arrayFrom","find","i","makePageArray","startNum","numPages","range","map","value","index","number","className","targets","vnode","binding","listen_types","fn","modifiers","t","all_listen_types","push","listener","forEach","type","elm","isElement","obj","nodeType","closest","element","$QSA","document","$QS","querySelector","getVm","__vue__","toType","toString","call","match","toLowerCase","typeCheckConfig","componentName","config","configTypes","property","Object","prototype","hasOwnProperty","expectedTypes","valueType","RegExp","test","error","ScrollSpy","this","_$el","_selector","Selector","NAV_LINKS","LIST_ITEMS","DROPDOWN_ITEMS","join","_config","Default","_offsets","_targets","_activeTarget","_scrollHeight","_$root","_resizeTimeout","updateConfig","Array","from","toStr","isCallable","toInteger","Number","isNaN","isFinite","Math","floor","abs","maxSafeInteger","pow","toLength","min","max","arrayLike","C","items","TypeError","T","mapFn","arguments","kValue","len","A","k","isArray","arg","array","indexOf","target","varArgs","to","nextSource","nextKey","render","data","countDownTimerId","dismissed","created","state","computed","classObject","alertVariant","dismissible","variant","localShow","show","String","default","Boolean","dismissLabel","watch","showChanged","mounted","methods","dismiss","$emit","clearCounter","clearInterval","dismissCountDown","setInterval","documentElement","_clickOutListener","destroyed","removeEventListener","e","$el","contains","clickOutListener","BVRL","listenOnRoot","event","$root","$on","emitOnRoot","ref","args","shift","$off","ITEM_SELECTOR","HEADER_SELECTOR","ALL_SELECTOR","mixins","listenOnRootMixin","id","text","dropup","disabled","right","visible","clickOut","old","body","children","noop","click","split","toggle","$nextTick","clearItems","item","getFirstItem","focusItem","onTab","onEsc","preventDefault","stopPropagation","$refs","button","focus","focusNext","up","getItems","focusHovered","idx","classList","add","remove","menu","name","required","checkboxClass","custom-control","custom","form-check-inline","inline","plain","formOptions","options","option","valueField","textField","selectedValue","localValue","returnObject","old_value","active","activeClass","append","exact","exactActiveClass","href","rel","replace","routerTag","tag","linkProps","isRouterLink","$router","_href","computedRel","componentTag","linkClassObject","linkClick","TRIGGER_LISTENERS","hover","mouseenter","mouseleave","blur","PLACEMENT_PARAMS","top","bottom","left","TETHER_CLASS_PREFIX","TETHER_CLASSES","enabled","TRANSITION_DURATION","constraints","debounce","validator","delay","hide","offset","placement","popoverStyle","targetOffset","triggers","triggerKeys","triggerState","classState","lastEvent","normalizedTriggers","popoverAlignment","showState","setOptions","newTriggers","oldTriggers","updateListeners","val","getDelay","clearTimeout","$data","_timeout","setTimeout","togglePopover","addListener","trigger","_trigger","eventHandler","destroyTether","_tether","destroy","regx","timeStamp","action","getTetherOptions","attachment","_popover","classes","classPrefix","hidePopover","style","display","refreshPosition","position","removeListener","showPopover","Tether","newShowState","appliedTriggers","removeTriggers","popover","updated","beforeDestroy","parentElement","removeChild","linkMixin","bLinkPropKeys","components","bLink","normalizedItems","userDefinedActive","originalItemsLength","normalizedItem","_originalItem","isLast","link","_linkProps","itemProp","ariaCurrent","onClick","originalLinkProps","btnVariant","btnSize","btnBlock","btnDisabled","componentType","block","size","btnType","conditionalLinkProps","justify","vertical","keyNav","setItemFocus","prev","focusFirst","focusLast","tabIndex","blockClass","overlay","cardVariant","cardInverse","inverse","cardAlign","align","header","headerVariant","headerClass","headerTag","footer","footerVariant","footerClass","footerTag","title","titleTag","subTitle","subTitleTag","noBlock","img","imgAlt","deck","columns","DIRECTION","next","current","isSliding","slides","labelPrev","labelNext","labelGotoSlide","labelIndicators","interval","indicators","controls","height","background","visibilityState","hidden","pause","_intervalId","start","slide","restart","relatedTarget","self","n","setAttribute","oldVal","direction","currentSlide","nextSlide","_carouselAnimation","contentVisibleUp","contentTag","caption","captionTag","textTag","contentClasses","carousel-caption","navbar-collapse","isNav","model","newVal","emitState","accordion","enter","realHeight","getComputedStyle","leave","clearHeight","handleToggleEvt","handleAccordionEvt","openedId","dropdownMixin","bButton","toggleText","selected","dropdownToggle","caret","displayItem","forceDefault","defaultText","result","list","select","INPUT_SELECTOR","labelId","label","descriptionId","description","feedbackId","feedback","describedBy","inputState","computedLabelCols","labelSize","labelCols","labelLayout","labelSrOnly","horizontal","labelAlignClass","labelTextAlign","inputLayout","updateTarget","labelFor","content","input","inputSelector","for","formMixin","formCustomMixin","formCheckBoxMixin","uncheckedValue","checked","inputClass","isChecked","handleChange","x","formOptionsMixin","stacked","ariaInvalid","invalid","staticValue","formatter","Function","bFormInputStatic","rowsCount","format","formattedValue","onInput","lazyFormatter","onChange","onKeyUp","readonly","static","placeholder","rows","textarea","selectedFile","dragging","selectedLabel","multiple","selectedFormat","file","computedChooseLabel","chooseLabel","reset","onFileChange","dataTransfer","noTraverse","setFiles","files","queue","webkitGetAsEntry","traverseFileTree","Promise","all","then","filesArr","filesArray","accept","dragover","noDrop","dropEffect","drop","path","resolve","isFile","$path","isDirectory","createReader","readEntries","entries","directory","dropLabel","fluid","containerFluid","lead","badgeVariant","badgePill","pill","flush","actionTags","listState","isAction","myTag","verticalAlignClass","rightAlign","verticalAlign","FOCUS_SELECTOR","bBtn","is_visible","return_focus","returnFocus","new_val","old_val","buttonSize","noFade","noCloseOnBackdrop","noCloseOnEsc","noAutoFocus","noEnforceFocus","hideHeader","hideFooter","hideHeaderClose","okOnly","okDisabled","headerCloseLabel","closeTitle","okTitle","enforceFocus","isOK","canceled","cancel","returnFocusTo","onClickOut","activeElement","showHandler","triggerEl","hideHandler","nav","navbar-nav","isNavBar","nav-tabs","tabs","nav-pills","pills","flex-column","nav-fill","fill","nav-justified","justified","noCaret","toggleState","onclick","handleStateEvt","fixed","sticky","toggleable","toggleableClass","toggleBreakpoint","bForm","apply","ELLIPSIS_THRESHOLD","showFirstDots","showLastDots","currentPage","numberOfPages","ceil","totalRows","perPage","pageList","numLinks","limit","hideEllipsis","pages","isActive","page","pageItemClasses","pageLinkClasses","setPage","num","currentpage","focusCurrent","getButtons","btn","setBtnFocus","reverse","parseInt","getAttribute","focusPrev","buttons","newPage","oldPage","newValue","oldValue","hideGotoEndButtons","ariaLabel","labelFirstPage","firstText","labelPrevPage","prevText","labelNextPage","nextText","labelLastPage","lastText","labelPage","ellipsisText","ariaControls","popoverMixin","progressVariant","striped","animated","styleObject","width","progress","p","precision","round","showProgress","showValue","v","recToString","o","defaultSortCompare","a","b","sortBy","localeCompare","undefined","numeric","sortDesc","localItems","itemsProvider","fields","bordered","small","responsive","headVariant","footVariant","sortCompare","noProviderPaging","noProviderSorting","noProviderFiltering","busy","footClone","labelSortAsc","labelSortDesc","showEmpty","emptyText","emptyFilteredText","_providerUpdate","hasProvider","tableClass","headClass","footClass","providerFiltering","providerSorting","providerPaging","context","_items","slice","numOriginalItems","regex","lastIndex","sort","r","fieldClass","field","key","sortable","class","thClass","tdClass","cellVariant","_cellVariants","rowClass","_rowVariant","rowClicked","rowHovered","headClicked","sortChanged","refresh","_providerSetLocal","currentTab","card","lazy","setTab","fade","$set","navStyle","sign","nextTab","previousTab","force","tab","updateTabs","$slots","componentInstance","observeDom","tabsContainer","bind","beforeLeave","localActive","controlledBy","buttonId","headHtml","inBrowser","BVT","EVENT_TOGGLE","EVENT_STATE","unbind","isServer","Element","s","matches","ownerDocument","NAME","EVENT","BVSS","method","throttle","DefaultType","ClassName","DROPDOWN_ITEM","DROPDOWN_MENU","DROPDOWN_TOGGLE","NAV_LINK","LIST_ITEM","ACTIVE","NAV_LIST_GROUP","NAV","LIST_GROUP","DROPDOWN","OffsetMethod","OFFSET","POSITION","vm","listen","scroller","_getScroller","tagName","unListen","autoMethod","offsetMethod","offsetBase","_getScrollTop","_getScrollHeight","charAt","bcr","getBoundingClientRect","offsetTop","process","scrollTop","scrollHeight","maxScroll","_getOffsetHeight","_activate","_clear","scheduleRefresh","handleEvent","dispose","pageYOffset","innerHeight","queries","links","dropdown","_setActiveState","_setParentsSiblingActiveState","$props","previousElementSibling","inserted","update","componentUpdated","VuePlugin","install","Vue","_bootstrap_vue_installed","component","directive","directives","use"],"mappings":"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"}