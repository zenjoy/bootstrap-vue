{"version":3,"file":"bootstrap-vue.js","sources":["../lib/utils/observe-dom.js","../lib/utils/warn.js","../lib/mixins/dropdown.js","../lib/mixins/link.js","../lib/components/button-toolbar.vue","../lib/components/modal.vue","../lib/components/pagination.vue","../lib/directives/_target.js","../lib/directives/scrollspy.js","../lib/utils/array.js","../lib/utils/object.js","../lib/components/alert.vue","../lib/mixins/clickout.js","../lib/mixins/listen-on-root.js","../lib/mixins/form.js","../lib/mixins/form-checkbox.js","../lib/mixins/form-custom.js","../lib/mixins/form-options.js","../lib/mixins/popover.js","../lib/components/link.vue","../lib/components/breadcrumb.vue","../lib/components/button.vue","../lib/components/button-group.vue","../lib/components/input-group.vue","../lib/components/input-group-addon.vue","../lib/components/input-group-button.vue","../lib/components/card.vue","../lib/components/card-group.vue","../lib/components/carousel.vue","../lib/components/carousel-slide.vue","../lib/components/collapse.vue","../lib/components/dropdown.vue","../lib/components/dropdown-item.vue","../lib/components/dropdown-item-button.vue","../lib/components/dropdown-divider.vue","../lib/components/dropdown-header.vue","../lib/components/dropdown-select.vue","../lib/components/form.vue","../lib/components/form-fieldset.vue","../lib/components/form-checkbox.vue","../lib/components/form-radio.vue","../lib/components/form-input-static.vue","../lib/components/form-input.vue","../lib/components/form-file.vue","../lib/components/form-select.vue","../lib/components/jumbotron.vue","../lib/components/badge.vue","../lib/components/list-group.vue","../lib/components/list-group-item.vue","../lib/components/media.vue","../lib/components/nav.vue","../lib/components/nav-item.vue","../lib/components/nav-item-dropdown.vue","../lib/components/nav-toggle.vue","../lib/components/navbar.vue","../lib/components/nav-text.vue","../lib/components/nav-form.vue","../lib/utils/range.js","../lib/components/popover.vue","../lib/components/progress.vue","../lib/components/table.vue","../lib/components/tabs.vue","../lib/components/tab.vue","../lib/components/tooltip.vue","../lib/directives/toggle.js","../lib/directives/modal.js","../lib/index.js"],"sourcesContent":["\nimport { assign } from '../utils/object';\n/**\n * Observe a DOM element changes, falls back to eventListener mode\n * @param {Element} el The DOM element to observe\n * @param {Function} callback callback to be called on change\n * @param {object} [opts={childList: true, subtree: true}] observe options\n * @see http://stackoverflow.com/questions/3219758\n */\nexport default function observeDOM(el, callback, opts) {\n    const MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\n    const eventListenerSupported = window.addEventListener;\n\n    if (MutationObserver) {\n        // Define a new observer\n        const obs = new MutationObserver(mutations => {\n            if (mutations[0].addedNodes.length > 0 || mutations[0].removedNodes.length > 0) {\n                callback();\n            }\n        });\n\n        // Have the observer observe foo for changes in children\n        obs.observe(el, assign({childList: true, subtree: true}, opts));\n    } else if (eventListenerSupported) {\n        el.addEventListener('DOMNodeInserted', callback, false);\n        el.addEventListener('DOMNodeRemoved', callback, false);\n    }\n}\n","/**\n * Log a warning message to the console with bootstrap-vue formatting sugar.\n * @param {string} message\n */\nfunction warn(message) {\n    console.warn(`[Bootstrap-Vue warn]: ${message}`)\n}\n\nexport default warn\n","import clickOut from './clickout';\nimport listenOnRootMixin from './listen-on-root'\nimport { from as arrayFrom } from '../utils/array'\n\n// Determine if an HTML element is visible - Faster than CSS check\nfunction isVisible(el) {\n    return el && (el.offsetWidth > 0 || el.offsetHeight > 0);\n}\n\n// Return an Array of visible items\nfunction filterVisible(els) {\n    return els ? els.filter(el => isVisible(el)) : [];\n}\n\n// Dropdown item CSS selectors\nconst ITEM_SELECTOR = '.dropdown-item:not(.disabled):not([disabled])';\nconst HEADER_SELECTOR = '.dropdown-header';\nconst ALL_SELECTOR = [ITEM_SELECTOR, HEADER_SELECTOR].join(',');\n\nexport default {\n    mixins: [listenOnRootMixin],\n    props: {\n        id: {\n            type: String\n        },\n        text: {\n            type: String,\n            default: ''\n        },\n        dropup: {\n            type: Boolean,\n            default: false\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        right: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            visible: false\n        };\n    },\n    created() {\n        const listener = el => {\n            if (el !== this) {\n                this.visible = false;\n            }\n        };\n\n        // To keep one dropdown opened on page\n        this.listenOnRoot('shown::dropdown', listener);\n\n        // Hide when clicked on links\n        this.listenOnRoot('clicked::link', listener);\n    },\n    mounted: clickOut.mounted,\n    destroyed: clickOut.destroyed,\n    watch: {\n        visible(state, old) {\n            if (state === old) {\n                return; // Avoid duplicated emits\n            }\n\n            if (state) {\n                this.emitOnRoot('shown::dropdown', this);\n                /*\n                 If this is a touch-enabled device we add extra\n                 empty mouseover listeners to the body's immediate children;\n                 only needed because of broken event delegation on iOS\n                 https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n                 */\n                if (typeof document !== 'undefined' && 'ontouchstart' in document.documentElement) {\n                    const children = arrayFrom(document.body.children);\n                    children.forEach(el => {\n                        el.addEventListener('mouseover', this.noop);\n                    });\n                }\n            } else {\n                this.emitOnRoot('hidden::dropdown', this);\n                /*\n                 If this is a touch-enabled device we remove the extra\n                 empty mouseover listeners we added for iOS support\n                 */\n                if (typeof document !== 'undefined' && 'ontouchstart' in document.documentElement) {\n                    const children = arrayFrom(document.body.children);\n                    children.forEach(el => {\n                        el.removeEventListener('mouseover', this.noop);\n                    });\n                }\n            }\n        }\n    },\n    methods: {\n        ...clickOut.methods,\n        noop() {\n            // Do nothing event handler (used in visible watch)\n        },\n        clickOutListener() {\n            this.visible = false;\n        },\n        click(e) {\n            if (this.disabled) {\n                this.visible = false;\n                return;\n            }\n            if (this.split) {\n                this.$emit('click', e);\n                this.emitOnRoot('shown::dropdown', this);\n            } else {\n                this.toggle();\n            }\n        },\n        toggle() {\n            if (this.disabled) {\n                this.visible = false;\n                return;\n            }\n            this.visible = !this.visible;\n            if (this.visible) {\n                this.$nextTick(function () {\n                    // Clear any items that may have active state left\n                    this.clearItems();\n                    // Focus first visible non-disabled item\n                    const item = this.getFirstItem();\n                    if (item) {\n                        this.focusItem(0, [item]);\n                    }\n                });\n            }\n        },\n        onTab() {\n            if (this.visible) {\n                this.visible = false;\n            }\n        },\n        onEsc(e) {\n            if (this.visible) {\n                this.visible = false;\n                e.preventDefault();\n                e.stopPropagation();\n                this.$nextTick(function () {\n                    // Return focus to original trigger button\n                    let el;\n                    if (this.split && this.$refs.toggle) {\n                        el = this.$refs.toggle.$el || this.$refs.toggle;\n                    } else {\n                        el = this.$refs.button.$el || this.$refs.button;\n                    }\n                    if (el && el.focus) {\n                        el.focus();\n                    }\n                });\n            }\n        },\n        focusNext(e, up) {\n            if (!this.visible) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            this.$nextTick(() => {\n                const items = this.getItems();\n                if (items.length < 1) {\n                    return;\n                }\n                let index = items.indexOf(e.target);\n                if (up && index > 0) {\n                    index--;\n                } else if (!up && index < items.length - 1) {\n                    index++;\n                }\n                if (index < 0) {\n                    index = 0;\n                }\n                this.focusItem(index, items);\n            });\n        },\n        focusHovered(e) {\n            if (!this.visible) {\n                return;\n            }\n            this.$nextTick(() => {\n                const items = this.getItems();\n                if (items.length < 1) {\n                    return;\n                }\n                const index = items.indexOf(e.target);\n                if (index > -1) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    this.focusItem(index, items);\n                }\n            });\n        },\n        focusItem(idx, items) {\n            items.forEach((el, i) => {\n                if (i === idx) {\n                    el.classList.add('active');\n                    el.focus();\n                } else {\n                    el.classList.remove('active');\n                }\n            });\n        },\n        clearItems() {\n            const items = this.getItems();\n            items.forEach(el => {\n                el.classList.remove('active');\n            });\n        },\n        getItems() {\n            // Get all items and headers\n            return filterVisible(arrayFrom(this.$refs.menu.querySelectorAll(ALL_SELECTOR)));\n        },\n        getFirstItem() {\n            // Get the first non-header non-disabled item\n            let item = filterVisible(arrayFrom(this.$refs.menu.querySelectorAll(ITEM_SELECTOR)))[0];\n            if (!item) {\n                // If no items then try a header\n                item = filterVisible(arrayFrom(this.$refs.menu.querySelectorAll(HEADER_SELECTOR)))[0];\n            }\n            return item || null;\n        }\n    }\n};\n","import { warn } from '../utils';\nimport { arrayIncludes } from '../utils/array';\nimport { keys } from '../utils/object';\n// Props compatible with vue-router\n// https://github.com/vuejs/vue-router/blob/dev/src/components/link.js\nexport const props = {\n    active: {\n        type: Boolean,\n        default: false\n    },\n\n    activeClass: {\n        type: String,\n        default: \"active\"\n    },\n\n    append: {\n        type: Boolean,\n        default: false\n    },\n\n    disabled: {\n        type: Boolean,\n        default: false\n    },\n\n    event: {\n        type: [String, Array],\n        default: \"click\"\n    },\n\n    exact: {\n        type: Boolean,\n        default: false\n    },\n\n    exactActiveClass: {\n        type: String,\n        default: \"active\"\n    },\n\n    href: {\n        type: String,\n        default: \"#\"\n    },\n\n    rel: {\n        type: String,\n        default: null\n    },\n\n    replace: {\n        type: Boolean,\n        default: false\n    },\n\n    routerTag: {\n        type: String,\n        default: \"a\"\n    },\n\n    tag: {\n        type: String,\n        default: null\n    },\n\n    target: {\n        type: String,\n        default: \"_self\"\n    },\n\n    to: {\n        type: [String, Object],\n        default: null\n    }\n};\n\nexport const computed = {\n    linkProps() {\n        return keys(props).reduce((memo, prop) => {\n            memo[prop] = this[prop];\n\n            return memo;\n        }, {});\n    },\n\n    isRouterLink() {\n        return Boolean(this.$router && this.to && !this.disabled);\n    },\n\n    _href() {\n        if (this.disabled) {\n            return \"#\";\n        }\n\n        // If href explicitly provided\n        if (this.href) {\n            return this.href;\n        }\n\n        // Fallback to `to` prop\n        if (this.to && typeof this.to === \"string\") {\n            return this.to;\n        }\n    },\n\n    computedRel() {\n        if (this.target === \"_blank\" && this.rel === null) {\n            return \"noopener\";\n        }\n        return this.rel || null;\n    },\n\n    componentTag(){\n        if (this.tag) {\n            warn('<b-link> \"tag\" property is deprecated, please use \"routerTag\" property instead.');\n\n            return this.tag;\n        }\n\n        return this.routerTag;\n    },\n\n    linkClassObject() {\n        return [\n            this.active ? (this.exact ? this.exactActiveClass : this.activeClass) : null,\n            this.disabled ? \"disabled\" : null\n        ];\n    }\n};\n\nexport const methods = {\n    linkClick(e) {\n        if (!this.disabled) {\n            this.$root.$emit(\"clicked::link\", this);\n            this.$emit(\"click\", e);\n        } else {\n            e.stopPropagation();\n        }\n\n        if (!this.isRouterLink && this._href === \"#\") {\n            // stop scroll-to-top behavior\n            e.preventDefault();\n        }\n    }\n};\n\nexport default {\n    props,\n    computed,\n    methods\n};\n\nexport function pickLinkProps(...propsToPick) {\n    return keys(props).reduce((memo, prop) => {\n        if (arrayIncludes(propsToPick, prop)) {\n            memo[prop] = props[prop];\n        }\n\n        return memo;\n    }, {});\n}\n\nexport function omitLinkProps(...propsToOmit) {\n    return keys(props).reduce((memo, prop) => {\n        if (!arrayIncludes(propsToOmit, prop)) {\n            memo[prop] = props[prop];\n        }\n\n        return memo;\n    }, {});\n}\n","<template>\n    <div :class=\"classObject\"\n         role=\"toolbar\"\n         :tabindex=\"keyNav ? '0' : null\"\n         @focusin.self=\"focusFirst\"\n         @keydown.left=\"focusNext($event,true)\"\n         @keydown.up=\"focusNext($event,true)\"\n         @keydown.right=\"focusNext($event,false)\"\n         @keydown.down=\"focusNext($event,false)\"\n         @keydown.shift.left=\"focusFirst($event)\"\n         @keydown.shift.up=\"focusFirst($event)\"\n         @keydown.shift.right=\"focusLast($event)\"\n         @keydown.shift.down=\"focusLast($event)\"\n    >\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    import { from as arrayFrom } from '../utils/array'\n    const ITEM_SELECTOR = [\n        '.btn:not(.disabled):not([disabled])',\n        '.form-control:not(.disabled):not([disabled])',\n        'select:not(.disabled):not([disabled])',\n        'input[type=\"checkbox\"]:not(.disabled)',\n        'input[type=\"radio\"]:not(.disabled)'\n    ].join(',');\n\n    // Determine if an HTML element is visible - Faster than CSS check\n    function isVisible(el) {\n        return el && (el.offsetWidth > 0 || el.offsetHeight > 0);\n    }\n\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'btn-toolbar',\n                    (this.justify && !this.vertical) ? 'justify-content-between' : ''\n                ];\n            }\n        },\n        props: {\n            justify: {\n                type: Boolean,\n                default: false\n            },\n            keyNav: {\n                type: Boolean,\n                default: false\n            }\n        },\n        methods: {\n            setItemFocus(item) {\n                this.$nextTick(() => {\n                    item.focus();\n                });\n            },\n            focusNext(e, prev) {\n                if (!this.keyNav) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                const items = this.getItems();\n                if (items.length < 1) {\n                    return;\n                }\n                let index = items.indexOf(e.target);\n                if (prev && index > 0) {\n                    index--;\n                } else if (!prev && index < items.length - 1) {\n                    index++;\n                }\n                if (index < 0) {\n                    index = 0;\n                }\n                this.setItemFocus(items[index]);\n            },\n            focusFirst(e) {\n                if (!this.keyNav) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                const items = this.getItems();\n                if (items.length > 0) {\n                    this.setItemFocus(items[0]);\n                }\n            },\n            focusLast(e) {\n                if (!this.keyNav) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                const items = this.getItems();\n                if (items.length > 0) {\n                    this.setItemFocus([items.length - 1]);\n                }\n            },\n            getItems() {\n                let items = arrayFrom(this.$el.querySelectorAll(ITEM_SELECTOR));\n                items.forEach(item => {\n                    // Ensure tabfocus is -1 on any new elements\n                    item.tabIndex = -1;\n                });\n                return items.filter(el => isVisible(el));\n            }\n        },\n        mounted() {\n            if (this.keyNav) {\n                // Pre-set the tabindexes if the markup does not include tabindex=\"-1\" on the toolbar items\n                this.getItems();\n            }\n        }\n    };\n</script>\n","<template>\n    <div>\n        <transition-group enter-class=\"hidden\"\n                          enter-to-class=\"\"\n                          enter-active-class=\"\"\n                          @after-enter=\"focusFirst\"\n                          leave-class=\"show\"\n                          leave-active-class=\"\"\n                          leave-to-class=\"hidden\"\n        >\n            <div :class=\"['modal',{fade: !noFade, show: is_visible}]\"\n                 :id=\"id || null\"\n                 role=\"dialog\"\n                 ref=\"modal\"\n                 key=\"modal\"\n                 v-show=\"is_visible\"\n                 @click=\"onClickOut()\"\n                 @keyup.esc=\"onEsc()\"\n            >\n\n                <div :class=\"['modal-dialog','modal-'+size]\">\n                    <div class=\"modal-content\"\n                         tabindex=\"-1\"\n                         role=\"document\"\n                         ref=\"content\"\n                         :aria-labelledby=\"(hideHeader || !id) ? null : (id + '__BV_header_')\"\n                         :aria-describedby=\"id ? (id + '__BV_body_') : null\"\n                         @click.stop\n                    >\n\n                        <header class=\"modal-header\"\n                                ref=\"header\"\n                                :id=\"id ? (id + '__BV_header_') : null\"\n                                v-if=\"!hideHeader\"\n                        >\n                            <slot name=\"modal-header\">\n                                <h5 :is=\"titleTag\" class=\"modal-title\">\n                                    <slot name=\"modal-title\">{{title}}</slot>\n                                </h5>\n                                <button type=\"button\"\n                                        v-if=\"!hideHeaderClose\"\n                                        class=\"close\"\n                                        :aria-label=\"headerCloseLabel\"\n                                        @click=\"hide\"\n                                >\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </slot>\n                        </header>\n\n                        <div class=\"modal-body\" ref=\"body\" :id=\"id ? (id + '__BV_body_') : null\">\n                            <slot></slot>\n                        </div>\n\n                        <footer class=\"modal-footer\" ref=\"footer\" v-if=\"!hideFooter\">\n                            <slot name=\"modal-footer\">\n                                <b-btn v-if=\"!okOnly\"\n                                       variant=\"secondary\"\n                                       :size=\"buttonSize\"\n                                       @click=\"hide(false)\"\n                                ><slot name=\"modal-cancel\">{{ closeTitle }}</slot></b-btn>\n                                <b-btn variant=\"primary\"\n                                       :size=\"buttonSize\"\n                                       :disabled=\"okDisabled\"\n                                       @click=\"hide(true)\"\n                                ><slot name=\"modal-ok\">{{ okTitle }}</slot></b-btn>\n                            </slot>\n                        </footer>\n\n                    </div>\n                </div>\n            </div>\n\n            <div key=\"modal-backdrop\"\n                 :class=\"['modal-backdrop',{fade: !noFade, show: is_visible}]\"\n                 v-if=\"is_visible\"\n            ></div>\n        </transition-group>\n    </div>\n</template>\n\n<style scoped>\n    .hidden {\n        opacity: 0 !important;\n    }\n\n    /* Make modal display as block instead of inline style, and because Vue's v-show deletes inline \"display\" style */\n    .modal {\n        display: block;\n    }\n</style>\n\n<script>\n    import bBtn from './button.vue';\n    import { listenOnRootMixin } from '../mixins';\n    import { from as arrayFrom } from '../utils/array'\n\n    const FOCUS_SELECTOR = [\n        'button:not([disabled])',\n        'input:not([disabled])',\n        'select:not([disabled])',\n        'textarea:not([disabled])',\n        'a:not([disabled]):not(.disabled)',\n        '[tabindex]:not([disabled]):not(.disabled)'\n    ].join(',');\n\n    // Determine if an HTML element is visible - Faster than CSS check\n    function isVisible(el) {\n        return el && (el.offsetWidth > 0 || el.offsetHeight > 0);\n    }\n\n    // Find the first visible element contained in a given root element\n    function findFirstVisible(root, selector) {\n        if (!root || !root.querySelectorAll || !selector) {\n            return null;\n        }\n        let els = arrayFrom(root.querySelectorAll(selector));\n\n        // IE 10 & 11 do not support native array.find()\n        // So we try native find first, then fall back to a loop\n        let el = els.find ? els.find(el => isVisible(el)) : null;\n        for (let i = 0; !el && i < els.length; i++) {\n            if (isVisible(els[i])) {\n                el = els[i];\n            }\n        }\n        return el;\n    }\n\n    export default {\n        mixins: [listenOnRootMixin],\n        components: {bBtn},\n        data() {\n            return {\n                is_visible: false,\n                return_focus: this.returnFocus || null\n            };\n        },\n        model: {\n            prop: 'visible',\n            event: 'change'\n        },\n        computed: {\n            body() {\n                if (typeof document !== 'undefined') {\n                    return document.querySelector('body');\n                }\n            }\n        },\n        watch: {\n            visible(new_val, old_val) {\n                if (new_val === old_val) {\n                    return;\n                }\n\n                if (new_val) {\n                    this.show();\n                } else {\n                    this.hide();\n                }\n            }\n        },\n        props: {\n            id: {\n                type: String,\n                default: null\n            },\n            title: {\n                type: String,\n                default: ''\n            },\n            titleTag: {\n                type: String,\n                default: 'h5'\n            },\n            size: {\n                type: String,\n                default: 'md'\n            },\n            buttonSize: {\n                type: String,\n                default: 'md'\n            },\n            noFade: {\n                type: Boolean,\n                default: false\n            },\n            noCloseOnBackdrop: {\n                type: Boolean,\n                default: false\n            },\n            noCloseOnEsc: {\n                type: Boolean,\n                default: false\n            },\n            noAutoFocus: {\n                type: Boolean,\n                default: false\n            },\n            noEnforceFocus: {\n                type: Boolean,\n                default: false\n            },\n            hideHeader: {\n                type: Boolean,\n                default: false\n            },\n            hideFooter: {\n                type: Boolean,\n                default: false\n            },\n            hideHeaderClose: {\n                type: Boolean,\n                default: false\n            },\n            okOnly: {\n                type: Boolean,\n                default: false\n            },\n            okDisabled: {\n                type: Boolean,\n                default: false\n            },\n            visible: {\n                type: Boolean,\n                default: false\n            },\n            returnFocus: {\n                default: null\n            },\n            headerCloseLabel: {\n                type: String,\n                default: 'Close'\n            },\n            closeTitle: {\n                type: String,\n                default: 'Close'\n            },\n            okTitle: {\n                type: String,\n                default: 'OK'\n            }\n        },\n        methods: {\n            show() {\n                if (this.is_visible) {\n                    return;\n                }\n                this.$emit('show');\n                this.is_visible = true;\n                this.$root.$emit('shown::modal', this.id);\n                this.body.classList.add('modal-open');\n                this.$emit('shown');\n                this.$emit('change', true);\n                if (typeof document !== 'undefined') {\n                    // Guard against infinite focus loop\n                    document.removeEventListener('focusin', this.enforceFocus, false);\n                    // Handle constrained focus\n                    document.addEventListener('focusin', this.enforceFocus, false);\n                }\n            },\n            hide(isOK) {\n                if (!this.is_visible) {\n                    return;\n                }\n\n                // Create event object\n                let canceled = false;\n                const e = {\n                    isOK,\n                    cancel() {\n                        canceled = true;\n                    }\n                };\n\n                // Emit events\n                this.$emit('change', false);\n                this.$emit('hide', e);\n\n                if (isOK === true) {\n                    this.$emit('ok', e);\n                } else if (isOK === false) {\n                    this.$emit('cancel', e);\n                }\n\n                // Hide if not canceled\n                if (!canceled) {\n                    if (typeof document !== 'undefined') {\n                        // Remove focus handler\n                        document.removeEventListener('focusin', this.enforceFocus, false);\n                        // Return focus to original button/trigger element if provided\n                        this.returnFocusTo();\n                    }\n                    this.is_visible = false;\n                    this.$root.$emit('hidden::modal', this.id);\n                    this.$emit('hidden', e);\n                    this.body.classList.remove('modal-open');\n                }\n            },\n            onClickOut() {\n                // If backdrop clicked, hide modal\n                if (this.is_visible && !this.noCloseOnBackdrop) {\n                    this.hide();\n                }\n            },\n            onEsc() {\n                // If ESC pressed, hide modal\n                if (this.is_visible && !this.noCloseOnEsc) {\n                    this.hide();\n                }\n            },\n            focusFirst() {\n                // Don't try and focus if we are SSR\n                if (typeof document === 'undefined') {\n                    return;\n                }\n                this.$nextTick(() => {\n                    // If activeElement is child of content, no need to change focus\n                    if (document.activeElement && this.$refs.content.contains(document.activeElement)) {\n                        return;\n                    }\n\n                    let el;\n                    if (!this.noAutoFocus) {\n                        // Focus the modal's first focusable item, searching body, footer, then header\n                        if (this.$refs.body) {\n                            el = findFirstVisible(this.$refs.body, FOCUS_SELECTOR);\n                        }\n                        if (!el && this.$refs.footer) {\n                            el = findFirstVisible(this.$refs.footer, FOCUS_SELECTOR);\n                        }\n                        if (!el && this.$refs.header) {\n                            el = findFirstVisible(this.$refs.header, FOCUS_SELECTOR);\n                        }\n                    }\n                    if (!el) {\n                        // Focus the modal content wrapper\n                        el = this.$refs.content;\n                    }\n                    if (el && el.focus) {\n                        el.focus();\n                    }\n                });\n            },\n            returnFocusTo() {\n                // Prrefer returnFocus prop over event specified value\n                let el = this.returnFocus || this.return_focus || null;\n\n                if (el) {\n                    if (typeof el === 'string') {\n                        // CSS Selector\n                        el = document.querySelector(el);\n                    }\n                    if (el && el.$el && typeof el.$el.focus === 'function') {\n                        // Component vm reference\n                        el.$el.focus();\n                    } else if (el && typeof el.focus === 'function') {\n                        // Plain element\n                        el.focus();\n                    }\n                }\n            },\n            enforceFocus(e) {\n                // If focus leaves modal, bring it back\n                // Event Listener bound on document\n                if (!this.noEnforceFocus &&\n                    this.is_visible &&\n                    document !== e.target &&\n                    this.$refs.content &&\n                    this.$refs.content !== e.target &&\n                    !this.$refs.content.contains(e.target)) {\n                    this.$refs.content.focus();\n                }\n            },\n            showHandler(id, triggerEl) {\n                if (id === this.id) {\n                    this.return_focus = triggerEl || null;\n                    this.show();\n                }\n            },\n            hideHandler(id) {\n                if (id === this.id) {\n                    this.hide();\n                }\n            }\n        },\n        created() {\n            this.listenOnRoot('show::modal', this.showHandler);\n            this.listenOnRoot('hide::modal', this.hideHandler);\n        },\n        mounted() {\n            if (this.visible === true) {\n                this.show();\n            }\n        },\n        destroyed() {\n            // Make sure event listener is rmoved\n            if (typeof document !== 'undefined') {\n                document.removeEventListener('focusin', this.enforceFocus, false);\n            }\n        }\n    };\n\n</script>\n","<template>\n    <ul :class=\"['pagination',btnSize]\"\n        role=\"group\"\n        :aria-disabled=\"disabled ? 'true' : 'false'\"\n        :aria-label=\"ariaLabel ? ariaLabel : null\"\n        @focusin.self=\"focusCurrent\"\n        @keydown.left.prevent=\"focusPrev\"\n        @keydown.right.prevent=\"focusNext\"\n        @keydown.shift.left.prevent=\"focusFirst\"\n        @keydown.shift.right.prevent=\"focusLast\"\n    >\n\n        <!-- Goto First Page button -->\n        <template v-if=\"!hideGotoEndButtons\">\n            <li v-if=\"isActive(1) || disabled\" class=\"page-item disabled\" aria-hidden=\"true\">\n                <span class=\"page-link\" v-html=\"firstText\"></span>\n            </li>\n            <li v-else class=\"page-item\">\n                <a class=\"page-link\"\n                   :aria-label=\"labelFirstPage\"\n                   :aria-controls=\"ariaControls || null\"\n                   href=\"#\"\n                   tabindex=\"-1\"\n                   @click.prevent=\"setPage($event, 1)\"\n                   @keydown.enter.prevent=\"setPage($event, 1)\"\n                   @keydown.space.prevent=\"setPage($event, 1)\"\n                ><span aria-hidden=\"true\" v-html=\"firstText\"></span></a>\n            </li>\n        </template>\n\n        <!-- Goto Previous page button -->\n        <li v-if=\"isActive(1) || disabled\" class=\"page-item disabled\" aria-hidden=\"true\">\n            <span class=\"page-link\" v-html=\"prevText\"></span>\n        </li>\n        <li v-else class=\"page-item\">\n            <a class=\"page-link\"\n               :aria-label=\"labelPrevPage\"\n               :aria-controls=\"ariaControls || null\"\n               href=\"#\"\n               tabindex=\"-1\"\n               @click.prevent=\"setPage($event, currentPage - 1)\"\n               @keydown.enter.prevent=\"setPage($event, currentPage - 1)\"\n               @keydown.space.prevent=\"setPage($event, currentPage - 1)\"\n            ><span aria-hidden=\"true\" v-html=\"prevText\"></span></a>\n        </li>\n\n        <!-- First Ellipsis Bookend -->\n        <li v-if=\"showFirstDots\" class=\"page-item disabled hidden-xs-down\" role=\"separator\">\n            <span class=\"page-link\" v-html=\"ellipsisText\"></span>\n        </li>\n\n        <!-- Pages links -->\n        <li v-for=\"page in pageList\"\n            :class=\"pageItemClasses(page)\"\n            :key=\"page.number\"\n        >\n            <a :class=\"pageLinkClasses(page)\"\n               :disabled=\"disabled\"\n               :aria-disabled=\"disabled ? 'true' : 'false'\"\n               :aria-label=\"labelPage + ' ' + page.number\"\n               :aria-current=\"isActive(page) ? 'true' : null\"\n               :aria-posinset=\"page.number\"\n               :aria-setsize=\"numberOfPages\"\n               :aria-controls=\"ariaControls || null\"\n               href=\"#\"\n               tabindex=\"-1\"\n               @click.prevent=\"setPage($event, page.number)\"\n               @keydown.enter.prevent=\"setPage($event, page.number)\"\n               @keydown.space.prevent=\"setPage($event, page.number)\"\n            >{{ page.number }}</a>\n        </li>\n\n        <!-- Last Ellipsis Bookend -->\n        <li v-if=\"showLastDots\" class=\"page-item disabled hidden-xs-down\" role=\"separator\">\n            <span class=\"page-link\" v-html=\"ellipsisText\"></span>\n        </li>\n\n        <!-- Goto Next page -->\n        <li v-if=\"isActive(numberOfPages) || disabled\" class=\"page-item disabled\" aria-hidden=\"true\">\n            <span class=\"page-link\" v-html=\"nextText\"></span>\n        </li>\n        <li v-else class=\"page-item\">\n            <a class=\"page-link\"\n               :aria-label=\"labelNextPage\"\n               :aria-controls=\"ariaControls || null\"\n               href=\"#\"\n               tabindex=\"-1\"\n               @click.prevent=\"setPage($event, currentPage + 1)\"\n               @keydown.enter.prevent=\"setPage($event, currentPage + 1)\"\n               @keydown.space.prevent=\"setPage($event, currentPage + 1)\"\n            ><span aria-hidden=\"true\" v-html=\"nextText\"></span></a>\n        </li>\n\n        <!-- Goto Last page -->\n        <template v-if=\"!hideGotoEndButtons\">\n            <li v-if=\"isActive(numberOfPages) || disabled\" class=\"page-item disabled\" aria-hidden=\"true\">\n                <span class=\"page-link\" v-html=\"lastText\"></span>\n            </li>\n            <li v-else class=\"page-item\">\n                <a class=\"page-link\"\n                   :aria-label=\"labelLastPage\"\n                   :aria-controls=\"ariaControls || null\"\n                   href=\"#\"\n                   tabindex=\"-1\"\n                   @click.prevent=\"setPage($event, numberOfPages)\"\n                   @keydown.enter.prevent=\"setPage($event, numberOfPages)\"\n                   @keydown.space.prevent=\"setPage($event, numberOfPages)\"\n                ><span aria-hidden=\"true\" v-html=\"lastText\"></span></a>\n            </li>\n        </template>\n    </ul>\n</template>\n\n<script>\nimport { from as arrayFrom } from '../utils/array'\nimport range from '../utils/range'\n// Determine if an HTML element is visible - Faster than CSS check\nfunction isVisible(el) {\n    return el && (el.offsetWidth > 0 || el.offsetHeight > 0);\n}\n\n// Make an array of N to N+X\nfunction makePageArray(startNum, numPages) {\n    return range(numPages).map(function(value, index){\n        return { number: index + startNum, className: null };\n    });\n}\n\n// Threshold of limit size when we start/stop showing ellipsis\nconst ELLIPSIS_THRESHOLD = 3;\n\nexport default {\n    data() {\n        return {\n            showFirstDots: false,\n            showLastDots: false,\n            currentPage: this.value\n        };\n    },\n    computed: {\n        numberOfPages() {\n            const result = Math.ceil(this.totalRows / this.perPage);\n            return (result < 1) ? 1 : result;\n        },\n        btnSize() {\n            return this.size ? `pagination-${this.size}` : '';\n        },\n        pageList() {\n            // Sanity checks\n            if (this.currentPage > this.numberOfPages) {\n              this.currentPage = this.numberOfPages;\n            } else if (this.currentPage < 1) {\n              this.currentPage = 1;\n            }\n\n            // - Hide first ellipsis marker\n            this.showFirstDots = false;\n            // - Hide last ellipsis marker\n            this.showLastDots = false;\n\n            let numLinks = this.limit;\n            let startNum = 1;\n\n            if (this.numberOfPages <= this.limit) {\n                // Special Case: Less pages available than the limit of displayed pages\n                numLinks = this.numberOfPages;\n            } else if (this.currentPage < (this.limit - 1) && this.limit > ELLIPSIS_THRESHOLD) {\n                // We are near the beginning of the page list\n                if (!this.hideEllipsis) {\n                    numLinks = this.limit - 1;\n                    this.showLastDots = true;\n                }\n            } else if ((this.numberOfPages - this.currentPage + 2) < this.limit && this.limit > ELLIPSIS_THRESHOLD) {\n                // We are near the end of the list\n                if (!this.hideEllipsis) {\n                    this.showFirstDots = true;\n                    numLinks = this.limit - 1;\n                }\n                startNum = this.numberOfPages - numLinks + 1;\n            } else {\n                // We are somewhere in the middle of the page list\n                if (this.limit > ELLIPSIS_THRESHOLD && !this.hideEllipsis) {\n                    this.showFirstDots = true;\n                    this.showLastDots = true;\n                    numLinks = this.limit - 2;\n                }\n                startNum = this.currentPage - Math.floor(numLinks / 2);\n            }\n\n            // Sanity checks\n            if (startNum < 1) {\n                startNum = 1;\n            } else if (startNum > (this.numberOfPages - numLinks)) {\n                startNum = this.numberOfPages - numLinks + 1;\n            }\n\n            // Generate list of page numbers\n            const pages = makePageArray(startNum, numLinks);\n\n            // We limit to a total of 3 page buttons on small screens\n            // Ellipsis will also be hidden on small screens\n            if (pages.length > 3) {\n                const idx = this.currentPage - startNum;\n                if (idx === 0) {\n                    // Keep leftmost 3 buttons visible\n                    for (let i = 3; i < pages.length; i++) {\n                        pages[i].className = 'hidden-xs-down';\n                    }\n                } else if (idx === pages.length - 1) {\n                    // Keep rightmost 3 buttons visible\n                    for (let i = 0; i < pages.length - 3; i++) {\n                        pages[i].className = 'hidden-xs-down';\n                    }\n                } else {\n                    // hide left button(s)\n                    for (let i = 0; i < idx - 1; i++) {\n                        pages[i].className = 'hidden-xs-down';\n                    }\n                    // hide right button(s)\n                    for (let i = pages.length - 1; i > idx + 1; i--) {\n                        pages[i].className = 'hidden-xs-down';\n                    }\n                }\n            }\n\n            return pages;\n        }\n    },\n    methods: {\n        isActive(page) {\n            return page === this.currentPage;\n        },\n        pageItemClasses(page) {\n            const active = this.isActive(page.number);\n            return [\n                'page-item',\n                this.disabled ? 'disabled' : '',\n                active ? 'active' : '',\n                page.className\n            ];\n        },\n        pageLinkClasses(page) {\n            const active = this.isActive(page.number);\n            return [\n                'page-link',\n                this.disabled ? 'disabled' : '',\n                active ? 'active' : ''\n            ];\n        },\n        setPage(e, num) {\n            if (this.disabled) {\n                e.preventDefault();\n                e.stopPropagation();\n                return;\n            }\n            if (num > this.numberOfPages) {\n                this.currentPage = this.numberOfPages;\n            } else if (num < 1) {\n                this.currentpage = 1;\n            } else {\n                this.currentPage = num;\n            }\n            this.$nextTick(() => {\n                // Keep the current button focused if possible\n                if (isVisible(e.target) && e.target.focus) {\n                    e.target.focus();\n                } else {\n                    this.focusCurrent();\n                }\n            });\n            this.$emit('change', this.currentPage);\n        },\n        getButtons() {\n            const buttons = arrayFrom(this.$el.querySelectorAll('a.page-link'));\n            // Return only buttons that are visible\n            return buttons.filter(btn => isVisible(btn));\n        },\n        setBtnFocus(btn) {\n            this.$nextTick(() => {\n                btn.focus();\n            });\n        },\n        focusFirst() {\n            const btn = this.getButtons().find(el => !el.disabled);\n            if (btn && btn.focus && btn !== document.activeElement) {\n                this.setBtnFocus(btn);\n            }\n        },\n        focusLast() {\n            const btn = this.getButtons().reverse().find(el => !el.disabled);\n            if (btn && btn.focus && btn !== document.activeElement) {\n                this.setBtnFocus(btn);\n            }\n        },\n        focusCurrent() {\n            const btn = this.getButtons().find(el => parseInt(el.getAttribute('aria-posinset'), 10) === this.currentPage);\n            if (btn && btn.focus) {\n                this.setBtnFocus(btn);\n            } else {\n                // Fallback if current page is not in button list\n                this.focusFirst();\n            }\n        },\n        focusPrev() {\n            const buttons = this.getButtons();\n            const idx = buttons.indexOf(document.activeElement);\n            if (idx > 0 && !buttons[idx - 1].disabled && buttons[idx - 1].focus) {\n                this.setBtnFocus(buttons[idx - 1]);\n            }\n        },\n        focusNext() {\n            const buttons = this.getButtons();\n            const idx = buttons.indexOf(document.activeElement);\n            const cnt = buttons.length - 1;\n            if (idx < cnt && !buttons[idx + 1].disabled && buttons[idx + 1].focus) {\n                this.setBtnFocus(buttons[idx + 1]);\n            }\n        }\n    },\n    watch: {\n        currentPage(newPage, oldPage) {\n            if (newPage !== oldPage) {\n                this.$emit('input', newPage);\n            }\n        },\n        value(newValue, oldValue) {\n            if (newValue !== oldValue) {\n                this.currentPage = newValue;\n            }\n        }\n    },\n    props: {\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        value: {\n            type: Number,\n            default: 1\n        },\n        limit: {\n            type: Number,\n            default: 5\n        },\n        perPage: {\n            type: Number,\n            default: 20\n        },\n        totalRows: {\n            type: Number,\n            default: 20\n        },\n        size: {\n            type: String,\n            default: 'md'\n        },\n        hideGotoEndButtons: {\n            type: Boolean,\n            default: false\n        },\n        ariaLabel: {\n            type: String,\n            default: 'Pagination'\n        },\n        labelFirstPage: {\n            type: String,\n            default: 'Goto first page'\n        },\n        firstText: {\n            type: String,\n            default: '&laquo;'\n        },\n        labelPrevPage: {\n            type: String,\n            default: 'Goto previous page'\n        },\n        prevText: {\n            type: String,\n            default: '&lsaquo;'\n        },\n        labelNextPage: {\n            type: String,\n            default: 'Goto next page'\n        },\n        nextText: {\n            type: String,\n            default: '&rsaquo;'\n        },\n        labelLastPage: {\n            type: String,\n            default: 'Goto last page'\n        },\n        lastText: {\n            type: String,\n            default: '&raquo;'\n        },\n        labelPage: {\n            type: String,\n            default: 'Goto page'\n        },\n        hideEllipsis: {\n            type: Boolean,\n            default: false\n        },\n        ellipsisText: {\n            type: String,\n            default: '&hellip;'\n        },\n        ariaControls: {\n            type: String,\n            default: null\n        }\n    }\n};\n</script>\n\n<style scoped>\n    .page-item {\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n    }\n    .page-item.disabled {\n        cursor: not-allowed;\n        opacity: .65;\n    }\n</style>\n","import { keys } from '../utils/object';\nconst all_listen_types = {hover: true, click: true, focus: true};\n\nexport default function targets (vnode, binding, listen_types, fn) {\n\n    const targets = keys(binding.modifiers || {})\n        .filter(t => !all_listen_types[t]);\n\n    if (binding.value) {\n        targets.push(binding.value);\n    }\n\n    const listener = () => {\n        fn({targets, vnode});\n    };\n\n    keys(all_listen_types).forEach(type => {\n        if (listen_types[type] || binding.modifiers[type]) {\n            vnode.elm.addEventListener(type, listener);\n        }\n    });\n\n    // Return the list of targets\n    return targets;\n}\n","import { isArray, from as arrayFrom } from '../utils/array';\nimport { assign, keys } from '../utils/object';\nconst inBrowser = typeof window !== 'undefined';\nconst isServer = !inBrowser;\n\n/*\n * Polyfill for Element.closest() for IE :(\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill\n */\n\nif (inBrowser && window.Element && !Element.prototype.closest) {\n    Element.prototype.closest = function (s) {\n        const matches = (this.document || this.ownerDocument).querySelectorAll(s);\n        let el = this;\n        let i;\n        do {\n            i = matches.length;\n            // eslint-disable-next-line no-empty\n            while (--i >= 0 && matches.item(i) !== el) {\n            }\n        } while ((i < 0) && (el = el.parentElement));\n        return el;\n    };\n}\n\n/*\n * Constants / Defaults\n */\n\nconst NAME = 'v-b-scrollspy';\nconst EVENT = 'scrollspy::activate';\nconst BVSS = '__BV_ScrollSpy__';\n\nconst Default = {\n    element: 'body',\n    offset: 10,\n    method: 'auto',\n    throttle: 100\n};\n\nconst DefaultType = {\n    element: '(string|element)',\n    offset: 'number',\n    method: 'string',\n    throttle: 'number'\n};\n\nconst ClassName = {\n    DROPDOWN_ITEM: 'dropdown-item',\n    DROPDOWN_MENU: 'dropdown-menu',\n    DROPDOWN_TOGGLE: 'dropdown-toggle',\n    NAV_LINK: 'nav-link',\n    LIST_ITEM: 'list-group-item',\n    ACTIVE: 'active'\n};\n\nconst Selector = {\n    ACTIVE: '.active',\n    NAV_LIST_GROUP: '.nav, .list-group',\n    NAV: '.nav',\n    LIST_GROUP: '.list-group',\n    NAV_LINKS: '.nav-link',\n    LIST_ITEMS: '.list-group-item',\n    DROPDOWN: '.dropdown',\n    DROPDOWN_ITEMS: '.dropdown-item',\n    DROPDOWN_TOGGLE: '.dropdown-toggle'\n};\n\nconst OffsetMethod = {\n    OFFSET: 'offset',\n    POSITION: 'position'\n};\n\n/*\n * DOM Utility Methods\n */\n\nfunction isElement(obj) {\n    return obj.nodeType;\n}\n\n// Wrapper for Element.closest to emulate jQuery's closest (sorta)\nfunction closest(element, selector) {\n    const el = element.closest(selector);\n    return el === element ? null : el;\n}\n\n// Query Selector All wrapper\nfunction $QSA(selector, element) {\n    if (!element) {\n        element = document;\n    }\n    if (!isElement(element)) {\n        return [];\n    }\n    return arrayFrom(element.querySelectorAll(selector));\n}\n\n// Query Selector wrapper\nfunction $QS(selector, element) {\n    if (!element) {\n        element = document;\n    }\n    if (!isElement(element)) {\n        return null;\n    }\n    return element.querySelector(selector) || null;\n}\n\n/*\n * Utility Methods\n */\n\n// Get Vue VM from element\nfunction getVm(el) {\n    return el ? el.__vue__ : null;\n}\n\n// Better var type detection\nfunction toType(obj) {\n    return ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n}\n\n// Check config properties for expected types\nfunction typeCheckConfig(componentName, config, configTypes) {\n    for (const property in configTypes) {\n        if (Object.prototype.hasOwnProperty.call(configTypes, property)) {\n            const expectedTypes = configTypes[property];\n            const value = config[property];\n            const valueType = value && isElement(value) ? 'element' : toType(value);\n\n            if (!new RegExp(expectedTypes).test(valueType)) {\n                console.error(\n                    componentName + ': Option \"' + property + '\" provided type \"' +\n                    valueType + '\" but expected type \"' + expectedTypes + '\"'\n                );\n            }\n        }\n    }\n}\n\n/*\n * ScrollSpy Class\n */\n\nfunction ScrollSpy(el, binding) {\n    // The element that contains the nav-links et al\n    this._$el = el;\n    // The selectors to find the nav-links\n    this._selector = [\n        Selector.NAV_LINKS,\n        Selector.LIST_ITEMS,\n        Selector.DROPDOWN_ITEMS\n    ].join(',');\n    // Start off with default configurtion\n    this._config = assign({}, Default);\n    // Target HREF IDs and their offsets\n    this._offsets = [];\n    this._targets = [];\n    // The currently active target (as an HREF id)\n    this._activeTarget = null;\n    // Curent scroll height (for detecting document height changes)\n    this._scrollHeight = 0;\n    // Reference to the $root VM so we can spew events\n    this._$root = null;\n    // Reference to our throttled resize timeout\n    this._resizeTimeout = null;\n\n    // Process bindings/config\n    this.updateConfig(binding);\n}\n\n/*\n * ScrollSpy Public methods\n */\n\n// Update config\nScrollSpy.prototype.updateConfig = function (binding) {\n    // If Argument, assume element ID\n    if (binding.arg) {\n        // Element ID specified as arg. We must pre-pend #\n        this._config.element = '#' + binding.arg;\n    }\n\n    // Process modifiers\n    keys(binding.modifiers).forEach(val => {\n        if (/^\\d+$/.test(val)) {\n            // Offest value\n            this._config.offset = parseInt(val, 10);\n        } else if (/^(auto|position|offset)$/.test(val)) {\n            // Offset method\n            this._config.method = val;\n        }\n    });\n\n    // Process value\n    if (typeof binding.value === 'string') {\n        // Value is  a CSS ID or selector\n        this._config.element = binding.value;\n    } else if (typeof binding.value === 'number') {\n        // Value is offset\n        this._config.offset = Math.round(binding.value);\n    } else if (typeof binding.value === 'object') {\n        // Value is config object\n        keys(binding.value).filter(k => Boolean(DefaultType[k])).forEach(k => {\n            this._config[k] = binding.value[k];\n        });\n    }\n\n    // Check the config and log error to console. Unknown options are ignored\n    typeCheckConfig(NAME, this._config, DefaultType);\n\n    // Get Vue instance from element\n    const vm = getVm(this._$el);\n    if (vm && vm.$root) {\n        this._$root = vm.$root;\n    }\n\n    // Return ourself for easy chaining\n    return this;\n};\n\n// Turn on event listener\nScrollSpy.prototype.listen = function () {\n    const scroller = this._getScroller();\n    if (scroller) {\n        if (scroller.tagName !== 'BODY') {\n            scroller.addEventListener('scroll', this, false);\n        }\n        window.addEventListener('scroll', this, false);\n        window.addEventListener('orientationchange', this, false);\n        window.addEventListener('resize', this, false);\n    }\n\n    // Return ourself for easy chaining\n    return this;\n};\n\n// Turn off event listener\nScrollSpy.prototype.unListen = function () {\n    const scroller = this._getScroller();\n    if (scroller) {\n        if (scroller.tagName !== 'BODY') {\n            scroller.removeEventListener('scroll', this, false);\n        }\n        window.removeEventListener('scroll', this, false);\n        window.removeEventListener('orientationchange', this, false);\n        window.removeEventListener('resize', this, false);\n    }\n\n    // Return ourself for easy chaining\n    return this;\n};\n\n// Refresh the positions of the target IDs\nScrollSpy.prototype.refresh = function () {\n    const scroller = this._getScroller();\n    if (!scroller) {\n        return this;\n    }\n\n    const autoMethod = scroller.tagName === 'BODY' ? OffsetMethod.OFFSET : OffsetMethod.POSITION;\n    const offsetMethod = this._config.method === 'auto' ? autoMethod : this._config.method;\n    const offsetBase = offsetMethod === OffsetMethod.OFFSET ? 0 : this._getScrollTop();\n\n    this._offsets = [];\n    this._targets = [];\n    this._scrollHeight = this._getScrollHeight();\n\n    // Find all nav link/dropdown/list-item links in our element\n    $QSA(this._selector, this._$el).map(el => {\n        const href = el.getAttribute('href');\n        if (href && href.charAt(0) === '#' && href !== '#' && href.indexOf('#/') === -1) {\n            const target = $QS(href, scroller);\n            if (!target) {\n                return null;\n            }\n            const bcr = target.getBoundingClientRect();\n            if (bcr.width || bcr.height) {\n                return {\n                    offset: (offsetMethod === OffsetMethod.OFFSET ? bcr.top : target.offsetTop) + offsetBase,\n                    href\n                };\n            }\n        }\n        return null;\n    }).filter(\n        item => item\n    ).sort(\n        (a, b) => a.offset - b.offset\n    ).forEach(item => {\n        this._offsets.push(item.offset);\n        this._targets.push(item.href);\n    });\n\n    // Return ourself for easy chaining\n    return this;\n};\n\n// Handle the active target selection\nScrollSpy.prototype.process = function () {\n    if (!this._getScroller) {\n        return this;\n    }\n    const scrollTop = this._getScrollTop() + this._config.offset;\n    const scrollHeight = this._getScrollHeight();\n    const maxScroll = this._config.offset + scrollHeight - this._getOffsetHeight();\n\n    if (this._scrollHeight !== scrollHeight) {\n        this.refresh();\n    }\n\n    if (scrollTop >= maxScroll) {\n        const target = this._targets[this._targets.length - 1];\n        if (this._activeTarget !== target) {\n            this._activate(target);\n        }\n        return this;\n    }\n\n    if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {\n        this._activeTarget = null;\n        this._clear();\n        return this;\n    }\n\n    for (let i = this._offsets.length; i--;) {\n        const isActiveTarget =\n            this._activeTarget !== this._targets[i] &&\n            scrollTop >= this._offsets[i] &&\n            (this._offsets[i + 1] === undefined ||\n            scrollTop < this._offsets[i + 1]);\n\n        if (isActiveTarget) {\n            this._activate(this._targets[i]);\n        }\n    }\n\n    // Return ourself for easy chaining\n    return this;\n};\n\n// Fake a resize event to schedule a refresh/process\nScrollSpy.prototype.scheduleRefresh = function () {\n    this.handleEvent({type:'resize'});\n    return this;\n};\n\n// Dispose  of our stuff\nScrollSpy.prototype.dispose = function () {\n    // Ensure we are not listening to events\n    this.unListen();\n\n    // Garbage collection\n    clearTimeout(this._resizeTimeout);\n    this._resizeTimeout = null;\n    this._$el = null;\n    this._config = null;\n    this._selector = null;\n    this._offsets = null;\n    this._targets = null;\n    this._activeTarget = null;\n    this._scrollHeight = null;\n    this._$root = null;\n};\n\n/*\n * ScrollSpy event handler\n */\n\nScrollSpy.prototype.handleEvent = function (e) {\n    const self = this;\n\n    function resizeThrottle() {\n        clearTimeout(self._resizeTimeout);\n        self._resizeTimeout = setTimeout(() => {\n            self.refresh().process();\n        }, self._config.throttle || Default.throttle);\n    }\n\n    if (e.type === 'scroll') {\n        this.process();\n    } else if (e.type === 'orientationchange' || e.type === 'resize') {\n        resizeThrottle();\n    }\n};\n\n/*\n * ScrollSpy private methods\n */\n\n// Get the srolling element\nScrollSpy.prototype._getScroller = function () {\n    if (isServer) {\n        return null;\n    }\n    const scroller = this._config.element;\n    if (!scroller) {\n        return null;\n    }\n    if (scroller && isElement(scroller)) {\n        return scroller;\n    } else if (typeof scroller === 'string') {\n        if (scroller === 'body') {\n            return document.body;\n        }\n        // Otherwise assume CSS selector\n        return $QS(scroller);\n    }\n    return null;\n};\n\n// Return the scroller top position\nScrollSpy.prototype._getScrollTop = function () {\n    const scroller = this._getScroller();\n    if (!scroller) {\n        return 0;\n    }\n    return scroller.tagName === 'BODY' ? window.pageYOffset : scroller.scrollTop;\n};\n\n// Return the scroller height\nScrollSpy.prototype._getScrollHeight = function () {\n    const scroller = this._getScroller();\n    if (!scroller) {\n        return 0;\n    }\n    return scroller.tagName === 'BODY' ?\n        Math.max(document.body.scrollHeight, document.documentElement.scrollHeight) :\n        scroller.scrollHeight;\n};\n\n// Return the scroller offset top position\nScrollSpy.prototype._getOffsetHeight = function () {\n    const scroller = this._getScroller();\n    if (!scroller) {\n        return 0;\n    }\n    return scroller.tagName === 'BODY' ? window.innerHeight : scroller.getBoundingClientRect().height;\n};\n\n// Activate the scrolled in target nav-link\nScrollSpy.prototype._activate = function (target) {\n    this._activeTarget = target;\n    this._clear();\n\n    let queries = this._selector.split(',');\n    queries = queries.map(selector => {\n        return selector + '[href=\"' + target + '\"]';\n    });\n\n    const links = $QSA(queries.join(','), this._$el);\n\n    links.forEach(link => {\n        if (link.classList.contains(ClassName.DROPDOWN_ITEM)) {\n            // This is a dropdown item, so find the .dropdown-toggle and set it's state\n            const dropdown = closest(link, Selector.DROPDOWN);\n            if (dropdown) {\n                const toggle = $QS(Selector.DROPDOWN_TOGGLE, dropdown);\n                if (toggle) {\n                    this._setActiveState(toggle, true);\n                }\n            }\n            // Also set this link's state\n            this._setActiveState(link, true);\n        } else {\n            // Set triggered link as active\n            this._setActiveState(link, true);\n            // Set triggered links parents as active\n            // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\n            // Handle parent .nav's and .list-group's\n            this._setParentsSiblingActiveState(link, Selector.NAV_LIST_GROUP, [ClassName.NAV_LINK, ClassName.LIST_ITEM], true);\n        }\n    });\n\n    // Signal event to root, passing ID of target\n    if (links && links.length > 0 && this._$root && this._$root.$emit) {\n        this._$root.$emit(EVENT, target);\n    }\n};\n\n// Clear the 'active' targets in our nav component\nScrollSpy.prototype._clear = function () {\n    $QSA(this._selector, this._$el).filter(el => {\n        if (el.classList.contains(ClassName.ACTIVE)) {\n            const href = el.getAttribute('href');\n            if (href.charAt(0) !== '#' || href.indexOf('#/') === 0) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }).forEach(el => {\n        this._setActiveState(el, false);\n    });\n};\n\n// Set the active state. if el has a vue insatnce then try setting the active prop,\n// Else fallback to adding the active class\nScrollSpy.prototype._setActiveState = function (el, state) {\n    if (el) {\n        if (el.classList.contains(ClassName.NAV_LINK) && !el.classList.contains(ClassName.DROPDOWN_TOGGLE)) {\n            // Special case where VM with 'active' prop is on parent element\n            el = el.parentElement;\n        }\n        const vm = getVm(el);\n        if (vm && Object.prototype.hasOwnProperty.call(vm.$props, 'active')) {\n            // This is a component that has an `active` prop\n            vm.$props.active = state;\n        } else {\n            // Fallback to setting class attribute since item doesn't have an 'active' prop\n            el.classList[state ? 'add' : 'remove'](ClassName.ACTIVE);\n        }\n    }\n};\n\n// Find all the matching parents given a CSS selector, then find previous sibling that matches the supplied classes\n// And then set the active state on each immediate previous sibling of the parent(s)\nScrollSpy.prototype._setParentsSiblingActiveState = function (element, selector, classes, state) {\n    if (!classes) {\n        return;\n    }\n    if (!isArray(classes)) {\n        classes = [classes];\n    }\n    let el = element;\n    while (el) {\n        el = closest(el, selector);\n        if (el && el.previousElementSibling) {\n            for (let i = 0; i < classes.length - 1; i++) {\n                if (el.previousElementSibling.classList.contains(classes[i])) {\n                    this._setActiveState(el, state);\n                }\n            }\n        }\n    }\n};\n\n/*\n * Export our directive\n */\n\nexport default {\n    bind(el, binding) {\n        if (isServer || el[BVSS]) {\n            return;\n        }\n        el[BVSS] = new ScrollSpy(el, binding);\n    },\n    inserted(el, binding) {\n        if (isServer) {\n            return;\n        }\n        if (!el[BVSS]) {\n            el[BVSS] = new ScrollSpy(el, binding);\n            el[BVSS].listen();\n        } else {\n            el[BVSS].updateConfig(binding).listen();\n        }\n        el[BVSS].refresh().process().scheduleRefresh();\n    },\n    update(el, binding) {\n        if (isServer) {\n            return;\n        }\n        if (!el[BVSS]) {\n            el[BVSS] = new ScrollSpy(el, binding);\n            el[BVSS].listen();\n        } else {\n            el[BVSS].updateConfig(binding);\n        }\n        el[BVSS].refresh().process().scheduleRefresh();\n    },\n    componentUpdated(el, binding) {\n        if (isServer) {\n            return;\n        }\n        if (!el[BVSS]) {\n            el[BVSS] = new ScrollSpy(el, binding);\n            el[BVSS].listen();\n        } else {\n            el[BVSS].updateConfig(binding);\n        }\n        el[BVSS].refresh().process().scheduleRefresh();\n    },\n    unbind(el) {\n        if (isServer || !el[BVSS]) {\n            return;\n        }\n        // Remove scroll event listener on scrollElId\n        el[BVSS].unListen().dispose();\n        el[BVSS] = null;\n    }\n};\n","// Production steps of ECMA-262, Edition 6, 22.1.2.1\n// es6-ified by @alexsasharegan\nif (!Array.from) {\n    Array.from = (function() {\n        const toStr = Object.prototype.toString\n        const isCallable = fn => typeof fn === \"function\" || toStr.call(fn) === \"[object Function]\"\n        const toInteger = value => {\n            const number = Number(value)\n            if (isNaN(number)) {\n                return 0\n            }\n            if (number === 0 || !isFinite(number)) {\n                return number\n            }\n            return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number))\n        }\n        const maxSafeInteger = Math.pow(2, 53) - 1\n        const toLength = value => Math.min(Math.max(toInteger(value), 0), maxSafeInteger)\n\n        // The length property of the from method is 1.\n        return function from(arrayLike /*, mapFn, thisArg */) {\n            // 1. Let C be the this value.\n            const C = this\n\n            // 2. Let items be ToObject(arrayLike).\n            const items = Object(arrayLike)\n\n            // 3. ReturnIfAbrupt(items).\n            if (arrayLike == null) {\n                throw new TypeError(\"Array.from requires an array-like object - not null or undefined\")\n            }\n\n            // 4. If mapfn is undefined, then let mapping be false.\n            const mapFn = arguments.length > 1 ? arguments[1] : void undefined\n            let T\n\n            if (typeof mapFn !== \"undefined\") {\n                // 5. else\n                // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n                if (!isCallable(mapFn)) {\n                    throw new TypeError(\"Array.from: when provided, the second argument must be a function\")\n                }\n\n                // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\n                if (arguments.length > 2) {\n                    T = arguments[2]\n                }\n            }\n\n            // 10. Let lenValue be Get(items, \"length\").\n            // 11. Let len be ToLength(lenValue).\n            const len = toLength(items.length)\n\n            // 13. If IsConstructor(C) is true, then\n            // 13. a. Let A be the result of calling the [[Construct]] internal method\n            // of C with an argument list containing the single item len.\n            // 14. a. Else, Let A be ArrayCreate(len).\n            let A = isCallable(C) ? Object(new C(len)) : new Array(len)\n\n            // 16. Let k be 0.\n            let k = 0\n            // 17. Repeat, while k < len… (also steps a - h)\n            let kValue\n            while (k < len) {\n                kValue = items[k]\n                if (mapFn) {\n                    A[k] = typeof T === \"undefined\" ? mapFn(kValue, k) : mapFn.call(T, kValue, k)\n                } else {\n                    A[k] = kValue\n                }\n                k += 1\n            }\n            // 18. Let putStatus be Put(A, \"length\", len, true).\n            A.length = len\n            // 20. Return A.\n            return A\n        }\n    })()\n}\n\nif (!Array.isArray) {\n    Array.isArray = arg => Object.prototype.toString.call(arg) === \"[object Array]\"\n}\n\n// Static\nexport const from = Array.from\nexport const isArray = Array.isArray\n\n// Instance\nexport const arrayIncludes = (array, value) => array.indexOf(value) !== -1\n","/**\n * Aliasing Object[method] allows the minifier to shorten methods to a single character variable,\n * as well as giving BV a chance to inject polyfills.\n * As long as we avoid\n * - import * as Object from \"utils/object\"\n * all unused exports should be removed by tree-shaking.\n */\n\n// @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nif (typeof Object.assign != \"function\") {\n    Object.assign = function(target, varArgs) {\n        // .length of function is 2\n        \"use strict\"\n        if (target == null) {\n            // TypeError if undefined or null\n            throw new TypeError(\"Cannot convert undefined or null to object\")\n        }\n\n        let to = Object(target)\n\n        for (let index = 1; index < arguments.length; index++) {\n            const nextSource = arguments[index]\n\n            if (nextSource != null) {\n                // Skip over if undefined or null\n                for (const nextKey in nextSource) {\n                    // Avoid bugs when hasOwnProperty is shadowed\n                    if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                        to[nextKey] = nextSource[nextKey]\n                    }\n                }\n            }\n        }\n        return to\n    }\n}\n\nexport const assign = Object.assign\nexport const getOwnPropertyNames = Object.getOwnPropertyNames\nexport const keys = Object.keys\nexport const defineProperties = Object.defineProperties\nexport const defineProperty = Object.defineProperty\nexport const freeze = Object.freeze\nexport const getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor\nexport const getOwnPropertySymbols = Object.getOwnPropertySymbols\nexport const getPrototypeOf = Object.getPrototypeOf\nexport const create = Object.create\nexport const isFrozen = Object.isFrozen\nexport const is = Object.is\n","<template>\n    <div v-if=\"localShow\"\n         :class=\"classObject\"\n         role=\"alert\"\n         aria-live=\"polite\"\n         aria-atomic=\"true\"\n    >\n        <button type=\"button\"\n                class=\"close\"\n                data-dismiss=\"alert\"\n                aria-label=\"dismissLabel\"\n                v-if=\"dismissible\"\n                @click.stop.prevent=\"dismiss\"\n        >\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    import {warn} from '../utils';\n\n    export default {\n        data() {\n            return {\n                countDownTimerId: null,\n                dismissed: false\n            };\n        },\n        created() {\n            if (this.state) {\n                warn('<b-alert> \"state\" property is deprecated, please use \"variant\" property instead.');\n            }\n        },\n        computed: {\n            classObject() {\n                return ['alert', this.alertVariant, this.dismissible ? 'alert-dismissible' : ''];\n            },\n            alertVariant() {\n                const variant = this.state || this.variant || 'info';\n                return `alert-${variant}`;\n            },\n            localShow() {\n                return !this.dismissed && (this.countDownTimerId || this.show);\n            }\n        },\n        props: {\n            variant: {\n                type: String,\n                default: 'info'\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            dismissible: {\n                type: Boolean,\n                default: false\n            },\n            dismissLabel: {\n                type: String,\n                default: 'Close'\n            },\n            show: {\n                type: [Boolean, Number],\n                default: false\n            }\n        },\n        watch: {\n            show() {\n                this.showChanged();\n            }\n        },\n        mounted() {\n            this.showChanged();\n        },\n        methods: {\n            dismiss() {\n                this.dismissed = true;\n                this.$emit('dismissed');\n                this.clearCounter();\n            },\n            clearCounter() {\n                if (this.countDownTimerId) {\n                    clearInterval(this.countDownTimerId);\n                }\n            },\n            showChanged() {\n                // Reset dismiss status\n                this.dismissed = false;\n\n                // No timer for boolean values\n                if (this.show === true || this.show === false || this.show === null || this.show === 0) {\n                    return;\n                }\n\n                let dismissCountDown = this.show;\n                this.$emit('dismiss-count-down', dismissCountDown);\n\n                // Start counter\n                this.clearCounter();\n                this.countDownTimerId = setInterval(() => {\n                    if (dismissCountDown < 2) {\n                        return this.dismiss();\n                    }\n                    dismissCountDown--;\n                    this.$emit('dismiss-count-down', dismissCountDown);\n                }, 1000);\n            }\n        }\n    };\n</script>\n","export default {\n    mounted() {\n        if (typeof document !== 'undefined') {\n            document.documentElement.addEventListener('click', this._clickOutListener);\n        }\n    },\n    destroyed() {\n        if (typeof document !== 'undefined') {\n            document.removeEventListener('click', this._clickOutListener);\n        }\n    },\n    methods: {\n        _clickOutListener(e) {\n            if (!this.$el.contains(e.target)) {\n                if (this.clickOutListener) {\n                    this.clickOutListener();\n                }\n            }\n        }\n    }\n};\n","import { isArray } from \"../utils/array\"\n/**\n * Issue #569: collapse::toggle::state triggered too many times\n * @link https://github.com/bootstrap-vue/bootstrap-vue/issues/569\n */\n\nconst BVRL = '__BV_root_listeners__';\n\nexport default {\n    methods: {\n        /**\n         * Safely register event listeners on the root Vue node.\n         * While Vue automatically removes listeners for individual components,\n         * when a component registers a listener on root and is destroyed,\n         * this orphans a callback because the node is gone,\n         * but the root does not clear the callback.\n         *\n         * This adds a non-reactive prop to a vm on the fly\n         * in order to avoid object observation and its performance costs\n         * to something that needs no reactivity.\n         * It should be highly unlikely there are any naming collisions.\n         * @param {string} event\n         * @param {function} callback\n         * @chainable\n         */\n        listenOnRoot(event, callback) {\n            if (!this[BVRL] || !isArray(this[BVRL])) {\n                this[BVRL] = [];\n            }\n            this[BVRL].push({ event, callback });\n            this.$root.$on(event, callback);\n            return this;\n        },\n\n        /**\n         * Convenience method for calling vm.$emit on vm.$root.\n         * @param {string} event\n         * @param {*} args\n         * @chainable\n         */\n        emitOnRoot(event, ...args) {\n            this.$root.$emit(event, ...args);\n            return this;\n        }\n    },\n\n    destroyed() {\n        if (this[BVRL] && isArray(this[BVRL])) {\n            while (this[BVRL].length > 0) {\n                // shift to process in order\n                const { event, callback } = this[BVRL].shift();\n                this.$root.$off(event, callback);\n            }\n        }\n    }\n}\n","export default {\n    props: {\n        name: {\n            type: String\n        },\n        id: {\n            type: String\n        },\n        disabled: {\n            type: Boolean\n        },\n        required: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n\n","export default {\n    computed: {\n        checkboxClass() {\n            return {\n                'custom-control': this.custom,\n                'form-check-inline': this.inline\n            };\n        }\n    }\n};\n\n","export default {\n    computed: {\n        custom() {\n            return !this.plain;\n        }\n    },\n    props: {\n        plain: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n","import { isArray } from '../utils/array';\nimport { keys } from '../utils/object';\n\nexport default {\n    computed: {\n        formOptions() {\n            let options = this.options || {};\n\n            if (isArray(options)) {\n                // Normalize flat arrays to object Array\n                options = options.map(option => {\n                    if (typeof option === 'object') {\n                        return {\n                            value: option[this.valueField],\n                            text: option[this.textField],\n                            disabled: option.disabled || false\n                        };\n                    }\n\n                    return {text: String(option), value: option || {}};\n                });\n            } else {\n                // Normalize Objects keys to Array\n                options = keys(options).map(value => {\n                    let option = options[value] || {};\n\n                    // Resolve text\n                    if (typeof option !== 'object') {\n                        option = {text: String(option)};\n                    }\n\n                    // Resolve value (uses key as value if not provided)\n                    option.value = option[this.valueField] || value;\n\n                    // Resolve text field (uses key as value if not provided)\n                    option.text = option[this.textField] || value;\n\n                    return option;\n                });\n            }\n\n            return options;\n        },\n        selectedValue() {\n            const formOptions = this.formOptions;\n            for (let i = 0; i < formOptions.length; i++) {\n                if (formOptions[i].value === this.localValue) {\n                    if (this.returnObject) {\n                        return formOptions[i];\n                    }\n                    return formOptions[i].value;\n                }\n            }\n        }\n    },\n    props: {\n        valueField: {\n            type: [String],\n            default: 'value'\n        },\n        textField: {\n            type: [String],\n            default: 'text'\n        }\n    },\n    watch: {\n        localValue(value, old_value) {\n            if (value === old_value) {\n                return;\n            }\n            this.$emit('input', this.selectedValue);\n        },\n        value(value, old_value) {\n            if (value === old_value) {\n                return;\n            }\n            this.localValue = value;\n        }\n    }\n};\n","import Tether from 'tether';\nimport listenOnRootMixin from './listen-on-root'\nimport { isArray, arrayIncludes } from '../utils/array';\nimport { keys } from '../utils/object';\n\n// Controls which events are mapped for each named trigger, and the expected popover behavior for each.\nconst TRIGGER_LISTENERS = {\n    click: {click: 'toggle'},\n    hover: {mouseenter: 'show', mouseleave: 'hide'},\n    focus: {focus: 'show', blur: 'hide'}\n};\nconst PLACEMENT_PARAMS = {\n    top: 'bottom center',\n    bottom: 'top center',\n    left: 'middle right',\n    right: 'middle left'\n};\nconst TETHER_CLASS_PREFIX = 'bs-tether';\nconst TETHER_CLASSES = {\n    element: false,\n    enabled: false\n};\nconst TRANSITION_DURATION = 150;\n\nexport default {\n    mixins: [listenOnRootMixin],\n    props: {\n        constraints: {\n            type: Array,\n            default() {\n                return [];\n            }\n        },\n        debounce: {\n            type: [Number],\n            default: 300,\n            validator(value) {\n                return value >= 0;\n            }\n        },\n        delay: {\n            type: [Number, Object],\n            default: 0,\n            validator(value) {\n                if (typeof value === 'number') {\n                    return value >= 0;\n                } else if (value !== null && typeof value === 'object') {\n                    return typeof value.show === 'number' &&\n                        typeof value.hide === 'number' &&\n                        value.show >= 0 &&\n                        value.hide >= 0;\n                }\n                return false;\n            }\n        },\n        offset: {\n            type: String,\n            default: '0 0',\n            validator(value) {\n                // Regex test for a pair of units, either 0 exactly, px, or percentage\n                return /^((0\\s?)|([+-]?[0-9]+(px|%)\\s?)){2}$/.test(value);\n            }\n        },\n        placement: {\n            type: String,\n            default: 'top',\n            validator: value => arrayIncludes(keys(PLACEMENT_PARAMS), value)\n        },\n        popoverStyle: {\n            type: Object,\n            default: null\n        },\n        show: {\n            type: Boolean,\n            default: null\n        },\n        targetOffset: {\n            type: String,\n            default: '0 0',\n            // Regex test for a pair of units, either 0 exactly, px, or percentage\n            validator: value => /^((0\\s?)|([+-]?[0-9]+(px|%)\\s?)){2}$/.test(value)\n        },\n        triggers: {\n            type: [Boolean, String, Array],\n            default: () => ['click', 'focus'],\n            validator(value) {\n                // Allow falsy value to disable all event triggers (equivalent to 'manual') in Bootstrap 4\n                if (value === false || value === '') {\n                    return true;\n                } else if (typeof value === 'string') {\n                    return keys(TRIGGER_LISTENERS).indexOf(value) !== -1;\n                } else if (isArray(value)) {\n                    const triggerKeys = keys(TRIGGER_LISTENERS);\n                    value.forEach(item => {\n                        if (arrayIncludes(triggerKeys, item)) {\n                            return false;\n                        }\n                    });\n                    return true;\n                }\n                return false;\n            }\n        }\n    },\n    data() {\n        return {\n            triggerState: this.show,\n            classState: this.show,\n            lastEvent: null\n        };\n    },\n    computed: {\n        /**\n         * Arrange event trigger hooks as array for all input types.\n         *\n         * @return Array\n         */\n        normalizedTriggers() {\n            if (this.triggers === false) {\n                return [];\n            } else if (typeof this.triggers === 'string') {\n                return [this.triggers];\n            }\n            return this.triggers;\n        },\n        /**\n         * Class property to be used for Popover rendering\n         *\n         * @return String\n         */\n        popoverAlignment() {\n            return !this.placement || this.placement === `default` ? `popover-top` : `popover-${this.placement}`;\n        },\n        /**\n         * Determine if the Popover should be shown.\n         *\n         * @return Boolean\n         */\n        showState() {\n            return this.show !== false && (this.triggerState || this.show);\n        }\n    },\n    watch: {\n        /**\n         * Refresh Tether display properties\n         */\n        constraints() {\n            this.setOptions();\n        },\n        /**\n         * Refresh Popover event triggers\n         * @param {Array} newTriggers\n         * @param {Array} oldTriggers\n         */\n        normalizedTriggers(newTriggers, oldTriggers) {\n            this.updateListeners(newTriggers, oldTriggers);\n        },\n        /**\n         * Refresh Tether display properties\n         */\n        offset() {\n            this.setOptions();\n        },\n        /**\n         * Refresh Tether display properties\n         */\n        placement() {\n            this.setOptions();\n        },\n        /**\n         * Affect 'show' state in response to status change\n         * @param  {Boolean} val\n         */\n        showState(val) {\n            const delay = this.getDelay(val);\n            clearTimeout(this.$data._timeout);\n            if (delay) {\n                this.$data._timeout = setTimeout(() => this.togglePopover(val), delay);\n            } else {\n                this.togglePopover(val);\n            }\n        }\n    },\n    methods: {\n        /**\n         * Add all event hooks for the given trigger\n         * @param {String} trigger\n         */\n        addListener(trigger) {\n            // eslint-disable-next-line guard-for-in\n            for (const item in TRIGGER_LISTENERS[trigger]) {\n                this.$data._trigger.addEventListener(item, e => this.eventHandler(e));\n            }\n        },\n        /**\n         * Tidy removal of Tether object from the DOM\n         */\n        destroyTether() {\n            if (this.$data._tether && !this.showState) {\n                this.$data._tether.destroy();\n                this.$data._tether = null;\n                const regx = new RegExp('(^|[^-]\\\\b)(' + TETHER_CLASS_PREFIX + '\\\\S*)', 'g');\n                this.$data._trigger.className = this.$data._trigger.className.replace(regx, '');\n            }\n        },\n        /**\n         * Handle multiple event triggers\n         * @param  {Object} e\n         */\n        eventHandler(e) {\n            // If this event is right after a previous successful event, ignore it (debounce)\n            if (this.normalizedTriggers.length > 1 && this.debounce > 0 && this.lastEvent !== null && e.timeStamp <= this.lastEvent + this.debounce) {\n                return;\n            }\n            // Look up the expected popover action for the event\n            // eslint-disable-next-line guard-for-in\n            for (const trigger in TRIGGER_LISTENERS) {\n                for (const event in TRIGGER_LISTENERS[trigger]) {\n                    if (event === e.type) {\n                        const action = TRIGGER_LISTENERS[trigger][event];\n                        // If the expected event action is the opposite of the current state, allow it\n                        if (action === 'toggle' || (this.triggerState && action === 'hide') || (!this.triggerState && action === 'show')) {\n                            this.triggerState = !this.triggerState;\n                            this.lastEvent = e.timeStamp;\n                        }\n                        return;\n                    }\n                }\n            }\n        },\n        /**\n         * Get the currently applicable popover delay\n         *\n         * @returns Number\n         */\n        getDelay(state) {\n            if (typeof this.delay === 'object') {\n                return state ? this.delay.show : this.delay.hide;\n            }\n            return this.delay;\n        },\n        /**\n         * Tether construct params for each show event.\n         *\n         * @return Object\n         */\n        getTetherOptions() {\n            return {\n                attachment: PLACEMENT_PARAMS[this.placement],\n                element: this.$data._popover,\n                target: this.$data._trigger,\n                classes: TETHER_CLASSES,\n                classPrefix: TETHER_CLASS_PREFIX,\n                offset: this.offset,\n                constraints: this.constraints,\n                targetOffset: this.targetOffset\n            };\n        },\n        /**\n         * Hide popover and fire event\n         */\n        hidePopover() {\n            this.classState = false;\n            clearTimeout(this.$data._timeout);\n            this.$data._timeout = setTimeout(() => {\n                this.$data._popover.style.display = 'none';\n                this.destroyTether();\n            }, TRANSITION_DURATION);\n        },\n        /**\n         * Refresh the Popover position in order to respond to changes\n         */\n        refreshPosition() {\n            if (this.$data._tether) {\n                this.$nextTick(() => {\n                    this.$data._tether.position();\n                });\n            }\n        },\n        /**\n         * Remove all event hooks for the given trigger\n         * @param {String} trigger\n         */\n        removeListener(trigger) {\n            // eslint-disable-next-line guard-for-in\n            for (const item in TRIGGER_LISTENERS[trigger]) {\n                this.$data._trigger.removeEventListener(item, e => this.eventHandler(e));\n            }\n        },\n        /**\n         * Update tether options\n         */\n        setOptions() {\n            if (this.$data._tether) {\n                this.$data._tether.setOptions(this.getTetherOptions());\n            }\n        },\n        /**\n         * Display popover and fire event\n         */\n        showPopover() {\n            clearTimeout(this.$data._timeout);\n            if (!this.$data._tether) {\n                this.$data._tether = new Tether(this.getTetherOptions());\n            }\n            this.$data._popover.style.display = 'block';\n            // Make sure the popup is rendered in the correct location\n            this.refreshPosition();\n            this.$nextTick(() => {\n                this.classState = true;\n            });\n        },\n        /**\n         * Handle Popover show or hide instruction\n         */\n        togglePopover(newShowState) {\n            this.$emit('showChange', newShowState);\n            if (newShowState) {\n                this.showPopover();\n                this.emitOnRoot('shown::popover');\n            } else {\n                this.hidePopover();\n                this.emitOnRoot('hidden::popover');\n            }\n        },\n        /**\n         * Study the 'triggers' component property and apply all selected triggers\n         * @param {Array} triggers\n         * @param {Array} appliedTriggers\n         */\n        updateListeners(triggers, appliedTriggers = []) {\n            const newTriggers = [];\n            const removeTriggers = [];\n            // Look for new events not yet mapped (all of them on first load)\n            triggers.forEach(item => {\n                if (appliedTriggers.indexOf(item) === -1) {\n                    newTriggers.push(item);\n                }\n            });\n            // Disable any removed event triggers\n            appliedTriggers.forEach(item => {\n                if (triggers.indexOf(item) === -1) {\n                    removeTriggers.push(item);\n                }\n            });\n            // Apply trigger mapping changes\n            newTriggers.forEach(item => this.addListener(item));\n            removeTriggers.forEach(item => this.removeListener(item));\n        }\n    },\n    created() {\n        this.listenOnRoot('hide::popover', () => {\n            this.triggerState = false;\n        });\n    },\n    mounted() {\n        // Configure tether\n        this.$data._trigger = this.$refs.trigger.children[0] || this.$refs.trigger;\n        this.$data._popover = this.$refs.popover;\n        this.$data._popover.style.display = 'none';\n        this.$data._tether = new Tether(this.getTetherOptions());\n        this.$data._timeout = 0;\n        // Add listeners for specified triggers and complementary click event\n        this.updateListeners(this.normalizedTriggers);\n        // Display popover if prop is set on load\n        if (this.showState) {\n            this.showPopover();\n        }\n    },\n    updated() {\n        this.refreshPosition();\n    },\n    beforeDestroy() {\n        this.normalizedTriggers.forEach(item => this.removeListener(item));\n        clearTimeout(this.$data._timeout);\n        this.destroyTether();\n    },\n    destroyed() {\n        // Tether is moving the popover element outside of Vue's control and leaking dom nodes\n        if (this.$data._popover.parentElement === document.body) {\n            document.body.removeChild(this.$data._popover);\n        }\n    }\n};\n","<template>\n    <!-- When VueRouter is available -->\n    <a v-if=\"isRouterLink\"\n       is=\"router-link\"\n       :active-class=\"activeClass\"\n       :exact-active-class=\"exactActiveClass\"\n       :disabled=\"disabled\"\n       :aria-disabled=\"disabled ? 'true' : 'false'\"\n       :to=\"to\"\n       :exact=\"exact\"\n       :append=\"append\"\n       :replace=\"replace\"\n       :event=\"event\"\n       :tag=\"componentTag\"\n       :class=\"linkClassObject\"\n       @click.native=\"linkClick\">\n        <slot></slot>\n    </a>\n\n    <!-- Fallback mode -->\n    <a v-else\n       :disabled=\"disabled\"\n       :aria-disabled=\"disabled ? 'true' : 'false'\"\n       :href=\"_href\"\n       :target=\"target || null\"\n       :rel=\"computedRel\"\n       :class=\"linkClassObject\"\n       @click=\"linkClick\">\n        <slot></slot>\n    </a>\n</template>\n\n<script>\nimport { linkMixin } from '../mixins';\n\nexport default {\n    mixins: [linkMixin]\n};\n</script>\n","<template>\n    <ol class=\"breadcrumb\">\n        <li v-for=\"normalizedItem in normalizedItems\"\n            :class=\"['breadcrumb-item', normalizedItem.active ? 'active' : null]\"\n            @click=\"onClick(normalizedItem._originalItem)\"\n            role=\"presentation\">\n            <span v-if=\"normalizedItem.active\"\n                  :aria-current=\"ariaCurrent\"\n                  v-html=\"normalizedItem.text\"></span>\n            <b-link v-else\n                    v-bind=\"normalizedItem._linkProps\"\n                    v-html=\"normalizedItem.text\"></b-link>\n        </li>\n        <slot></slot>\n    </ol>\n</template>\n\n<script>\nimport bLink from './link.vue';\nimport { props as linkProps } from '../mixins/link';\nimport { arrayIncludes } from '../utils/array';\nimport { assign, keys } from '../utils/object';\n\nconst bLinkPropKeys = keys(linkProps);\n\nexport default {\n    components: { bLink },\n    computed: {\n        normalizedItems() {\n            let userDefinedActive = false;\n            const originalItemsLength = this.items.length;\n\n            return this.items.map((item, index) => {\n                let normalizedItem = { _originalItem: item };\n                // if no active state is defined,\n                // default to the last item in the array as active\n                const isLast = index === originalItemsLength - 1;\n\n                // nothing defined except the text\n                if (typeof item === 'string') {\n                    assign(normalizedItem, { text: item, link: '#', active: isLast });\n                } else {\n                    assign(normalizedItem, item);\n                }\n\n                // don't default the active state if given a boolean value,\n                // or if a user defined value has already been given\n                if (normalizedItem.active !== true && normalizedItem.active !== false && !userDefinedActive) {\n                    normalizedItem.active = isLast;\n                } else if (normalizedItem.active) {\n                    // here we know we've been given an active value,\n                    // so we won't set a default value\n                    userDefinedActive = true;\n                }\n\n                if (normalizedItem.link) {\n                    // default the link value to bLink's href prop\n                    normalizedItem.href = normalizedItem.link;\n                }\n\n                // stuff all the bLink props into a single place\n                // so we can bind to the component\n                // for dynamic prop proxying\n                normalizedItem._linkProps = keys(normalizedItem).reduce((memo, itemProp) => {\n                    if (arrayIncludes(bLinkPropKeys, itemProp)) {\n                        memo[itemProp] = normalizedItem[itemProp];\n                    }\n\n                    return memo;\n                }, {});\n\n                return normalizedItem;\n            });\n        }\n    },\n    props: {\n        items: {\n            type: Array,\n            default: () => [],\n            required: true\n        },\n        ariaCurrent: {\n            type: String,\n            default: 'location'\n        }\n    },\n    methods: {\n        onClick(item) {\n            this.$emit('click', item);\n        }\n    }\n};\n</script>\n","<template>\n    <button v-bind=\"conditionalLinkProps\"\n            :is=\"componentType\"\n            :class=\"classList\"\n            :type=\"btnType\"\n            :disabled=\"disabled\"\n            @click=\"onClick\">\n        <slot></slot>\n    </button>\n</template>\n\n<script>\nimport bLink from './link.vue';\nimport { omitLinkProps, props as originalLinkProps, computed } from '../mixins/link';\nimport { assign } from '../utils/object';\n\n// Grab a fresh object of link props (omitLinkProps does this)\n// less the 'href' and 'to' props\n// that we will reconstruct without any defaults\n// so our computed 'componentType' functions properly\nconst linkProps = assign(omitLinkProps('href', 'to'), {\n    href: { type: originalLinkProps.href.type },\n    to: { type: originalLinkProps.to.type }\n});\n\nexport default {\n    components: { bLink },\n    computed: {\n        linkProps: computed.linkProps,\n        classList() {\n            return [\n                'btn',\n                this.btnVariant,\n                this.btnSize,\n                this.btnBlock,\n                this.btnDisabled\n            ];\n        },\n        componentType() {\n            return (this.href || this.to) ? 'b-link' : 'button';\n        },\n        btnBlock() {\n            return this.block ? `btn-block` : '';\n        },\n        btnVariant() {\n            return this.variant ? `btn-${this.variant}` : `btn-secondary`;\n        },\n        btnSize() {\n            return this.size ? `btn-${this.size}` : '';\n        },\n        btnDisabled() {\n            return this.disabled ? 'disabled' : '';\n        },\n        btnType() {\n            return (this.href || this.to) ? null : this.type;\n        },\n        conditionalLinkProps() {\n            return this.componentType === 'button' ? {} : this.linkProps;\n        }\n    },\n    // merge our prepared link props with button props\n    props: assign(linkProps, {\n        block: {\n            type: Boolean,\n            default: false\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        size: {\n            type: String,\n            default: null\n        },\n        variant: {\n            type: String,\n            default: null\n        },\n        type: {\n            type: String,\n            default: 'button'\n        }\n    }),\n    methods: {\n        onClick(e) {\n            if (this.disabled) {\n                e.stopPropagation();\n                e.preventDefault();\n            } else {\n                this.$emit('click', e);\n            }\n        }\n    }\n};\n</script>\n","<template>\n    <div :class=\"classObject\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'btn-group',\n                    this.vertical ? 'btn-group-vertical' : '',\n                    this.size ? ('btn-group-' + this.size) : ''\n                ];\n            }\n        },\n        props: {\n            vertical: {\n                type: Boolean,\n                default: false\n            },\n            size: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n    <div :class=\"classObject\" role=\"group\">\n        <slot name=\"left\">\n            <div v-if=\"left\" class=\"input-group-addon\" v-html=\"left\"></div>\n        </slot>\n\n        <slot></slot>\n\n        <slot name=\"right\">\n            <div v-if=\"right\" class=\"input-group-addon\" v-html=\"right\"></div>\n        </slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'input-group',\n                    this.size ? ('input-group-' + this.size) : '',\n                    this.state ? ('has-' + this.state) : ''\n                ];\n            }\n        },\n        props: {\n            size: {\n                type: String,\n                default: null\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            left: {\n                type: String,\n                default: null\n            },\n            right: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"input-group-addon\" :id=\"id || null\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {\n            id: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"input-group-btn\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {}\n    };\n</script>\n","<template>\n    <component :is=\"tag\" :class=\"['card',cardVariant,cardAlign,cardInverse]\">\n        <!-- Card Image Slot-->\n        <slot name=\"img\" ref=\"img\">\n            <img v-if=\"img\" :src=\"img\" :alt=\"imgAlt\" class=\"card-img\">\n        </slot>\n\n        <!-- Card Header-->\n        <component v-if=\"header || $slots['header']\"\n                   :is=\"headerTag\"\n                   :class=\"['card-header', headerVariant?('bg-'+headerVariant):'', headerClass]\"\n        >\n            <slot name=\"header\">\n                <div v-html=\"header\"></div>\n            </slot>\n        </component>\n\n        <!--Show custom block when no-block prop is set-->\n        <template v-if=\"noBlock\">\n            <slot></slot>\n        </template>\n\n        <!-- Card Standard Blocks-->\n        <div :class=\"blockClass\" v-else>\n            <h4 v-if=\"title\" :is=\"titleTag\" class=\"card-title\" v-html=\"title\"></h4>\n            <h6 v-if=\"subTitle\" :is=\"subTitleTag\" class=\"card-subtitle mb-2 text-muted\" v-html=\"subTitle\"></h6>\n            <slot></slot>\n        </div>\n\n        <!-- Card Footer-->\n        <component v-if=\"footer || $slots['footer']\"\n                   :is=\"footerTag\"\n                   :class=\"['card-footer', footerVariant?('bg-'+footerVariant):'', footerClass]\"\n        >\n            <slot name=\"footer\">\n                <div v-html=\"footer\"></div>\n            </slot>\n        </component>\n    </component>\n</template>\n\n<script>\n    export default {\n        computed: {\n            blockClass() {\n                return [\n                    'card-block',\n                    this.overlay ? 'card-img-overlay' : null\n                ];\n            },\n            cardVariant() {\n                return this.variant ? `card-${this.variant}` : null;\n            },\n            cardInverse() {\n                if (this.overlay || this.inverse) {\n                    return 'card-inverse';\n                }\n                // Auto inverse colored cards\n                if (this.inverse === null && this.variant && this.variant.length > 0 &&\n                    this.variant.indexOf('outline') === -1) {\n                    return 'card-inverse';\n                }\n            },\n            cardAlign() {\n                return this.align ? `text-${this.align}` : null;\n            }\n        },\n        props: {\n            align: {\n                type: String,\n                default: null\n            },\n            inverse: {\n                type: Boolean,\n                // It should remain null for auto inverse\n                default: null\n            },\n            variant: {\n                type: String,\n                default: null\n            },\n            tag: {\n                type: String,\n                default: 'div'\n            },\n\n            // Header\n            header: {\n                type: String,\n                default: null\n            },\n            headerVariant: {\n                type: String,\n                default: null\n            },\n            headerClass: {\n                type: [String, Array],\n                default: ''\n            },\n            headerTag: {\n                type: String,\n                default: 'div'\n            },\n\n            // Footer\n            footer: {\n                type: String,\n                default: null\n            },\n            footerVariant: {\n                type: String,\n                default: null\n            },\n            footerClass: {\n                type: [String, Array],\n                default: ''\n            },\n            footerTag: {\n                type: String,\n                default: 'div'\n            },\n\n            // Main block\n            title: {\n                type: String,\n                default: null\n            },\n            titleTag: {\n                type: String,\n                default: 'h4'\n            },\n            subTitle: {\n                type: String,\n                default: null\n            },\n            subTitleTag: {\n                type: String,\n                default: 'h6'\n            },\n            noBlock: {\n                type: Boolean,\n                default: false\n            },\n\n            // Image\n            img: {\n                type: String,\n                default: null\n            },\n            imgAlt: {\n                type: String,\n                default: null\n            },\n            overlay: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"tag\" :class=\"['card-' + type]\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    export default {\n        computed: {\n            type() {\n                if (this.deck) {\n                    return 'deck';\n                }\n\n                if (this.columns) {\n                    return 'columns';\n                }\n\n                return 'group';\n            }\n        },\n        props: {\n            tag: {\n                type: String,\n                default: 'div'\n            },\n            deck: {\n                type: Boolean,\n                default: false\n            },\n            columns: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"carousel slide\"\n         role=\"region\"\n         :id=\"id || null\"\n         :style=\"{background,height}\"\n         :aria-busy=\"isSliding ? 'true' : 'false'\"\n         @mouseenter=\"pause\"\n         @mouseleave=\"start\"\n         @focusin=\"pause\"\n         @focusout=\"restart($event)\"\n         @keydown.left.stop.prevent=\"prev\"\n         @keydown.right.stop.prevent=\"next\"\n    >\n\n        <!-- Wrapper for slides -->\n        <div class=\"carousel-inner\"\n             role=\"list\"\n             :id=\"id ? (id + '__BV_inner_') : null\"\n        >\n            <slot></slot>\n        </div>\n\n        <!-- Controls -->\n        <template v-if=\"controls\">\n            <a class=\"carousel-control-prev\"\n               href=\"#\"\n               role=\"button\"\n               :aria-controls=\"id ? (id + '__BV_inner_') : null\"\n               @click.stop.prevent=\"prev\"\n               @keydown.enter.stop.prevent=\"prev\"\n               @keydown.space.stop.prevent=\"prev\"\n            >\n                <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                <span class=\"sr-only\">{{labelPrev}}</span>\n            </a>\n            <a class=\"carousel-control-next\"\n               href=\"#\"\n               role=\"button\"\n               :aria-controls=\"id ? (id + '__BV_inner_') : null\"\n               @click.stop.prevent=\"next\"\n               @keydown.enter.stop.prevent=\"next\"\n               @keydown.space.stop.prevent=\"next\"\n            >\n                <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                <span class=\"sr-only\">{{labelNext}}</span>\n            </a>\n        </template>\n\n        <!-- Indicators -->\n        <ol class=\"carousel-indicators\"\n            role=\"group\"\n            v-show=\"indicators\"\n            :id=\"id ? (id + '__BV_indicators_') : null\"\n            :aria-hidden=\"indicators ? 'false' : 'true'\"\n            :aria-label=\"(indicators && labelIndicators) ? labelIndicators : null\"\n            :aria-owns=\"(indicators && id) ? (id + '__BV_inner_') : null\"\n        >\n            <li v-for=\"n in slides.length\"\n                role=\"button\"\n                :id=\"id ? (id + '__BV_indicator_' + n + '_') : null\"\n                :tabindex=\"indicators ? '0' : '-1'\"\n                :class=\"{active:n-1 === index}\"\n                :aria-current=\"n-1 === index ? 'true' : 'false'\"\n                :aria-posinset=\"n\"\n                :aria-setsize=\"slides.length\"\n                :aria-label=\"labelGotoSlide + ' ' + n\"\n                :aria-describedby=\"slides[n-1].id || null\"\n                :aria-controls=\"id ? (id + '__BV_inner_') : null\"\n                @click=\"index=n-1\"\n                @keydown.enter.stop.prevent=\"index=n-1\"\n                @keydown.space.stop.prevent=\"index=n-1\"\n            ></li>\n        </ol>\n\n    </div>\n</template>\n\n<script>\n    import { from as arrayFrom } from '../utils/array'\n\n    const DIRECTION = {\n        next: {\n            current: 'carousel-item-left',\n            next: 'carousel-item-right',\n            overlay: 'carousel-item-next'\n        },\n        prev: {\n            current: 'carousel-item-right',\n            next: 'carousel-item-left',\n            overlay: 'carousel-item-prev'\n        }\n    };\n\n    export default {\n        data() {\n            return {\n                index: 0,\n                isSliding: false,\n                slides: []\n            };\n        },\n        props: {\n            id: {\n                type: String\n            },\n            labelPrev: {\n                type: String,\n                default: 'Previous Slide'\n            },\n            labelNext: {\n                type: String,\n                default: 'Next Slide'\n            },\n            labelGotoSlide: {\n                type: String,\n                default: 'Goto Slide'\n            },\n            labelIndicators: {\n                type: String,\n                default: 'Select a slide to display'\n            },\n            interval: {\n                type: Number,\n                default: 5000\n            },\n            indicators: {\n                type: Boolean,\n                default: false\n            },\n            controls: {\n                type: Boolean,\n                default: false\n            },\n            height: {\n                type: String\n            },\n            background: {\n                type: String\n            }\n        },\n        methods: {\n            // Previous slide\n            prev() {\n                if (this.index <= 0) {\n                    this.index = this.slides.length - 1;\n                } else {\n                    this.index--;\n                }\n            },\n\n            // Next slide\n            next() {\n                if (typeof document !== 'undefined' && document.visibilityState && document.hidden) {\n                    // Don't animate when page is not visible\n                    return;\n                }\n                if (this.index >= this.slides.length - 1) {\n                    this.index = 0;\n                } else {\n                    this.index++;\n                }\n            },\n\n            // Pause auto rotation\n            pause() {\n                if (this.interval === 0 || typeof this.interval === 'undefined') {\n                    return;\n                }\n                clearInterval(this._intervalId);\n                this._intervalId = null;\n                // Make current slide focusable for screen readers\n                this.slides[this.index].tabIndex = 0;\n            },\n\n            // Start auto rotate slides\n            start() {\n                if (this.interval === 0 || typeof this.interval === 'undefined') {\n                    return;\n                }\n                this.slides.forEach(slide => {\n                    slide.tabIndex = -1;\n                });\n                this._intervalId = setInterval(() => {\n                    this.next();\n                }, this.interval);\n            },\n\n            // Re-Start auto rotate slides when focus leaves the carousel\n            restart(e) {\n                if (!e.relatedTarget || !this.$el.contains(e.relatedTarget)) {\n                    this.start();\n                }\n            }\n\n        },\n        mounted() {\n            // Get all slides\n            this.slides = arrayFrom(this.$el.querySelectorAll('.carousel-item'));\n\n            // Set first slide as active\n            this.slides[0].classList.add('active');\n            const self = this;\n            this.slides.forEach((slide, idx) => {\n                const n = idx + 1;\n                slide.setAttribute('aria-current', idx === 0 ? 'true' : 'false');\n                slide.setAttribute('aria-posinset', String(n));\n                slide.setAttribute('aria-setsize', String(self.slides.length));\n                slide.tabIndex = -1;\n                if (self.id) {\n                    slide.setAttribute('aria-controlledby', self.id + '__BV_indicator_' + n + '_');\n                }\n            });\n\n            // Auto rotate slides\n            this._intervalId = null;\n            this.start();\n        },\n        watch: {\n            index(val, oldVal) {\n                if (val === oldVal) {\n                    return;\n                }\n\n                if (this.isSliding) {\n                    this.index = oldVal;\n                    return;\n                }\n\n                // Determine sliding direction\n                let direction = (val > oldVal) ? DIRECTION.next : DIRECTION.prev;\n\n                // Rotates\n                if (oldVal === 0 && val === this.slides.length - 1) {\n                    direction = DIRECTION.prev;\n                } else if (oldVal === this.slides.length - 1 && val === 0) {\n                    direction = DIRECTION.next;\n                }\n\n                // Determine current and next slides\n                const currentSlide = this.slides[oldVal];\n                const nextSlide = this.slides[val];\n\n                if (!currentSlide || !nextSlide) {\n                    return;\n                }\n\n                // Start animating\n                this.isSliding = true;\n\n                nextSlide.classList.add(direction.next, direction.overlay);\n                currentSlide.classList.add(direction.current);\n\n                this._carouselAnimation = setTimeout(() => {\n                    this.$emit('slide', val);\n\n                    currentSlide.classList.remove('active');\n                    currentSlide.setAttribute('aria-current', 'false');\n                    currentSlide.setAttribute('aria-hidden', 'true');\n                    currentSlide.tabIndex = -1;\n                    currentSlide.classList.remove(direction.current);\n\n                    nextSlide.classList.add('active');\n                    nextSlide.setAttribute('aria-current', 'true');\n                    nextSlide.setAttribute('aria-hidden', 'false');\n                    nextSlide.tabIndex = -1;\n                    nextSlide.classList.remove(direction.next, direction.overlay);\n\n                    if (!this._intervalId) {\n                        // Focus the current slide for screen readers if not in play mode\n                        currentSlide.tabIndex = 0;\n                        this.$nextTick(() => {\n                            currentSlide.focus();\n                        });\n                    }\n\n                    this.isSliding = false;\n                }, 500);\n            }\n        },\n        destroyed() {\n            clearTimeout(this._carouselAnimation);\n            clearInterval(this._intervalId);\n        }\n    };\n\n</script>\n","<template>\n    <div class=\"carousel-item\"\n         role=\"listitem\"\n         :id=\"id || null\"\n         :style=\"{background,height}\"\n    >\n        <img class=\"d-block img-fluid\" v-if=\"img\" :src=\"img\" :alt=\"imgAlt\">\n        <div :is=\"contentTag\" :class=\"contentClasses\">\n            <h3 v-if=\"caption\" :is=\"captionTag\" v-html=\"caption\"></h3>\n            <p v-if=\"text\" :is=\"textTag\" v-html=\"text\"></p>\n            <slot></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {\n            id: {\n                type: String\n            },\n            img: {\n                type: String\n            },\n            imgAlt: {\n                type: String\n            },\n            contentVisibleUp: {\n                type: String\n            },\n            contentTag: {\n                type: String,\n                default: \"div\"\n            },\n            caption: {\n                type: String\n            },\n            captionTag: {\n                type: String,\n                default: \"h3\"\n            },\n            text: {\n                type: String\n            },\n            textTag: {\n                type: String,\n                default: \"p\"\n            },\n            background: {\n                type: String\n            },\n            height: {\n                type: String\n            }\n        },\n        computed: {\n            contentClasses() {\n                const classes = {\n                    'carousel-caption': Boolean(this.caption)\n                };\n                if (this.contentVisibleUp) {\n                    classes['d-none'] = true;\n                    classes[`d-${this.contentVisibleUp}-block`] = true;\n                }\n                return classes;\n            }\n        }\n    };\n</script>\n","<template>\n    <transition\n            @enter=\"enter\"\n            @after-enter=\"clearHeight\"\n            @leave=\"leave\"\n            @after-leave=\"clearHeight\"\n            name=\"collapse\"\n    >\n        <div :id=\"id || null\" :class=\"classObject\" v-show=\"show\">\n            <slot></slot>\n        </div>\n    </transition>\n</template>\n\n<style scoped>\n    .collapse-enter-active, .collapse-leave-active {\n        transition: all .35s ease;\n        overflow: hidden;\n    }\n</style>\n\n<script>\n    import { listenOnRootMixin } from '../mixins';\n\n    export default {\n        mixins: [listenOnRootMixin],\n        data() {\n            return {\n                show: this.visible\n            };\n        },\n        computed: {\n            classObject() {\n                return {\n                    'navbar-collapse': this.isNav,\n                    show: this.show\n                };\n            }\n        },\n        model: {\n            prop: 'visible',\n            event: 'input'\n        },\n        watch: {\n            visible(newVal) {\n                if (newVal !== this.show) {\n                    this.show = newVal;\n                    this.emitState();\n                }\n            },\n        },\n        props: {\n            isNav: {\n                type: Boolean,\n                default: false\n            },\n            id: {\n                type: String,\n                required: true\n            },\n            accordion: {\n                type: String,\n                default: null\n            },\n            visible: {\n                type: Boolean,\n                default: false\n            }\n        },\n        methods: {\n            toggle() {\n                this.show = !this.show;\n                this.emitState();\n            },\n            enter(el) {\n                el.style.height = 'auto';\n                const realHeight = getComputedStyle(el).height;\n                el.style.height = '0px';\n\n                /* eslint-disable no-unused-expressions */\n                el.offsetHeight; // Force repaint\n\n                el.style.height = realHeight;\n            },\n            leave(el) {\n                el.style.height = 'auto';\n                const realHeight = getComputedStyle(el).height;\n                el.style.height = realHeight;\n\n                /* eslint-disable no-unused-expressions */\n                el.offsetHeight; // Force repaint\n\n                el.style.height = '0px';\n            },\n            clearHeight(el) {\n                el.style.height = null;\n            },\n            emitState() {\n                this.$emit('input', this.show);\n                this.$root.$emit('collapse::toggle::state', this.id, this.show);\n                if (this.accordion && this.show) {\n                    // Tell the other collapses in this accordion to close\n                    this.$root.$emit('accordion::toggle', this.id, this.accordion);\n                }\n            },\n            handleToggleEvt(target) {\n                if (target !== this.id) {\n                    return;\n                }\n                this.toggle();\n            },\n            handleAccordionEvt(openedId, accordion) {\n                if (!this.accordion || accordion !== this.accordion) {\n                    return;\n                }\n                if (openedId === this.id) {\n                    if (!this.show) {\n                        this.toggle();\n                    }\n                } else {\n                    if (this.show) {\n                        this.toggle();\n                    }\n                }\n            }\n        },\n        created() {\n            this.listenOnRoot('collapse::toggle', this.handleToggleEvt);\n            this.listenOnRoot('accordion::toggle', this.handleAccordionEvt);\n        },\n        mounted() {\n            this.emitState();\n        }\n    };\n\n</script>\n","<template>\n    <div :id=\"id || null\" :class=\"['dropdown', 'btn-group', {dropup, show: visible}]\">\n\n        <b-button :class=\"{'dropdown-toggle': !split}\"\n                  ref=\"button\"\n                  :id=\"id ? (id + '__BV_button_') : null\"\n                  :aria-haspopup=\"split ? null : 'true'\"\n                  :aria-expanded=\"split ? null : (visible ? 'true' : 'false')\"\n                  :variant=\"variant\"\n                  :size=\"size\"\n                  :disabled=\"disabled\"\n                  @click.stop.prevent=\"click\"\n        >\n            <slot name=\"button-content\"><slot name=\"text\">{{text}}</slot></slot>\n        </b-button>\n\n        <b-button :class=\"['dropdown-toggle','dropdown-toggle-split']\"\n                  v-if=\"split\"\n                  ref=\"toggle\"\n                  :id=\"id ? (id + '__BV_toggle_') : null\"\n                  :aria-haspopup=\"split ? 'true' : null\"\n                  :aria-expanded=\"split ? (visible ? 'true' : 'false') : null\"\n                  :variant=\"variant\"\n                  :size=\"size\"\n                  :disabled=\"disabled\"\n                  @click.stop.prevent=\"toggle\"\n        >\n            <span class=\"sr-only\">{{toggleText}}</span>\n        </b-button>\n\n        <div :class=\"['dropdown-menu',{'dropdown-menu-right': right}]\"\n             ref=\"menu\"\n             role=\"menu\"\n             :aria-labelledby=\"id ? (id + (split ? '__BV_toggle_' : '__BV_button_')) : null\"\n             @keyup.esc=\"onEsc\"\n             @keydown.tab=\"onTab\"\n             @keydown.up=\"focusNext($event,true)\"\n             @keydown.down=\"focusNext($event,false)\"\n             @mouseover=\"focusHovered($event)\"\n        >\n            <slot></slot>\n        </div>\n\n    </div>\n</template>\n\n<script>\n    import { dropdownMixin } from '../mixins';\n    import bButton from './button.vue';\n\n    export default {\n        mixins: [dropdownMixin],\n        components: {bButton},\n        props: {\n            split: {\n                type: Boolean,\n                default: false\n            },\n            toggleText: {\n                type: String,\n                default: 'Toggle Dropdown'\n            },\n            size: {\n                type: String,\n                default: null\n            },\n            variant: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n    <b-link class=\"dropdown-item\"\n            role=\"menuitem\"\n            v-bind=\"linkProps\"\n            @click=\"$emit('click', $event)\">\n        <slot></slot>\n    </b-link>\n</template>\n\n<script>\nimport { props, computed } from '../mixins/link';\nimport bLink from './link.vue';\n\nexport default {\n    components: { bLink },\n    props,\n    computed: {\n        linkProps: computed.linkProps\n    }\n};\n</script>\n","<template>\n    <button class=\"dropdown-item\"\n            type=\"button\"\n            role=\"menuitem\"\n            :disabled=\"disabled\"\n            @click=\"onClick\">\n        <slot></slot>\n    </button>\n</template>\n\n<script>\nexport default {\n    props: {\n        disabled: {\n            type: Boolean,\n            default: false\n        }\n    },\n    methods: {\n        onClick(e) {\n            this.$root.$emit(\"clicked::link\", this);\n            this.$emit(\"click\", e);\n        },\n    }\n};\n</script>\n","<template>\n    <div role=\"separator\" class=\"dropdown-divider\"></div>\n</template>\n\n<script>\n    export default {\n        props: {}\n    };\n</script>\n","<template>\n    <component :is=\"tag\" tabindex=\"-1\" class=\"dropdown-header\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    export default {\n        props: {\n            tag: {\n                type: String,\n                default: 'h6'\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"dropdown-select\" :class=\"{open: show, dropdown: !dropup, dropup: dropup}\">\n        <button\n                :id=\"id\"\n                :class=\"['btn','dropdown',dropdownToggle,btnVariant,btnSize]\"\n                role=\"button\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"show\"\n                @click.prevent=\"toggle($event)\"\n                :disabled=\"disabled\">\n            <span class=\"checked-items\" v-html=\"displayItem\"></span>\n        </button>\n        <ul class=\"dropdown-menu\" :class=\"{'dropdown-menu-right' : position == 'right'}\" aria-labelledby=\"dLabel\">\n            <li v-for=\"item in list\">\n                <button class=\"dropdown-item\" :click.stop.prevent=\"select(item)\">{{item.text}}</button>\n            </li>\n        </ul>\n    </div>\n</template>\n\n\n<script>\n    export default {\n        data() {\n            return {\n                show: false,\n                selected: false\n            };\n        },\n        computed: {\n            btnVariant() {\n                return !this.variant || this.variant === `default` ? `btn-secondary` : `btn-${this.variant}`;\n            },\n            btnSize() {\n                return !this.size || this.size === `default` ? `` : `btn-${this.size}`;\n            },\n            dropdownToggle() {\n                return this.caret ? 'dropdown-toggle' : '';\n            },\n            displayItem() {\n                // If zero show default message\n                if ((this.returnObject && this.model && !this.model.text) || (!this.returnObject && this.model && this.model.length === 0) || this.forceDefault) {\n                    return this.defaultText;\n                }\n\n                // Show selected item\n                if (this.returnObject && this.model && this.model.text) {\n                    return this.model.text;\n                }\n\n                // Show text that coresponds to the model value\n                if (!this.returnObject && this.model) {\n                    let result = this.model || '';\n                    this.list.forEach(function (item) {\n                        if (item.value === this.model) {\n                            result = item.text;\n                        }\n                    });\n                    return result;\n                }\n\n                return '';\n            }\n        },\n        props: {\n            id: {\n                type: String\n            },\n            model: {\n                required: false\n            },\n            list: {\n                type: Array,\n                default: [],\n                required: true\n            },\n            caret: {\n                type: Boolean,\n                default: true\n            },\n            position: {\n                type: String,\n                default: 'left'\n            },\n            size: {\n                type: String,\n                default: ''\n            },\n            variant: {\n                type: String,\n                default: 'default'\n            },\n            defaultText: {\n                type: String,\n                default: 'Plase select one'\n            },\n            forceDefault: {\n                type: Boolean,\n                default: false\n            },\n            returnObject: {\n                type: Boolean,\n                default: false\n            },\n            dropup: {\n                type: Boolean,\n                default: false\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            }\n        },\n        methods: {\n            toggle(e) {\n                // Hide an alert\n                this.show = !this.show;\n                // Dispatch an event from the current vm that propagates all the way up to its $root\n                if (this.show) {\n                    this.$root.$emit('shown:dropdown', this.id);\n                    e.stopPropagation();\n                } else {\n                    this.$root.$emit('hidden::dropdown', this.id);\n                }\n            },\n            select(item) {\n                // We need to set empty model to make model watchers react to it\n                if (this.returnObject) {\n                    this.model = item;\n                } else {\n                    this.model = item.value;\n                }\n                this.show = false;\n                // Dispatch an event from the current vm that propagates all the way up to its $root\n                this.$root.$emit('selected::dropdown', this.id, this.model);\n            }\n        },\n        created() {\n            const hub = this.$root;\n            hub.$on('hide::dropdown', function () {\n                this.show = false;\n            });\n        }\n    };\n</script>\n","<template>\n    <form :class=\"classObject\" @submit=\"$emit('submit',$event)\">\n        <slot></slot>\n    </form>\n</template>\n\n<script>\nexport default {\n    computed: {\n        classObject() {\n            return [\n                this.inline ? 'form-inline' : ''\n            ];\n        }\n    },\n    props: {\n        inline: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n\n</script>\n","<template>\n    <div :class=\"['form-group','row',inputState]\"\n         :id=\"id || null\"\n         role=\"group\"\n         :aria-describedby=\"describedBy\"\n    >\n        <label v-if=\"label || $slots['label']\"\n               :for=\"target\"\n               :id=\"labelId\"\n               :class=\"[labelSrOnly ? 'sr-only' : 'col-form-label',labelLayout,labelAlignClass]\"\n        >\n            <slot name=\"label\"><span v-html=\"label\"></span></slot>\n        </label>\n        <div :class=\"inputLayout\" ref=\"content\">\n            <slot></slot>\n            <div v-if=\"feedback || $slots['feedback']\"\n                 class=\"form-text form-control-feedback\"\n                 :id=\"feedbackId\"\n                 role=\"alert\"\n                 aria-live=\"assertive\"\n                 aria-atomic=\"true\"\n            >\n                <slot name=\"feedback\"><span v-html=\"feedback\"></span></slot>\n            </div>\n            <small v-if=\"description || $slots['description']\"\n                   class=\"form-text text-muted\"\n                   :id=\"descriptionId\"\n            >\n                <slot name=\"description\"><span v-html=\"description\"></span></slot>\n            </small>\n        </div>\n    </div>\n</template>\n\n<script>\n    import {warn} from '../utils';\n\n    const INPUT_SELECTOR = [\n        '[role=\"radiogroup\"]',\n        'input',\n        'select',\n        'textarea',\n        '.form-control',\n        '.form-control-static',\n        '.dropdown',\n        '.dropup'\n    ].join(',');\n\n    export default {\n        data() {\n            return {\n                target: null\n            };\n        },\n        computed: {\n            labelId() {\n                return (this.id && this.label) ? (this.id + '__BV_label_') : null;\n            },\n            descriptionId() {\n                return (this.id && this.description) ? (this.id + '__BV_description_') : null;\n            },\n            feedbackId() {\n                return (this.id && this.feedback) ? (this.id + '__BV_feedback_') : null;\n            },\n            describedBy() {\n                if (this.id && (this.label || this.feedback || this.description)) {\n                    return [\n                        this.labelId,\n                        this.descriptionId,\n                        this.feedbackId\n                    ].filter(i => i).join(' ');\n                }\n                return null;\n            },\n            inputState() {\n                return this.state ? `has-${this.state}` : '';\n            },\n            computedLabelCols() {\n                if (this.labelSize) {\n                    warn('b-form-fieldset: prop label-size has been deprecated. Use label-cols instead');\n                    return this.labelSize;\n                }\n                return this.labelCols;\n            },\n            labelLayout() {\n                if (this.labelSrOnly) {\n                    return null;\n                }\n                return this.horizontal ? ('col-sm-' + this.computedLabelCols) : 'col-12';\n            },\n            labelAlignClass() {\n                if (this.labelSrOnly) {\n                    return null;\n                }\n                return this.labelTextAlign ? `text-${this.labelTextAlign}` : null;\n            },\n            inputLayout() {\n                return this.horizontal ? ('col-sm-' + (12 - this.computedLabelCols)) : 'col-12';\n            }\n        },\n        methods: {\n            updateTarget() {\n                if (this.labelFor) {\n                    // User supplied for target\n                    return this.labelFor;\n                }\n                // Else find first input with ID\n                const content = this.$refs.content;\n                if (!content) {\n                    return null;\n                }\n                const input = content.querySelector(this.inputSelector);\n                this.target = (input && input.id) ? input.id : null;\n            }\n        },\n        mounted() {\n            this.updateTarget();\n        },\n        updated() {\n            this.updateTarget();\n        },\n        props: {\n            id: {\n                type: String,\n                default: null\n            },\n            labelFor: {\n                type: String,\n                default() {\n                    if (this && this.for) {\n                        // Deprecate prop for\n                        warn(\"b-form-fieldet: prop 'for' has been deprecated. Use 'label-for' instead\");\n                        return this.for;\n                    }\n                    return null;\n                }\n            },\n            for: {\n                type: String,\n                default: null\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            horizontal: {\n                type: Boolean,\n                default: false\n            },\n            labelCols: {\n                type: Number,\n                default: 3,\n                validator(value) {\n                    if (value >= 1 && value <= 11) {\n                        return true;\n                    }\n                    warn('b-form-fieldset: label-cols must be a value between 1 and 11');\n                    return false;\n                }\n            },\n            labelSize: {\n                type: Number\n            },\n            labelTextAlign: {\n                type: String,\n                default: null\n            },\n            label: {\n                type: String,\n                default: null\n            },\n            labelSrOnly: {\n                type: Boolean,\n                default: false\n            },\n            description: {\n                type: String,\n                default: null\n            },\n            feedback: {\n                type: String,\n                default: null\n            },\n            inputSelector: {\n                type: String,\n                default: INPUT_SELECTOR\n            }\n        }\n    };\n</script>\n","<template>\n    <label :class=\"[inputClass,checkboxClass]\">\n        <input type=\"checkbox\"\n               :id=\"id || null\"\n               :name=\"name\"\n               :value=\"value\"\n               :disabled=\"disabled\"\n               :required=\"required\"\n               autocomplete=\"off\"\n               :aria-required=\"required ? 'true' : null\"\n               :class=\"[custom?'custom-control-input':null]\"\n               :checked=\"isChecked\"\n               @change=\"handleChange\">\n        <span class=\"custom-control-indicator\"\n              aria-hidden=\"true\"\n              v-if=\"custom\"></span>\n        <span :class=\"custom ? 'custom-control-description' : null\">\n            <slot></slot>\n        </span>\n    </label>\n</template>\n\n<script>\nimport { formMixin, formCustomMixin, formCheckBoxMixin } from '../mixins';\nimport { arrayIncludes, isArray } from '../utils/array';\n\nexport default {\n    mixins: [formMixin, formCustomMixin, formCheckBoxMixin],\n    model: {\n        prop: 'checked',\n        event: 'change'\n    },\n    props: {\n        value: {\n            default: true\n        },\n        uncheckedValue: {\n            default: false\n        },\n        checked: {\n            default: true\n        },\n        size: {\n            type: String,\n            default: null\n        }\n    },\n    computed: {\n        inputClass() {\n            return [\n                this.size ? `form-control-${this.size}` : null,\n                this.custom ? 'custom-checkbox' : null\n            ];\n        },\n        isChecked() {\n            if (isArray(this.checked)) {\n                return arrayIncludes(this.checked, this.value);\n            } else {\n                return this.checked === this.value;\n            }\n        }\n    },\n    methods: {\n        handleChange({ target: { checked } }) {\n            if (isArray(this.checked)) {\n                if (this.isChecked) {\n                    this.$emit('change', this.checked.filter(x => x !== this.value));\n                } else {\n                    this.$emit('change', [...this.checked, this.value]);\n                }\n            } else {\n                this.$emit('change', checked ? this.value : this.uncheckedValue)\n            }\n        }\n    }\n};\n\n</script>\n","<template>\n    <div :id=\"id || null\"\n         :class=\"inputClass\"\n         role=\"radiogroup\"\n         :aria-required=\"required ? 'true' : null\"\n         :aria-invalid=\"ariaInvalid\"\n    >\n        <label :class=\"[checkboxClass, custom?'custom-radio':null]\"\n               v-for=\"(option, idx) in formOptions\"\n        >\n            <input :id=\"id ? (id + '__BV_radio_' + idx) : null\"\n                   :class=\"custom?'custom-control-input':null\"\n                   ref=\"inputs\"\n                   type=\"radio\"\n                   autocomplete=\"off\"\n                   v-model=\"localValue\"\n                   :value=\"option.value\"\n                   :name=\"name\"\n                   :required=\"name && required\"\n                   :disabled=\"option.disabled || disabled\"\n                   @change=\"$emit('change', returnObject ? option : option.value)\"\n            >\n            <span v-if=\"custom\" class=\"custom-control-indicator\" aria-hidden=\"true\"></span>\n            <span :class=\"custom?'custom-control-description':null\" v-html=\"option.text\"></span>\n        </label>\n    </div>\n</template>\n\n<script>\n    import { formOptionsMixin, formMixin, formCustomMixin, formCheckBoxMixin } from '../mixins';\n\n    export default {\n        mixins: [formMixin, formCustomMixin, formCheckBoxMixin, formOptionsMixin],\n        data() {\n            return {\n                localValue: this.value\n            };\n        },\n        computed: {\n            inputClass() {\n                return [\n                    this.size ? `form-control-${this.size}` : null,\n                    this.state ? `has-${this.state}` : '',\n                    this.stacked ? 'custom-controls-stacked' : ''\n                 ];\n            },\n            ariaInvalid() {\n                if (this.invalid === true || this.invalid === 'true') {\n                    return 'true';\n                }\n                return null;\n            }\n        },\n        props: {\n            value: {},\n            options: {\n                type: [Array, Object],\n                default: null,\n                required: true\n            },\n            size: {\n                type: String,\n                default: null\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            invalid: {\n                type: [Boolean, String],\n                default: false\n            },\n            stacked: {\n                type: Boolean,\n                default: false\n            },\n            returnObject: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n\n</script>\n","<template>\n    <p :id=\"id || null\"\n       :class=\"inputClass\"\n       v-html=\"staticValue\"\n    >\n        <slot></slot>\n    </p>\n</template>\n\n<script>\n    export default {\n        computed: {\n            staticValue() {\n                return this.formatter ? this.formatter(this.value) : this.value;\n            },\n            inputClass() {\n                return [\n                    'form-control-static',\n                    this.size ? `form-control-${this.size}` : null,\n                    this.state ? `form-control-${this.state}` : null\n                ];\n            }\n        },\n        props: {\n            id: {\n                type: String,\n                default: null\n            },\n            value: {\n                default: null\n            },\n            formatter: {\n                type: Function\n            },\n            size: {\n                type: String,\n                default: null\n            },\n            state: {\n                type: String,\n                default: null\n            }\n        }\n    };\n\n</script>\n","<template>\n    <input v-if=\"!static\"\n           ref=\"input\"\n           :type=\"textarea ? null : type\"\n           :value=\"value\"\n           :name=\"name\"\n           :id=\"id || null\"\n           :disabled=\"disabled\"\n           :required=\"required\"\n           :aria-required=\"required ? 'true' : null\"\n           :aria-invalid=\"ariaInvalid\"\n           :readonly=\"readonly\"\n           :is=\"textarea ? 'textarea' : 'input'\"\n           :class=\"inputClass\"\n           :rows=\"textarea ? (rows || rowsCount) : null\"\n           :placeholder=\"placeholder\"\n           @input=\"onInput($event.target.value)\"\n           @change=\"onChange($event.target.value)\"\n           @keyup=\"onKeyUp($event)\"\n           @focus=\"$emit('focus')\"\n           @blur=\"$emit('blur')\"\n    />\n    <b-form-input-static v-else\n                         :id=\"id || null\"\n                         :value=\"value\"\n                         :size=\"size\"\n                         :state=\"state\"\n                         :formatter=\"formatter\"\n    ></b-form-input-static>\n</template>\n\n<script>\n    import { formMixin } from '../mixins';\n    import bFormInputStatic from './form-input-static.vue';\n\n    export default {\n        mixins: [formMixin],\n        components: {bFormInputStatic},\n        computed: {\n            rowsCount() {\n                return (this.value || '').toString().split('\\n').length;\n            },\n            inputClass() {\n                return [\n                    'form-control',\n                    this.size ? `form-control-${this.size}` : null,\n                    this.state ? `form-control-${this.state}` : null\n                ];\n            },\n            ariaInvalid() {\n                if (this.invalid === false) {\n                    return null;\n                }\n                if (this.invalid === true) {\n                    return 'true';\n                }\n                return this.invalid;\n            }\n        },\n        methods: {\n            format(value) {\n                if (this.formatter) {\n                    const formattedValue = this.formatter(value);\n                    if (formattedValue !== value) {\n                        value = formattedValue;\n                        this.$refs.input.value = formattedValue;\n                    }\n                }\n                return value;\n            },\n            onInput(value) {\n                if (!this.lazyFormatter) {\n                    value = this.format(value);\n                }\n                this.$emit('input', value);\n            },\n            onChange(value) {\n                value = this.format(value);\n                this.$emit('input', value);\n                this.$emit('change', value);\n            },\n            onKeyUp(e) {\n                this.$emit('keyup', e);\n            },\n            focus() {\n                this.$refs.input.focus();\n            }\n        },\n        props: {\n            value: {\n                default: null\n            },\n            type: {\n                type: String,\n                default: 'text'\n            },\n            size: {\n                type: String,\n                default: null\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            invalid: {\n                type: [Boolean, String],\n                default: false\n            },\n            readonly: {\n                type: Boolean,\n                default: false\n            },\n            static: {\n                type: Boolean,\n                default: false\n            },\n            placeholder: {\n                type: String,\n                default: null\n            },\n            rows: {\n                type: Number,\n                default: null\n            },\n            textarea: {\n                type: Boolean,\n                default: false\n            },\n            formatter: {\n                type: Function\n            },\n            lazyFormatter: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n\n</script>\n","<template>\n    <div :class=\"custom?'custom-file':null\"\n         :id=\"id ? (id + '__BV_file_outer_') : null\"\n         @dragover.stop.prevent=\"dragover\"\n    >\n\n        <!-- Drop Here Target -->\n        <span class=\"drop-here\"\n              v-if=\"dragging && custom\"\n              @dragover.stop.prevent=\"dragover\"\n              @drop.stop.prevent=\"drop\"\n              @dragleave.stop.prevent=\"dragging=false\"\n              :data-drop=\"dropLabel\"\n        ></span>\n\n        <!-- Real Form input -->\n        <input type=\"file\"\n               ref=\"input\"\n               :class=\"custom ? 'custom-file-input' : ''\"\n               :name=\"name\"\n               :id=\"id || null\"\n               :disabled=\"disabled\"\n               :required=\"required\"\n               :aria-required=\"required ? 'true' : null\"\n               :accept=\"accept || null\"\n               :multiple=\"multiple\"\n               :webkitdirectory=\"directory\"\n               :aria-describedby=\"(custom && id) ? (id + '__BV_file_control_') : null\"\n               @change=\"onFileChange\"\n        >\n\n        <!-- Overlay Labels -->\n        <span :class=\"['custom-file-control',dragging?'dragging':null]\"\n              :id=\"id ? (id + '__BV_file_control_') : null\"\n              :data-choose=\"computedChooseLabel\"\n              :data-selected=\"selectedLabel\"\n              v-if=\"custom\"\n        ></span>\n\n    </div>\n</template>\n\n<style scoped>\n    .custom-file-control {\n        overflow: hidden;\n    }\n\n    .custom-file-control {\n        overflow: hidden;\n    }\n\n    .custom-file-control.dragging {\n        overflow: hidden;\n        filter: blur(3px);\n    }\n\n    .custom-file-control::after {\n        content: attr(data-selected);\n    }\n\n    .custom-file-control::before {\n        content: attr(data-choose);\n    }\n\n    .custom-file .drop-here {\n        position: absolute;\n        left: 0;\n        right: 0;\n        top: 0;\n        bottom: 0;\n        background-color: rgba(0, 0, 0, .5);\n        border-radius: 3px;\n        z-index: 99999;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    .custom-file .drop-here::before {\n        color: white;\n        content: attr(data-drop);\n    }\n\n</style>\n\n<script>\n    import { formCustomMixin, formMixin } from '../mixins';\n    import { from as arrayFrom } from '../utils/array';\n\n    export default {\n        mixins: [formMixin, formCustomMixin],\n        data() {\n            return {\n                selectedFile: null,\n                dragging: false\n            };\n        },\n        computed: {\n            selectedLabel() {\n                if (!this.selectedFile || this.selectedFile.length === 0) {\n                    return this.placeholder || 'No file chosen';\n                }\n\n                if (this.multiple) {\n                    if (this.selectedFile.length === 1) {\n                        return this.selectedFile[0].name;\n                    }\n\n                    return this.selectedFormat\n                        .replace(':names', this.selectedFile.map(file => file.name).join(','))\n                        .replace(':count', this.selectedFile.length);\n                }\n\n                return this.selectedFile.name;\n            },\n            computedChooseLabel() {\n                return this.chooseLabel || (this.multiple ? 'Choose Files' : 'Choose File');\n            }\n        },\n        watch: {\n            selectedFile(newVal, oldVal) {\n                if (newVal === oldVal) {\n                    return;\n                }\n\n                if (!newVal && this.multiple) {\n                    this.$emit('input', []);\n                } else {\n                    this.$emit('input', newVal);\n                }\n            }\n        },\n        methods: {\n            reset() {\n                try {\n                    // Wrapped in try in case IE < 11 craps out\n                    this.$refs.input.value = '';\n                } catch (e) {\n                }\n\n                // IE < 11 doesn't support setting input.value to '' or null\n                // So we use this little extra hack to reset the value, just in case\n                // This also appears to work on modern browsers as well.\n                this.$refs.input.type = '';\n                this.$refs.input.type = 'file';\n\n                this.selectedFile = this.multiple ? [] : null;\n            },\n            onFileChange(e) {\n                // Always emit original event\n                this.$emit('change', e);\n\n                // Check if special `items` prop is available on event (drop mode)\n                // Can be disabled by setting no-traverse\n                const items = e.dataTransfer && e.dataTransfer.items;\n                if (items && !this.noTraverse) {\n                    const queue = [];\n                    for (let i = 0; i < items.length; i++) {\n                        const item = items[i].webkitGetAsEntry();\n                        if (item) {\n                            queue.push(this.traverseFileTree(item));\n                        }\n                    }\n                    Promise.all(queue).then(filesArr => {\n                        this.setFiles(arrayFrom(filesArr));\n                    });\n                    return;\n                }\n\n                // Normal handling\n                this.setFiles(e.target.files || e.dataTransfer.files);\n            },\n            setFiles(files) {\n                if (!files) {\n                    this.selectedFile = null;\n                    return;\n                }\n\n                if (!this.multiple) {\n                    this.selectedFile = files[0];\n                    return;\n                }\n\n                // Convert files to array\n                const filesArray = [];\n                for (let i = 0; i < files.length; i++) {\n                    if (files[i].type.match(this.accept)) {\n                        filesArray.push(files[i]);\n                    }\n                }\n\n                this.selectedFile = filesArray;\n            },\n            dragover(e) {\n                if (this.noDrop || !this.custom) {\n                    return;\n                }\n\n                this.dragging = true;\n                e.dataTransfer.dropEffect = 'copy';\n            },\n            drop(e) {\n                if (this.noDrop) {\n                    return;\n                }\n\n                this.dragging = false;\n                if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n                    this.onFileChange(e);\n                }\n            },\n            traverseFileTree(item, path) {\n                // Based on http://stackoverflow.com/questions/3590058\n                return new Promise(resolve => {\n                    path = path || '';\n                    if (item.isFile) {\n                        // Get file\n                        item.file(file => {\n                            file.$path = path; // Inject $path to file obj\n                            resolve(file);\n                        });\n                    } else if (item.isDirectory) {\n                        // Get folder contents\n                        item.createReader().readEntries(entries => {\n                            const queue = [];\n                            for (let i = 0; i < entries.length; i++) {\n                                queue.push(this.traverseFileTree(entries[i], path + item.name + '/'));\n                            }\n                            Promise.all(queue).then(filesArr => {\n                                resolve(arrayFrom(filesArr));\n                            });\n                        });\n                    }\n                });\n            }\n        },\n        props: {\n            accept: {\n                type: String,\n                default: ''\n            },\n            placeholder: {\n                type: String,\n                default: null\n            },\n            chooseLabel: {\n                type: String,\n                default: null\n            },\n            multiple: {\n                type: Boolean,\n                default: false\n            },\n            directory: {\n                type: Boolean,\n                default: false\n            },\n            noTraverse: {\n                type: Boolean,\n                default: false\n            },\n            selectedFormat: {\n                type: String,\n                default: ':count Files'\n            },\n            noDrop: {\n                type: Boolean,\n                default: false\n            },\n            dropLabel: {\n                type: String,\n                default: 'Drop files here'\n            }\n        }\n    };\n</script>\n","<template>\n    <select :class=\"inputClass\"\n            :name=\"name\"\n            :id=\"id || null\"\n            v-model=\"localValue\"\n            :disabled=\"disabled\"\n            :required=\"required\"\n            :aria-required=\"required ? 'true' : null\"\n            :aria-invalid=\"ariaInvalid\"\n            ref=\"input\"\n    >\n        <option v-for=\"option in formOptions\"\n                :value=\"option.value\"\n                v-html=\"option.text\"\n                :disabled=\"option.disabled\"\n        ></option>\n    </select>\n</template>\n\n<script>\n    import { formMixin, formOptionsMixin, formCustomMixin } from '../mixins';\n\n    export default {\n        mixins: [formMixin, formCustomMixin, formOptionsMixin],\n        data() {\n            return {\n                localValue: this.value\n            };\n        },\n        computed: {\n            inputClass() {\n                return [\n                    'form-control',\n                    this.size ? `form-control-${this.size}` : null,\n                    this.custom ? 'custom-select' : null\n                ];\n            },\n            ariaInvalid() {\n                if (this.invalid === true || this.invalid === 'true') {\n                    return 'true';\n                }\n                return null;\n            }\n        },\n        props: {\n            value: {},\n            invalid: {\n                type: [Boolean, String],\n                default: false\n            },\n            size: {\n                type: String,\n                default: null\n            },\n            options: {\n                type: [Array, Object],\n                required: true\n            },\n            returnObject: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n\n</script>\n","<template>\n    <div :class=\"['jumbotron',fluid?'jumbotron-fluid':null]\">\n        <div :class=\"containerFluid ? 'container-fluid' : 'container'\">\n            <h1 :is=\"headerTag\" v-if=\"header\" class=\"display-3\" v-html=\"header\"></h1>\n            <p v-if=\"lead\" class=\"lead\" v-html=\"lead\"></p>\n            <slot></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {},\n        props: {\n            fluid: {\n                type: Boolean,\n                default: false\n            },\n            containerFluid: {\n                type: Boolean,\n                default: false\n            },\n            header: {\n                type: String,\n                default: null\n            },\n            headerTag: {\n                type: String,\n                default: 'h1'\n            },\n            lead: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n<span :class=\"['badge',badgeVariant,badgePill]\">\n\t<slot></slot>\n</span>\n</template>\n\n<script>\n    export default {\n        computed: {\n            badgeVariant() {\n                return !this.variant || this.variant === `default` ? `badge-default` : `badge-${this.variant}`;\n            },\n            badgePill() {\n                return this.pill ? 'badge-pill' : '';\n            }\n        },\n        props: {\n            variant: {\n                type: String,\n                default: 'default'\n            },\n            pill: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"tag\" :class=\"['list-group',flush?'list-group-flush':null]\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    export default {\n        props: {\n            tag: {\n                type: String,\n                default: 'div'\n            },\n            flush: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"myTag\"\n               :class=\"classObject\"\n               ref=\"item\"\n               v-bind=\"conditionalLinkProps\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\nimport bLink from './link.vue';\nimport { props as originalLinkProps, computed, omitLinkProps } from '../mixins/link';\nimport { arrayIncludes } from '../utils/array';\nimport { assign } from '../utils/object';\n// copy link props, but exclude defaults for 'href', 'to', & 'tag'\n// to ensure proper component tag computation\nconst linkProps = assign(omitLinkProps('href', 'to'), {\n    href: { type: originalLinkProps.href.type },\n    to: { type: originalLinkProps.to.type },\n    tag: { type: originalLinkProps.tag.type }\n});\n\nconst actionTags = ['a', 'router-link', 'button', 'b-link'];\n\nexport default {\n    components: { bLink },\n\n    computed: {\n        linkProps: computed.linkProps,\n\n        classObject() {\n            return [\n                'list-group-item',\n                this.listState,\n                this.active ? 'active' : null,\n                this.disabled ? 'disabled' : null,\n                this.isAction ? 'list-group-item-action' : null\n            ];\n        },\n\n        isAction() {\n            if (this.action === false) {\n                return false;\n            }\n\n            // this previously could return a string,\n            // coercing to a boolean for more consistent expected value\n            return !!(this.action || this.to || this.href || arrayIncludes(actionTags, this.tag));\n        },\n\n        listState() {\n            return this.variant ? `list-group-item-${this.variant}` : null;\n        },\n\n        myTag() {\n            if (this.tag) {\n                return this.tag;\n            }\n\n            return (this.to || this.href) ? 'b-link' : 'div';\n        },\n\n        conditionalLinkProps() {\n            return this.myTag !== 'b-link' ? {} : this.linkProps;\n        }\n    },\n\n    // merge the link props with list-group-item props\n    props: assign(linkProps, {\n        action: {\n            type: Boolean,\n            default: null\n        },\n\n        variant: {\n            type: String,\n            default: null\n        },\n    })\n};\n</script>\n","<template>\n    <div class=\"media\">\n        <div :class=\"['d-flex','mr-3',verticalAlignClass]\"  v-if=\"!rightAlign\">\n            <slot name=\"aside\"></slot>\n        </div>\n        <div class=\"media-body\">\n            <slot></slot>\n        </div>\n        <div :class=\"['d-flex','ml-3',verticalAlignClass]\" v-if=\"rightAlign\">\n            <slot name=\"aside\"></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            verticalAlignClass() {\n                return `align-self-${this.verticalAlign}`;\n            }\n        },\n        props: {\n            rightAlign: {\n                type: Boolean,\n                default: false\n            },\n            verticalAlign: {\n                type: String,\n                default: 'top'\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"type\" :class=\"classObject\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n\nexport default {\n    computed: {\n        classObject() {\n            return {\n                nav: true,\n                'navbar-nav': this.isNavBar,\n                'nav-tabs': this.tabs,\n                'nav-pills': this.pills,\n                'flex-column': this.vertical,\n                'nav-fill': this.fill,\n                'nav-justified': this.justified\n            };\n        }\n    },\n    props: {\n        type: {\n            type: String,\n            default: 'ul'\n        },\n        fill: {\n            type: Boolean,\n            default: false\n        },\n        justified: {\n            type: Boolean,\n            default: false\n        },\n        tabs: {\n            type: Boolean,\n            default: false\n        },\n        pills: {\n            type: Boolean,\n            default: false\n        },\n        vertical: {\n            type: Boolean,\n            default: false\n        },\n        isNavBar: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n\n</script>\n","<template>\n    <li class=\"nav-item\">\n        <b-link class=\"nav-link\"\n                v-bind=\"linkProps\"\n                @click=\"$emit('click', $event)\">\n            <slot></slot>\n        </b-link>\n    </li>\n</template>\n\n<script>\nimport { props as linkProps, computed } from '../mixins/link';\nimport bLink from './link.vue';\n\nexport default {\n    components: { bLink },\n    props: linkProps,\n    computed: {\n        linkProps: computed.linkProps\n    }\n};\n</script>\n","<template>\n    <li :id=\"id || null\" :class=\"['nav-item','dropdown', {dropup, show: visible}]\">\n\n        <a :class=\"['nav-link', dropdownToggle, {disabled}]\"\n           href=\"#\"\n           ref=\"button\"\n           :id=\"id ? (id + '__BV_button_') : null\"\n           aria-haspopup=\"true\"\n           :aria-expanded=\"visible ? 'true' : 'false'\"\n           :disabled=\"disabled\"\n           @click.stop.prevent=\"toggle($event)\"\n           @keydown.enter.stop.prevent=\"toggle($event)\"\n           @keydown.space.stop.prevent=\"toggle($event)\"\n        >\n            <slot name=\"button-content\"><slot name=\"text\"><span v-html=\"text\"></span></slot></slot>\n        </a>\n\n        <div :class=\"['dropdown-menu',{'dropdown-menu-right': right}]\"\n             role=\"menu\"\n             ref=\"menu\"\n             :aria-labelledby=\"id ? (id + '__BV_button_') : null\"\n             @keyup.esc=\"onEsc\"\n             @keydown.tab=\"onTab\"\n             @keydown.up=\"focusNext($event,true)\"\n             @keydown.down=\"focusNext($event,false)\"\n             @mouseover=\"focusHovered($event)\"\n        >\n            <slot></slot>\n        </div>\n\n    </li>\n</template>\n\n<script>\n    import { dropdownMixin } from '../mixins';\n\n    export default {\n        mixins: [dropdownMixin],\n        computed: {\n            dropdownToggle() {\n                return this.noCaret ? '' : 'dropdown-toggle';\n            }\n        },\n        props: {\n            noCaret: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <button :class=\"classObject\"\n            type=\"button\"\n            :aria-label=\"label\"\n            :aria-controls=\"target.id ? target.id : target\"\n            :aria-expanded=\"toggleState ? 'true' : 'false'\"\n            @click=\"onclick\"\n    >\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n</template>\n\n<script>\nimport { listenOnRootMixin } from '../mixins';\n\nexport default {\n    mixins: [listenOnRootMixin],\n    computed: {\n        classObject() {\n            return [\n                'navbar-toggler',\n                'navbar-toggler-' + this.position\n            ];\n        }\n    },\n    data() {\n        return {\n            toggleState: false\n        };\n    },\n    props: {\n        label: {\n            type: String,\n            default: 'Toggle navigation'\n        },\n        position: {\n            type: String,\n            default: 'right'\n        },\n        target: {\n            required: true\n        }\n    },\n    methods: {\n        onclick() {\n            const target = this.target;\n            if (target.toggle) {\n                target.toggle();\n            }\n            this.$root.$emit('collapse::toggle', this.target);\n        },\n        handleStateEvt(target, state) {\n            if (target === this.target || target === this.target.id) {\n                this.toggleState = state;\n            }\n        }\n    },\n    created() {\n        this.listenOnRoot('collapse::toggle::state', this.handleStateEvt);\n    }\n};\n</script>\n","<template>\n    <nav :class=\"classObject\">\n        <slot></slot>\n    </nav>\n</template>\n\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'navbar',\n                    this.type ? `navbar-${this.type}` : null,\n                    this.variant ? `bg-${this.variant}` : null,\n                    this.fixed ? `fixed-${this.fixed}` : null,\n                    this.sticky ? 'sticky-top' : null,\n                    this.toggleable ? this.toggleableClass : null\n                ];\n            },\n            toggleableClass() {\n                let className = 'navbar-toggleable';\n\n                if (this.toggleBreakpoint) {\n                    className += `-${this.toggleBreakpoint}`;\n                }\n\n                return className;\n            }\n        },\n        props: {\n            type: {\n                type: String,\n                default: 'light'\n            },\n            variant: {\n                type: String\n            },\n            toggleable: {\n                type: Boolean,\n                default: false\n            },\n            toggleBreakpoint: {\n                type: String,\n                default: null\n            },\n            fixed: {\n                type: String\n            },\n            sticky: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <span class=\"navbar-text\">\n        <slot></slot>\n    </span>\n</template>\n\n<script>\n    export default {\n        props: {}\n    };\n</script>\n","<template>\n    <b-form :id=\"id || null\" inline>\n        <slot></slot>\n    </b-form>\n</template>\n\n<script>\n    import bForm from './form.vue';\n    \n    export default {\n        components: [bForm],\n        props: {\n            id: {\n                type: String,\n            }\n        }\n    };\n</script>\n","/**\n * @param {number} length\n * @return {Array}\n */\nexport default length => Array.apply(null, { length })\n","<template>\n    <div>\n        <span ref=\"trigger\"><slot></slot></span>\n        <div :class=\"['popover', 'fade', classState ? 'show' : '', popoverAlignment]\"\n             :style=\"popoverStyle\"\n             tabindex=\"-1\"\n             ref=\"popover\"\n             @focus=\"$emit('focus')\"\n             @blur=\"$emit('blur')\"\n        >\n            <div class=\"popover-arrow\"></div>\n            <h3 :is=\"titletag\" class=\"popover-title\" v-if=\"title\" v-html=\"title\"></h3>\n            <div class=\"popover-content\">\n                <div class=\"popover-content-wrapper\">\n                    <slot name=\"content\"><span v-html=\"content\"></span></slot>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import { popoverMixin } from '../mixins';\n\n    export default {\n        mixins: [popoverMixin],\n        props: {\n            title: {\n                type: String,\n                default: ''\n            },\n            titleTag: {\n                type: String,\n                default: 'h3'\n            },\n            content: {\n                type: String,\n                default: ''\n            },\n            popoverStyle: {\n                type: Object,\n                default: null\n            }\n        }\n    };\n\n</script>\n","<template>\n    <div class=\"progress\">\n        <transition>\n            <div role=\"progressbar\"\n                 :class=\"classObject\"\n                 :aria-valuenow=\"value\"\n                 :aria-valuemin=\"0\"\n                 :aria-valuemax=\"max\"\n                 :style=\"styleObject\"\n            >\n                <slot>\n                    <template v-if=\"showProgress\">{{progress}}%</template>\n                    <template v-else-if=\"showValue\">{{value}}</template>\n                </slot>\n            </div>\n        </transition>\n    </div>\n</template>\n\n<style>\n    .progress-bar {\n        transition: all .5s;\n    }\n</style>\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'progress-bar',\n                    this.progressVariant,\n                    (this.striped || this.animated) ? 'progress-bar-striped' : '',\n                    this.animated ? 'progress-bar-animated' : ''\n                ];\n            },\n            styleObject() {\n                return {\n                    width: this.progress + '%'\n                };\n            },\n            progressVariant() {\n                return this.variant ? `bg-${this.variant}` : null;\n            },\n            progress() {\n                const p = Math.pow(10, this.precision);\n                return Math.round((100 * p * this.value) / this.max) / p;\n            }\n        },\n        props: {\n            striped: {\n                type: Boolean,\n                default: false\n            },\n            animated: {\n                type: Boolean,\n                default: false\n            },\n            precision: {\n                type: Number,\n                default: 0\n            },\n            value: {\n                type: Number,\n                default: 0\n            },\n            max: {\n                type: Number,\n                default: 100\n            },\n            variant: {\n                type: String,\n                default: null\n            },\n            showProgress: {\n                type: Boolean,\n                default: false\n            },\n            showValue: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <table :id=\"id || null\"\n           :aria-busy=\"busy ? 'true' : 'false'\"\n           :class=\"tableClass\"\n    >\n        <thead :class=\"headClass\">\n            <tr>\n                <th v-for=\"(field,key) in fields\"\n                    @click.stop.prevent=\"headClicked($event,field,key)\"\n                    @keydown.enter.stop.prevent=\"headClicked($event,field,key)\"\n                    @keydown.space.stop.prevent=\"headClicked($event,field,key)\"\n                    :key=\"key\"\n                    :class=\"fieldClass(field,key)\"\n                    :style=\"field.thStyle || {}\"\n                    :aria-label=\"field.sortable ? ((sortDesc && sortBy === key) ? labelSortAsc : labelSortDesc) : null\"\n                    :aria-sort=\"(field.sortable && sortBy === key) ? (sortDesc ? 'descending' : 'ascending') : null\"\n                    :tabindex=\"field.sortable?'0':null\"\n                >\n                  <slot :name=\"'HEAD_'+key\" :label=\"field.label\" :column=\"key\" :field=\"field\">\n                    <div v-html=\"field.label\"></div>\n                  </slot>\n                </th>\n            </tr>\n        </thead>\n        <tfoot v-if=\"footClone\" :class=\"footClass\">\n            <tr>\n                <th v-for=\"(field,key) in fields\"\n                    @click.stop.prevent=\"headClicked($event,field,key)\"\n                    @keydown.enter.stop.prevent=\"headClicked($event,field,key)\"\n                    @keydown.space.stop.prevent=\"headClicked($event,field,key)\"\n                    :key=\"key\"\n                    :class=\"fieldClass(field,key)\"\n                    :style=\"field.thStyle || {}\"\n                    :aria-label=\"field.sortable ? ((sortDesc && sortBy === key) ? labelSortAsc : labelSortDesc) : null\"\n                    :aria-sort=\"(field.sortable && sortBy === key) ? (sortDesc ? 'descending' : 'ascending') : null\"\n                    :tabindex=\"field.sortable?'0':null\"\n                >\n                  <slot v-if=\"$scopedSlots['FOOT_'+key]\" :name=\"'FOOT_'+key\" :label=\"field.label\" :column=\"key\" :field=\"field\">\n                    <div v-html=\"field.label\"></div>\n                  </slot>\n                  <slot v-else :name=\"'HEAD_'+key\" :label=\"field.label\" :column=\"key\" :field=\"field\">\n                    <div v-html=\"field.label\"></div>\n                  </slot>\n                </th>\n            </tr>\n        </tfoot>\n        <tbody>\n            <tr v-for=\"(item,index) in _items\"\n                :key=\"index\"\n                :class=\"rowClass(item)\"\n                @click=\"rowClicked($event,item,index)\"\n                @hover=\"rowHovered($event,item,index)\"\n            >\n                <td v-for=\"(field,key) in fields\" :key=\"key\" :class=\"tdClass(field, item, key)\">\n                    <slot :name=\"key\" :value=\"item[key]\" :item=\"item\" :index=\"index\">{{item[key]}}</slot>\n                </td>\n            </tr>\n            <tr v-if=\"showEmpty && (!_items  || _items.length === 0)\">\n                <td :colspan=\"keys(fields).length\">\n                    <div v-if=\"filter\" role=\"alert\" aria-live=\"polite\">\n                        <slot name=\"emptyfiltered\">\n                            <div class=\"text-center my-2\" v-html=\"emptyFilteredText\"></div>\n                        </slot>\n                    </div>\n                    <div v-else role=\"alert\" aria-live=\"polite\">\n                        <slot name=\"empty\">\n                            <div class=\"text-center my-2\" v-html=\"emptyText\"></div>\n                        </slot>\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</template>\n\n<script>\n    import { warn } from '../utils';\n    import { keys } from '../utils/object.js';\n    import { listenOnRootMixin } from '../mixins'\n\n    const toString = v => {\n        if (!v) {\n            return '';\n        }\n        if (v instanceof Object) {\n            return keys(v).map(k => toString(v[k])).join(' ');\n        }\n        return String(v);\n    };\n\n    const recToString = (obj) => {\n        if (!(obj instanceof Object)) {\n            return '';\n        }\n\n        return toString(keys(obj).reduce((o, k) => {\n            // Ignore fields 'state' and ones that start with _\n            if (!(/^_/.test(k) || k === 'state')) {\n                o[k] = obj[k];\n            }\n            return o;\n        }, {}));\n    };\n\n    const defaultSortCompare = (a, b, sortBy) => {\n        if (typeof a[sortBy] === 'number' && typeof b[sortBy] === 'number') {\n            if (a[sortBy] < b[sortBy]) {\n                return -1;\n            } else if (a[sortBy] > b[sortBy]) {\n                return 1;\n            }\n            return 0;\n        } else {\n            return toString(a[sortBy]).localeCompare(toString(b[sortBy]), undefined, {\n                numeric: true\n            });\n        }\n    };\n\n    export default {\n        mixins: [listenOnRootMixin],\n        data() {\n            return {\n                sortBy: null,\n                sortDesc: true,\n                localItems: []\n            };\n        },\n        props: {\n            id: {\n                type: String,\n                default: ''\n            },\n            items: {\n                type: [Array, Function],\n                default() {\n                    if (this && this.itemsProvider) {\n                        // Deprecate itemsProvider\n                        warn(\"b-table: prop 'items-provider' has been deprecated. Pass a function to 'items' instead\");\n                        return this.itemsProvider;\n                    }\n                    return [];\n                }\n            },\n            fields: {\n                type: Object,\n                default: {}\n            },\n            striped: {\n                type: Boolean,\n                default: false\n            },\n            bordered: {\n                type: Boolean,\n                default: false\n            },\n            inverse: {\n                type: Boolean,\n                default: false\n            },\n            hover: {\n                type: Boolean,\n                default: false\n            },\n            small: {\n                type: Boolean,\n                default: false\n            },\n            responsive: {\n                type: Boolean,\n                default: false\n            },\n            headVariant: {\n                type: String,\n                default: ''\n            },\n            footVariant: {\n                type: String,\n                default: ''\n            },\n            perPage: {\n                type: Number,\n                default: null\n            },\n            currentPage: {\n                type: Number,\n                default: 1\n            },\n            filter: {\n                type: [String, RegExp, Function],\n                default: null\n            },\n            sortCompare: {\n                type: Function,\n                default: null\n            },\n            itemsProvider: {\n                // Deprecated in favour of items\n                type: Function,\n                default: null\n            },\n            noProviderPaging: {\n                type: Boolean,\n                default: false\n            },\n            noProviderSorting: {\n                type: Boolean,\n                default: false\n            },\n            noProviderFiltering: {\n                type: Boolean,\n                default: false\n            },\n            busy: {\n                type: Boolean,\n                default: false\n            },\n            value: {\n                type: Array,\n                default: () => []\n            },\n            footClone: {\n                type: Boolean,\n                default: false\n            },\n            labelSortAsc: {\n                type: String,\n                default: 'Click to sort Ascending'\n            },\n            labelSortDesc: {\n                type: String,\n                default: 'Click to sort Descending'\n            },\n            showEmpty: {\n                type: Boolean,\n                default: false\n            },\n            emptyText: {\n                type: String,\n                default: 'There are no records to show'\n            },\n            emptyFilteredText: {\n                type: String,\n                default: 'There are no records matching your request'\n            }\n        },\n        watch: {\n            items(newVal, oldVal) {\n                if (oldVal !== newVal) {\n                    this._providerUpdate();\n                }\n            },\n            sortDesc(newVal, oldVal) {\n                if (oldVal !== newVal && !this.noProviderSorting) {\n                    this._providerUpdate();\n                }\n            },\n            sortBy(newVal, oldVal) {\n                if (oldVal !== newVal && !this.noProviderSorting) {\n                    this._providerUpdate();\n                }\n            },\n            perPage(newVal, oldVal) {\n                if (oldVal !== newVal && !this.noProviderPaging) {\n                    this._providerUpdate();\n                }\n            },\n            currentPage(newVal, oldVal) {\n                if (oldVal !== newVal && !this.noProviderPaging) {\n                    this._providerUpdate();\n                }\n            },\n            filter(newVal, oldVal) {\n                if (oldVal !== newVal && !this.noProviderFiltering) {\n                    this._providerUpdate();\n                }\n            }\n        },\n        mounted() {\n            if (this.hasProvider) {\n                this._providerUpdate();\n            }\n            this.listenOnRoot('table::refresh', (id) => {\n                if (id === this.id) {\n                    this._providerUpdate();\n                }\n            });\n        },\n        computed: {\n            tableClass() {\n                return [\n                    'table',\n                    'b-table',\n                    this.striped ? 'table-striped' : '',\n                    this.hover ? 'table-hover' : '',\n                    this.inverse ? 'table-inverse' : '',\n                    this.bordered ? 'table-bordered' : '',\n                    this.responsive ? 'table-responsive' : '',\n                    this.small ? 'table-sm' : ''\n                ];\n            },\n            headClass() {\n                return this.headVariant ? 'thead-' + this.headVariant : '';\n            },\n            footClass() {\n                const variant = this.footVariant || this.headVariant || null;\n                return variant ? 'thead-' + variant : '';\n            },\n            hasProvider() {\n                return this.items instanceof Function;\n            },\n            providerFiltering() {\n                return Boolean(this.hasProvider && !this.noProviderFiltering);\n            },\n            providerSorting() {\n                return Boolean(this.hasProvider && !this.noProviderSorting);\n            },\n            providerPaging() {\n                return Boolean(this.hasProvider && !this.noProviderPaging);\n            },\n            context() {\n                return {\n                    perPage: this.perPage,\n                    currentPage: this.currentPage,\n                    filter: this.filter,\n                    sortBy: this.sortBy,\n                    sortDesc: this.sortDesc\n                };\n            },\n            _items() {\n                // Grab some props/data to ensure reactivity\n                const perPage = this.perPage;\n                const currentPage = this.currentPage;\n                const filter = this.filter;\n                const sortBy = this.sortBy;\n                const sortDesc = this.sortDesc;\n                const sortCompare = this.sortCompare || defaultSortCompare;\n\n                let items = this.hasProvider ? this.localItems : this.items;\n\n                if (!items) {\n                    this.$nextTick(this._providerUpdate);\n                    return [];\n                }\n\n                // Shallow copy of items, so we don't mutate the original array order/size\n                items = items.slice();\n\n                // Apply local filter\n                if (filter && !this.providerFiltering) {\n                    // Number of items before filtering\n                    const numOriginalItems = items.length;\n\n                    if (filter instanceof Function) {\n                        items = items.filter(filter);\n                    } else {\n                        let regex;\n                        if (filter instanceof RegExp) {\n                            regex = filter;\n                        } else {\n                            regex = new RegExp('.*' + filter + '.*', 'ig');\n                        }\n                        items = items.filter(item => {\n                            const test = regex.test(recToString(item));\n                            regex.lastIndex = 0;\n                            return test;\n                        });\n                    }\n\n                    if (numOriginalItems !== items.length) {\n                        // Emit a filtered notification event, as number of items has changed\n                        this.$emit('filtered', items);\n                    }\n                }\n\n                // Apply local Sort\n                if (this.sortBy && !this.providerSorting) {\n                    items = items.sort((a, b) => {\n                        const r = sortCompare(a, b, this.sortBy);\n                        return this.sortDesc ? r : r * -1;\n                    });\n                }\n\n                // Apply local pagination\n                if (perPage && !this.providerPaging) {\n                    // Grab the current page of data (which may be past filtered items)\n                    items = items.slice((currentPage - 1) * perPage, currentPage * perPage);\n                }\n\n                // Update the value model with the filtered/sorted/paginated data set\n                this.$emit('input', items);\n\n                return items;\n            }\n        },\n        methods: {\n            keys,\n            fieldClass(field, key) {\n                return [\n                    field.sortable ? 'sorting' : '',\n                    (field.sortable && this.sortBy === key) ? 'sorting_' + (this.sortDesc ? 'desc' : 'asc') : '',\n                    field.variant ? ('table-' + field.variant) : '',\n                    field.class ? field.class : '',\n                    field.thClass ? field.thClass : ''\n                ];\n            },\n            tdClass(field, item, key) {\n                let cellVariant = '';\n                if (item._cellVariants && item._cellVariants[key]) {\n                    cellVariant = (this.inverse ? 'bg-' : 'table-') + item._cellVariants[key];\n                }\n                return [\n                    (field.variant && !cellVariant) ? ((this.inverse ? 'bg-' : 'table-') + field.variant) : '',\n                    cellVariant,\n                    field.class ? field.class : '',\n                    field.tdClass ? field.tdClass : ''\n                ];\n            },\n            rowClass(item) {\n                // Prefer item._rowVariant over deprecated item.state\n                const variant = item._rowVariant || item.state || null;\n                return [\n                    variant ? ((this.inverse ? 'bg-' : 'table-') + variant) : ''\n                ];\n            },\n            rowClicked(e, item, index) {\n                if (this.busy) {\n                    // If table is busy (via provider) then don't propagate\n                    e.preventDefault();\n                    e.stopPropagation();\n                    return;\n                }\n                this.$emit('row-clicked', item, index);\n            },\n            rowHovered(e, item, index) {\n                if (this.busy) {\n                    // If table is busy (via provider) then don't propagate\n                    e.preventDefault();\n                    e.stopPropagation();\n                    return;\n                }\n                this.$emit('row-hovered', item, index);\n            },\n            headClicked(e, field, key) {\n                if (this.busy) {\n                    // If table is busy (via provider) then don't propagate\n                    e.preventDefault();\n                    e.stopPropagation();\n                    return;\n                }\n                let sortChanged = false;\n                if (!field.sortable) {\n                    if (this.sortBy) {\n                        this.sortBy = null;\n                        sortChanged = true;\n                    }\n                } else {\n                    if (key === this.sortBy) {\n                        // Change sorting direction on column\n                        this.sortDesc = !this.sortDesc;\n                    } else {\n                        // Start sorting this column descending\n                        this.sortBy = key;\n                        this.sortDesc = true;\n                    }\n                    sortChanged = true;\n                }\n                this.$emit('head-clicked', key, field);\n                if (sortChanged) {\n                    // Sorting parameters changed\n                    this.$emit('sort-changed', this.context);\n                }\n            },\n            refresh() {\n                // Expose refresh method\n                if (this.hasProvider) {\n                    this._providerUpdate();\n                }\n            },\n            _providerSetLocal(items) {\n                this.localItems = (items && items.length > 0) ? items.slice() : [];\n                this.$emit('refreshed');\n                this.emitOnRoot('table::refreshed', this.id);\n            },\n            _providerUpdate() {\n                // Refresh the provider items\n                if (this.busy || !this.hasProvider) {\n                    // Don't refresh remote data if we are 'busy' or if no provider\n                    return;\n                }\n\n                // Call provider function with context and optional callback\n                const data = this.items(this.context, this._providerSetLocal);\n\n                if (!data) {\n                    // Provider is using callback\n                    return;\n                }\n\n                if (data.then && typeof data.then === 'function') {\n                    // Provider returned Promise\n                    data.then((items) => {\n                        this._providerSetLocal(items);\n                    });\n                } else {\n                    // Provider returned Array data\n                    this._providerSetLocal(data);\n                }\n            }\n        }\n    };\n</script>\n\n<style>\n    /* Based on https://cdn.datatables.net/1.10.13/css/dataTables.bootstrap4.css */\n\n    table.b-table > thead > tr > .sorting,\n    table.b-table > tfoot > tr > .sorting {\n        padding-right: 30px;\n        cursor: pointer;\n        position: relative;\n    }\n\n    table.b-table thead > tr > .sorting:before,\n    table.b-table thead > tr > .sorting:after,\n    table.b-table tfoot > tr > .sorting:before,\n    table.b-table tfoot > tr > .sorting:after {\n        position: absolute;\n        bottom: 0.9em;\n        display: block;\n        opacity: 0.3;\n    }\n\n    table.b-table.table-sm > thead > tr > .sorting:before,\n    table.b-table.table-sm > thead > tr > .sorting:after,\n    table.b-table.table-sm > tfoot > tr > .sorting:before,\n    table.b-table.table-sm > tfoot > tr > .sorting:after {\n        bottom: 0.45em;\n    }\n\n    table.b-table > thead > tr > .sorting:before,\n    table.b-table > tfoot > tr > .sorting:before {\n        right: 1em;\n        content: \"\\2191\";\n    }\n\n    table.b-table > thead > tr > .sorting:after,\n    table.b-table > tfoot > tr > .sorting:after {\n        right: 0.5em;\n        content: \"\\2193\";\n    }\n\n    table.b-table > thead > tr > .sorting_asc:before,\n    table.b-table > thead > tr > .sorting_desc:after,\n    table.b-table > tfoot > tr > .sorting_asc:before,\n    table.b-table > tfoot > tr > .sorting_desc:after {\n        opacity: 1;\n    }\n\n    /* Busy table styling */\n\n    table.b-table[aria-busy=\"false\"] {\n        opacity: 1;\n    }\n\n    table.b-table[aria-busy=\"true\"] {\n        opacity: .6;\n    }\n</style>\n","<template>\n    <component :is=\"tag\" :id=\"id || null\" class=\"tabs\">\n        <div v-if=\"bottom\" :class=\"['tab-content',{'card-block': card}]\" ref=\"tabsContainer\">\n            <slot></slot>\n            <slot name=\"empty\" v-if=\"!tabs || !tabs.length\"></slot>\n        </div>\n\n        <div :class=\"{'card-header': card}\">\n            <ul :class=\"['nav','nav-' + navStyle, card ? 'card-header-'+navStyle : null]\"\n                role=\"tablist\"\n                tabindex=\"0\"\n                :aria-setsize=\"tabs.length\"\n                :aria-posinset=\"currentTab + 1\"\n                @keydown.left=\"previousTab\"\n                @keydown.up=\"previousTab\"\n                @keydown.right=\"nextTab\"\n                @keydown.down=\"nextTab\"\n                @keydown.shift.left=\"setTab(-1,false,1)\"\n                @keydown.shift.up=\"setTab(-1,false,1)\"\n                @keydown.shift.right=\"setTab(tabs.length,false,-1)\"\n                @keydown.shift.down=\"setTab(tabs.length,false,-1)\"\n            >\n                <li class=\"nav-item\" v-for=\"(tab, index) in tabs\" role=\"presentation\">\n                    <a :class=\"['nav-link',{small: small, active: tab.localActive, disabled: tab.disabled}]\"\n                       :href=\"tab.href\"\n                       role=\"tab\"\n                       :aria-selected=\"tab.localActive ? 'true' : 'false'\"\n                       :aria-controls=\"tab.id || null\"\n                       :id=\"tab.controlledBy || null\"\n                       @click.prevent.stop=\"setTab(index)\"\n                       @keydown.space.prevent.stop=\"setTab(index)\"\n                       @keydown.enter.prevent.stop=\"setTab(index)\"\n                       tabindex=\"-1\"\n                       v-if=\"!tab.headHtml\"\n                       v-html=\"tab.title\"\n                    ></a>\n                    <div :class=\"['tab-head',{small: small, active: tab.localActive, disabled: tab.disabled}]\"\n                         role=\"heading\"\n                         tabindex=\"-1\"\n                         v-else\n                         v-html=\"tab.headHtml\"></div>\n                </li>\n                <slot name=\"tabs\"></slot>\n            </ul>\n        </div>\n\n        <div v-if=\"!bottom\" :class=\"['tab-content',{'card-block': card}]\" ref=\"tabsContainer\">\n            <slot></slot>\n            <slot name=\"empty\" v-if=\"!tabs || !tabs.length\"></slot>\n        </div>\n    </component>\n</template>\n\n<script>\n    import {observeDom} from '../utils';\n\n    export default {\n        data() {\n            return {\n                currentTab: this.value,\n                tabs: []\n            };\n        },\n        props: {\n            id: {\n                type: String,\n                default: ''\n            },\n            tag: {\n                type: String,\n                default: 'div'\n            },\n            noFade: {\n                type: Boolean,\n                default: false\n            },\n            card: {\n                type: Boolean,\n                default: false\n            },\n            small: {\n                type: Boolean,\n                default: false\n            },\n            value: {\n                type: Number,\n                default: null\n            },\n            pills: {\n                type: Boolean,\n                default: false\n            },\n            lazy: {\n                type: Boolean,\n                default: false\n            },\n            bottom: {\n                type: Boolean,\n                default: false\n            }\n        },\n        watch: {\n            currentTab(val, old) {\n                if (val === old) {\n                    return;\n                }\n\n                this.$root.$emit('changed::tab', this, val, this.tabs[val]);\n                this.$emit('input', val);\n                this.tabs[val].$emit('click');\n            },\n            value(val, old) {\n                if (val === old) {\n                    return;\n                }\n\n                this.setTab(val);\n            },\n            fade(val, old) {\n                if (val === old) {\n                    return;\n                }\n\n                this.tabs.forEach(item => {\n                    this.$set(item, 'fade', val);\n                });\n            }\n        },\n        computed: {\n            fade() {\n                return !this.noFade;\n            },\n            navStyle() {\n                return this.pills ? 'pills' : 'tabs';\n            }\n        },\n        methods: {\n            /**\n             * Util: Return the sign of a number (as -1, 0, or 1)\n             */\n            sign(x) {\n                return (x === 0) ? 0 : (x > 0 ? 1 : -1);\n            },\n\n            /**\n             * Move to next tab\n             */\n            nextTab() {\n                this.setTab(this.currentTab, false, 1);\n            },\n\n            /**\n             * Move to previous tab\n             */\n            previousTab() {\n                this.setTab(this.currentTab, false, -1);\n            },\n\n            /**\n             * Set active tab on the tabs collection and the child 'tab' component\n             */\n            setTab(index, force, offset) {\n                offset = offset || 0;\n\n                // Prevent setting same tab!\n                if (!force && (index + offset) === this.currentTab) {\n                    return;\n                }\n\n                const tab = this.tabs[index + offset];\n\n                // Don't go beyond indexes!\n                if (!tab) {\n                    return;\n                }\n\n                // Ignore or Skip disabled\n                if (tab.disabled) {\n                    if (offset) {\n                        // Skip to next non disabled tab in offset direction (recursive)\n                        this.setTab(index, force, offset + this.sign(offset));\n                    }\n                    return;\n                }\n\n                // Activate current tab, and deactivte any old tabs\n                this.tabs.forEach( t => {\n                    if (t === tab) {\n                        // Set new tab as active\n                        this.$set(t, 'localActive', true);\n                    } else {\n                        // Ensure non current tabs are not active\n                        this.$set(tab, 'localActive', false);\n                    }\n                });\n\n                // Update currentTab\n                this.currentTab = index + offset;\n            },\n\n            /**\n             * Dynamically update tabs\n             */\n            updateTabs() {\n                // Probe tabs\n                if (this.$slots.default) {\n                    this.tabs = this.$slots.default.filter(tab => tab.componentInstance || false)\n                        .map(tab => tab.componentInstance);\n                } else {\n                    this.tabs = [];\n                }\n\n                this.tabs.forEach(tab => {\n                    this.$set(tab, 'fade', this.fade);\n                    this.$set(tab, 'lazy', this.lazy);\n                });\n\n                // Get initial active tab\n                let tabIndex = this.currentTab;\n\n                if (tabIndex === null || tabIndex === undefined) {\n                    // Make null for easier testing further on\n                    tabIndex = null;\n                }\n\n                if (tabIndex === null) {\n                    // Find last active non-dsabled tab in current tabs\n                    this.tabs.forEach((tab, index) => {\n                        if (tab.active && !tab.disabled) {\n                            tabIndex = index;\n                        }\n                    });\n                }\n\n                if (tabIndex === null) {\n                    // Find first non-disabled tab in current tabs\n                    this.tabs.forEach((tab, index) => {\n                        if (!tab.disabled && tabIndex === null) {\n                            tabIndex = index;\n                        }\n                    });\n                }\n\n                // Workaround to fix problem when currentTab is removed\n                let offset = 0;\n                if (tabIndex >= this.tabs.length) {\n                    offset = -1;\n                }\n\n                this.setTab(tabIndex || 0, true, offset);\n            }\n        },\n        mounted() {\n            this.updateTabs();\n\n            // Observe Child changes so we can notify tabs change\n            observeDom(this.$refs.tabsContainer, this.updateTabs.bind(this), {subtree: false});\n        }\n    };\n\n</script>\n","<template>\n    <transition @enter=\"enter\" @before-leave=\"beforeLeave\" mode=\"out-in\">\n        <component :is=\"tag\"\n                   :id=\"id || null\"\n                   role=\"tabpanel\"\n                   :class=\"['tab-pane', {show, fade, disabled, active: localActive}]\"\n                   :aria-hidden=\"localActive ? 'false' : 'true'\"\n                   :aria-expanded=\"localActive ? 'true' : 'false'\"\n                   :aria-lablelledby=\"controlledBy || null\"\n                   v-if=\"localActive || !lazy\"\n                   v-show=\"localActive || lazy\"\n                   ref=\"panel\"\n        >\n             <slot></slot>\n        </component>\n    </transition>\n</template>\n\n<script>\n    export default {\n        methods: {\n            enter() {\n                this.show = true;\n            },\n            beforeLeave() {\n                this.show = false;\n            }\n        },\n        data() {\n            return {\n                fade: false,\n                localActive: this.active,\n                lazy: true,\n                show: false\n            };\n        },\n        computed: {\n            controlledBy() {\n                return this.buttonId || (this.id ? (this.id + '__BV_tab_button__') : null);\n            }\n        },\n        props: {\n            id: {\n                type: String,\n                default: ''\n            },\n            tag: {\n                type: String,\n                default: 'div'\n            },\n            buttonId: {\n                type: String,\n                default: ''\n            },\n            title: {\n                type: String,\n                default: ''\n            },\n            headHtml: {\n                type: String,\n                default: null\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            },\n            active: {\n                type: Boolean,\n                default: false\n            },\n            href: {\n                type: String,\n                default: '#'\n            }\n        }\n    };\n\n</script>\n","<template>\n    <div class=\"d-inline-block\">\n        <span class=\"d-inline-block\" ref=\"trigger\"><slot></slot></span>\n        <div :class=\"['tooltip','tooltip-' + this.placement]\"\n             :style=\"{opacity:showState?1:0}\"\n             tabindex=\"-1\"\n             ref=\"popover\"\n             @focus=\"$emit('focus')\"\n             @blur=\"$emit('blur')\"\n        >\n            <div class=\"tooltip-inner\">\n                <slot name=\"content\"><span v-html=\"content\"></span></slot>\n            </div>\n        </div>\n    </div>\n</template>\n\n<style>\n    .tooltip {\n        display: block;\n        transition: all 0.3s;\n    }\n</style>\n\n<script>\n    import { popoverMixin } from '../mixins';\n\n    export default {\n        mixins: [popoverMixin],\n        props: {\n            content: {\n                type: String,\n                default: ''\n            },\n            triggers: {\n                type: [Boolean, String, Array],\n                default: 'hover'\n            }\n        }\n    };\n</script>\n","const inBrowser = typeof window !== 'undefined';\n\nimport target from './_target';\nconst listen_types = {click: true};\n\n// Property key for handler\nconst BVT = '__BV_toggle__';\n\n// Event nmmes\nconst EVENT_TOGGLE = 'collapse::toggle';\nconst EVENT_STATE = 'collapse::toggle::state';\n\nexport default {\n\n    bind(el, binding, vnode) {\n\n        const targets = target(vnode, binding, listen_types, ({targets, vnode}) => {\n            targets.forEach(target => {\n                vnode.context.$root.$emit(EVENT_TOGGLE, target);\n            });\n        });\n\n        if (inBrowser && vnode.context && targets.length > 0) {\n            // Add aria attributes to element\n            el.setAttribute('aria-controls', targets.join(' '));\n            el.setAttribute('aria-expanded', 'false');\n\n            // Toggle state hadnler, stored on element\n            el[BVT] = function toggleDirectiveHandler(id, state) {\n                if (targets.indexOf(id) !== -1) {\n                    el.setAttribute('aria-expanded', state ? 'true' : 'false');\n                }\n            };\n\n            // Listen for toggle state changes\n            vnode.context.$root.$on(EVENT_STATE, el[BVT]);\n        }\n    },\n    unbind(el, binding, vnode) {\n        if (el[BVT]) {\n            // Remove our $root listener\n            vnode.context.$root.$off(EVENT_STATE, el[BVT]);\n            el[BVT] = null;\n        }\n    }\n};\n","import target from './_target';\n\nconst listen_types = {click: true};\n\nexport default {\n// eslint-disable-next-line no-shadow-restricted-names\n    bind(undefined, binding, vnode) {\n        target(vnode, binding, listen_types, ({targets, vnode}) => {\n            targets.forEach(target => {\n                vnode.context.$root.$emit('show::modal', target, vnode.elm);\n            });\n        });\n    }\n};\n","import * as components from './components';\nimport * as directives from './directives';\n\n/* eslint-disable no-var, no-undef, guard-for-in, object-shorthand */\n\nconst VuePlugin = {\n    install: function (Vue) {\n        if (Vue._bootstrap_vue_installed) {\n            return;\n        }\n\n        Vue._bootstrap_vue_installed = true;\n\n        // Register components\n        for (var component in components) {\n            Vue.component(component, components[component]);\n        }\n\n        // Register directives\n        for (var directive in directives) {\n            Vue.directive(directive, directives[directive]);\n        }\n    }\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(VuePlugin);\n}\n\nexport default VuePlugin;\n"],"names":["observeDOM","el","callback","opts","const","MutationObserver","window","WebKitMutationObserver","eventListenerSupported","addEventListener","mutations","addedNodes","length","removedNodes","observe","assign","childList","subtree","warn","message","console","isVisible","offsetWidth","offsetHeight","filterVisible","els","filter","omitLinkProps","keys","props","reduce","memo","prop","arrayIncludes","propsToOmit","findFirstVisible","root","selector","querySelectorAll","let","arrayFrom","find","i","makePageArray","startNum","numPages","range","map","value","index","number","className","targets","vnode","binding","listen_types","fn","modifiers","t","all_listen_types","push","listener","forEach","type","elm","isElement","obj","nodeType","closest","element","$QSA","document","$QS","querySelector","getVm","__vue__","toType","toString","call","match","toLowerCase","typeCheckConfig","componentName","config","configTypes","property","Object","prototype","hasOwnProperty","expectedTypes","valueType","RegExp","test","error","ScrollSpy","this","_$el","_selector","Selector","NAV_LINKS","LIST_ITEMS","DROPDOWN_ITEMS","join","_config","Default","_offsets","_targets","_activeTarget","_scrollHeight","_$root","_resizeTimeout","updateConfig","Array","from","toStr","isCallable","toInteger","Number","isNaN","isFinite","Math","floor","abs","maxSafeInteger","pow","toLength","min","max","arrayLike","C","items","TypeError","T","mapFn","arguments","kValue","len","A","k","isArray","arg","array","indexOf","target","varArgs","to","nextSource","nextKey","render","data","countDownTimerId","dismissed","created","state","computed","classObject","alertVariant","dismissible","variant","localShow","show","String","default","Boolean","dismissLabel","watch","showChanged","mounted","methods","dismiss","$emit","clearCounter","clearInterval","dismissCountDown","setInterval","documentElement","_clickOutListener","destroyed","removeEventListener","e","$el","contains","clickOutListener","BVRL","listenOnRoot","event","$root","$on","emitOnRoot","ref","args","shift","$off","ITEM_SELECTOR","ALL_SELECTOR","mixins","listenOnRootMixin","id","text","dropup","disabled","right","visible","clickOut","old","body","children","noop","click","split","toggle","$nextTick","clearItems","item","getFirstItem","focusItem","onTab","onEsc","preventDefault","stopPropagation","$refs","button","focus","focusNext","up","getItems","focusHovered","idx","classList","add","remove","menu","name","required","checkboxClass","custom-control","custom","form-check-inline","inline","plain","formOptions","options","option","valueField","textField","selectedValue","localValue","returnObject","old_value","active","activeClass","append","exact","exactActiveClass","href","rel","replace","routerTag","tag","linkProps","isRouterLink","$router","_href","computedRel","componentTag","linkClassObject","linkClick","TRIGGER_LISTENERS","hover","mouseenter","mouseleave","blur","PLACEMENT_PARAMS","top","bottom","left","TETHER_CLASSES","enabled","constraints","debounce","validator","delay","hide","offset","placement","popoverStyle","targetOffset","triggers","triggerKeys","triggerState","classState","lastEvent","normalizedTriggers","popoverAlignment","showState","setOptions","newTriggers","oldTriggers","updateListeners","val","getDelay","clearTimeout","$data","_timeout","setTimeout","togglePopover","addListener","trigger","_trigger","eventHandler","destroyTether","_tether","destroy","regx","timeStamp","action","getTetherOptions","attachment","_popover","classes","classPrefix","hidePopover","style","display","refreshPosition","position","removeListener","showPopover","Tether","newShowState","appliedTriggers","removeTriggers","popover","updated","beforeDestroy","parentElement","removeChild","linkMixin","bLinkPropKeys","components","bLink","normalizedItems","userDefinedActive","originalItemsLength","normalizedItem","_originalItem","isLast","link","_linkProps","itemProp","ariaCurrent","onClick","originalLinkProps","btnVariant","btnSize","btnBlock","btnDisabled","componentType","block","size","btnType","conditionalLinkProps","justify","vertical","keyNav","setItemFocus","prev","focusFirst","focusLast","tabIndex","blockClass","overlay","cardVariant","cardInverse","inverse","cardAlign","align","header","headerVariant","headerClass","headerTag","footer","footerVariant","footerClass","footerTag","title","titleTag","subTitle","subTitleTag","noBlock","img","imgAlt","deck","columns","DIRECTION","next","current","isSliding","slides","labelPrev","labelNext","labelGotoSlide","labelIndicators","interval","indicators","controls","height","background","visibilityState","hidden","pause","_intervalId","start","slide","restart","relatedTarget","self","n","setAttribute","oldVal","direction","currentSlide","nextSlide","_carouselAnimation","contentVisibleUp","contentTag","caption","captionTag","textTag","contentClasses","carousel-caption","navbar-collapse","isNav","model","newVal","emitState","accordion","enter","realHeight","getComputedStyle","leave","clearHeight","handleToggleEvt","handleAccordionEvt","openedId","dropdownMixin","bButton","toggleText","selected","dropdownToggle","caret","displayItem","forceDefault","defaultText","result","list","select","INPUT_SELECTOR","labelId","label","descriptionId","description","feedbackId","feedback","describedBy","inputState","computedLabelCols","labelSize","labelCols","labelLayout","labelSrOnly","horizontal","labelAlignClass","labelTextAlign","inputLayout","updateTarget","labelFor","content","input","inputSelector","for","formMixin","formCustomMixin","formCheckBoxMixin","uncheckedValue","checked","inputClass","isChecked","handleChange","x","formOptionsMixin","stacked","ariaInvalid","invalid","staticValue","formatter","Function","bFormInputStatic","rowsCount","format","formattedValue","onInput","lazyFormatter","onChange","onKeyUp","readonly","static","placeholder","rows","textarea","selectedFile","dragging","selectedLabel","multiple","selectedFormat","file","computedChooseLabel","chooseLabel","reset","onFileChange","dataTransfer","noTraverse","setFiles","files","queue","webkitGetAsEntry","traverseFileTree","Promise","all","then","filesArr","filesArray","accept","dragover","noDrop","dropEffect","drop","path","resolve","isFile","$path","isDirectory","createReader","readEntries","entries","directory","dropLabel","fluid","containerFluid","lead","badgeVariant","badgePill","pill","flush","actionTags","listState","isAction","myTag","verticalAlignClass","rightAlign","verticalAlign","FOCUS_SELECTOR","bBtn","is_visible","return_focus","returnFocus","new_val","old_val","buttonSize","noFade","noCloseOnBackdrop","noCloseOnEsc","noAutoFocus","noEnforceFocus","hideHeader","hideFooter","hideHeaderClose","okOnly","okDisabled","headerCloseLabel","closeTitle","okTitle","enforceFocus","isOK","canceled","cancel","returnFocusTo","onClickOut","activeElement","showHandler","triggerEl","hideHandler","nav","navbar-nav","isNavBar","nav-tabs","tabs","nav-pills","pills","flex-column","nav-fill","fill","nav-justified","justified","noCaret","toggleState","onclick","handleStateEvt","fixed","sticky","toggleable","toggleableClass","toggleBreakpoint","bForm","apply","showFirstDots","showLastDots","currentPage","numberOfPages","ceil","totalRows","perPage","pageList","numLinks","limit","hideEllipsis","pages","isActive","page","pageItemClasses","pageLinkClasses","setPage","num","currentpage","focusCurrent","getButtons","btn","setBtnFocus","reverse","parseInt","getAttribute","focusPrev","buttons","newPage","oldPage","newValue","oldValue","hideGotoEndButtons","ariaLabel","labelFirstPage","firstText","labelPrevPage","prevText","labelNextPage","nextText","labelLastPage","lastText","labelPage","ellipsisText","ariaControls","popoverMixin","progressVariant","striped","animated","styleObject","width","progress","p","precision","round","showProgress","showValue","v","recToString","o","defaultSortCompare","a","b","sortBy","localeCompare","undefined","numeric","sortDesc","localItems","itemsProvider","fields","bordered","small","responsive","headVariant","footVariant","sortCompare","noProviderPaging","noProviderSorting","noProviderFiltering","busy","footClone","labelSortAsc","labelSortDesc","showEmpty","emptyText","emptyFilteredText","_providerUpdate","hasProvider","tableClass","headClass","footClass","providerFiltering","providerSorting","providerPaging","context","_items","slice","numOriginalItems","regex","lastIndex","sort","r","fieldClass","field","key","sortable","class","thClass","tdClass","cellVariant","_cellVariants","rowClass","_rowVariant","rowClicked","rowHovered","headClicked","sortChanged","refresh","_providerSetLocal","currentTab","card","lazy","setTab","fade","$set","navStyle","sign","nextTab","previousTab","force","tab","updateTabs","$slots","componentInstance","observeDom","tabsContainer","bind","beforeLeave","localActive","controlledBy","buttonId","headHtml","inBrowser","BVT","unbind","isServer","Element","s","matches","ownerDocument","BVSS","method","throttle","DefaultType","ClassName","DROPDOWN_ITEM","DROPDOWN_MENU","DROPDOWN_TOGGLE","NAV_LINK","LIST_ITEM","ACTIVE","NAV_LIST_GROUP","NAV","LIST_GROUP","DROPDOWN","OffsetMethod","OFFSET","POSITION","vm","listen","scroller","_getScroller","tagName","unListen","autoMethod","offsetMethod","offsetBase","_getScrollTop","_getScrollHeight","charAt","bcr","getBoundingClientRect","offsetTop","process","scrollTop","scrollHeight","maxScroll","_getOffsetHeight","_activate","_clear","scheduleRefresh","handleEvent","dispose","pageYOffset","innerHeight","queries","links","dropdown","_setActiveState","_setParentsSiblingActiveState","$props","previousElementSibling","inserted","update","componentUpdated","VuePlugin","install","Vue","_bootstrap_vue_installed","component","directive","directives","use"],"mappings":"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"}